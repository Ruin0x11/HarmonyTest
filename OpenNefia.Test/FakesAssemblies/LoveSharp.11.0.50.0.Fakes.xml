<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LoveSharp.11.0.50.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Love.Fakes.ShimAudio">
            <summary>Shim type of Love.Audio</summary>
        </member>
        <member name="M:Love.Fakes.ShimAudio.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimAudio.#ctor(Love.Audio)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimAudio.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimAudio.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimAudio.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.Constructor">
            <summary>Sets the Shim of Audio.Audio(Audio this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.GetActiveSourceCount">
            <summary>Sets the Shim of Audio.GetActiveSourceCount()</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.GetDistanceModel">
            <summary>Sets the Shim of Audio.GetDistanceModel()</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.GetDopplerScale">
            <summary>Sets the Shim of Audio.GetDopplerScale()</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.GetOrientation">
            <summary>Sets the Shim of Audio.GetOrientation()</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.GetOrientationVector3OutVector3Out">
            <summary>Sets the Shim of Audio.GetOrientation(Vector3* forward, Vector3* up)</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.GetPosition">
            <summary>Sets the Shim of Audio.GetPosition()</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.GetVelocity">
            <summary>Sets the Shim of Audio.GetVelocity()</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.GetVolume">
            <summary>Sets the Shim of Audio.GetVolume()</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.Init">
            <summary>Sets the Shim of Audio.Init()</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.NewSourceDecoderSourceType">
            <summary>Sets the Shim of Audio.NewSource(Decoder decoder, SourceType type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.NewSourceFileDataSourceType">
            <summary>Sets the Shim of Audio.NewSource(FileData fdata, SourceType type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.NewSourceSoundData">
            <summary>Sets the Shim of Audio.NewSource(SoundData sd)</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.NewSourceStringSourceType">
            <summary>Sets the Shim of Audio.NewSource(String filename, SourceType type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.Pause">
            <summary>Sets the Shim of Audio.Pause()</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.PauseSourceArray">
            <summary>Sets the Shim of Audio.Pause(Source[] list)</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.PlaySourceArray">
            <summary>Sets the Shim of Audio.Play(Source[] sources)</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.SetDistanceModelDistanceModel">
            <summary>Sets the Shim of Audio.SetDistanceModel(DistanceModel distancemodel_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.SetDopplerScaleSingle">
            <summary>Sets the Shim of Audio.SetDopplerScale(Single scale)</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.SetOrientationVector3Vector3">
            <summary>Sets the Shim of Audio.SetOrientation(Vector3 forward, Vector3 up)</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.SetPositionSingleSingleSingle">
            <summary>Sets the Shim of Audio.SetPosition(Single x, Single y, Single z)</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.SetVelocitySingleSingleSingle">
            <summary>Sets the Shim of Audio.SetVelocity(Single x, Single y, Single z)</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.SetVolumeSingle">
            <summary>Sets the Shim of Audio.SetVolume(Single v)</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.Stop">
            <summary>Sets the Shim of Audio.Stop()</summary>
        </member>
        <member name="P:Love.Fakes.ShimAudio.StopSourceArray">
            <summary>Sets the Shim of Audio.Stop(Source[] list)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBezierCurve">
            <summary>Shim type of Love.BezierCurve</summary>
        </member>
        <member name="M:Love.Fakes.ShimBezierCurve.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBezierCurve.#ctor(Love.BezierCurve)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBezierCurve.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.AllInstances.EvaluateDouble">
            <summary>Sets the Shim of BezierCurve.Evaluate(BezierCurve this, Double t)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.AllInstances.GetControlPointCount">
            <summary>Sets the Shim of BezierCurve.GetControlPointCount(BezierCurve this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.AllInstances.GetControlPointInt32">
            <summary>Sets the Shim of BezierCurve.GetControlPoint(BezierCurve this, Int32 idx)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.AllInstances.GetDegree">
            <summary>Sets the Shim of BezierCurve.GetDegree(BezierCurve this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.AllInstances.GetDerivative">
            <summary>Sets the Shim of BezierCurve.GetDerivative(BezierCurve this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.AllInstances.GetSegmentDoubleDouble">
            <summary>Sets the Shim of BezierCurve.GetSegment(BezierCurve this, Double t1, Double t2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.AllInstances.InsertControlPointInt32SingleSingle">
            <summary>Sets the Shim of BezierCurve.InsertControlPoint(BezierCurve this, Int32 idx, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.AllInstances.RemoveControlPointInt32">
            <summary>Sets the Shim of BezierCurve.RemoveControlPoint(BezierCurve this, Int32 idx)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.AllInstances.RenderInt32">
            <summary>Sets the Shim of BezierCurve.Render(BezierCurve this, Int32 accuracy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.AllInstances.RenderSegmentDoubleDoubleInt32">
            <summary>Sets the Shim of BezierCurve.RenderSegment(BezierCurve this, Double start, Double end, Int32 accuracy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.AllInstances.RotateDoubleSingleSingle">
            <summary>Sets the Shim of BezierCurve.Rotate(BezierCurve this, Double phi, Single ox, Single oy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.AllInstances.ScaleDoubleSingleSingle">
            <summary>Sets the Shim of BezierCurve.Scale(BezierCurve this, Double s, Single ox, Single oy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.AllInstances.SetControlPointInt32SingleSingle">
            <summary>Sets the Shim of BezierCurve.SetControlPoint(BezierCurve this, Int32 idx, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.AllInstances.TranslateSingleSingle">
            <summary>Sets the Shim of BezierCurve.Translate(BezierCurve this, Single dx, Single dy)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBezierCurve.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBezierCurve.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBezierCurve.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.Constructor">
            <summary>Sets the Shim of BezierCurve.BezierCurve(BezierCurve this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.EvaluateDouble">
            <summary>Sets the Shim of BezierCurve.Evaluate(BezierCurve this, Double t)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.GetControlPointCount">
            <summary>Sets the Shim of BezierCurve.GetControlPointCount(BezierCurve this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.GetControlPointInt32">
            <summary>Sets the Shim of BezierCurve.GetControlPoint(BezierCurve this, Int32 idx)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.GetDegree">
            <summary>Sets the Shim of BezierCurve.GetDegree(BezierCurve this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.GetDerivative">
            <summary>Sets the Shim of BezierCurve.GetDerivative(BezierCurve this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.GetSegmentDoubleDouble">
            <summary>Sets the Shim of BezierCurve.GetSegment(BezierCurve this, Double t1, Double t2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.InsertControlPointInt32SingleSingle">
            <summary>Sets the Shim of BezierCurve.InsertControlPoint(BezierCurve this, Int32 idx, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.RemoveControlPointInt32">
            <summary>Sets the Shim of BezierCurve.RemoveControlPoint(BezierCurve this, Int32 idx)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.RenderInt32">
            <summary>Sets the Shim of BezierCurve.Render(BezierCurve this, Int32 accuracy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.RenderSegmentDoubleDoubleInt32">
            <summary>Sets the Shim of BezierCurve.RenderSegment(BezierCurve this, Double start, Double end, Int32 accuracy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.RotateDoubleSingleSingle">
            <summary>Sets the Shim of BezierCurve.Rotate(BezierCurve this, Double phi, Single ox, Single oy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.ScaleDoubleSingleSingle">
            <summary>Sets the Shim of BezierCurve.Scale(BezierCurve this, Double s, Single ox, Single oy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.SetControlPointInt32SingleSingle">
            <summary>Sets the Shim of BezierCurve.SetControlPoint(BezierCurve this, Int32 idx, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBezierCurve.TranslateSingleSingle">
            <summary>Sets the Shim of BezierCurve.Translate(BezierCurve this, Single dx, Single dy)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBody">
            <summary>Shim type of Love.Body</summary>
        </member>
        <member name="M:Love.Fakes.ShimBody.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBody.#ctor(Love.Body)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBody.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.ApplyAngularImpulseSingle">
            <summary>Sets the Shim of Body.ApplyAngularImpulse(Body this, Single i)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.ApplyForceSingleSingle">
            <summary>Sets the Shim of Body.ApplyForce(Body this, Single fx, Single fy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.ApplyForceSingleSingleSingleSingle">
            <summary>Sets the Shim of Body.ApplyForce(Body this, Single fx, Single fy, Single ox, Single oy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.ApplyLinearImpulseSingleSingle">
            <summary>Sets the Shim of Body.ApplyLinearImpulse(Body this, Single jx, Single jy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.ApplyLinearImpulseSingleSingleSingleSingle">
            <summary>Sets the Shim of Body.ApplyLinearImpulse(Body this, Single jx, Single jy, Single ox, Single oy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.ApplyTorqueSingle">
            <summary>Sets the Shim of Body.ApplyTorque(Body this, Single torque)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.Destroy">
            <summary>Sets the Shim of Body.Destroy(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetAngle">
            <summary>Sets the Shim of Body.GetAngle(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetAngularDamping">
            <summary>Sets the Shim of Body.GetAngularDamping(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetAngularVelocity">
            <summary>Sets the Shim of Body.GetAngularVelocity(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetBodyType">
            <summary>Sets the Shim of Body.GetBodyType(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetContactList">
            <summary>Sets the Shim of Body.GetContactList(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetFixtureList">
            <summary>Sets the Shim of Body.GetFixtureList(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetGravityScale">
            <summary>Sets the Shim of Body.GetGravityScale(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetInertia">
            <summary>Sets the Shim of Body.GetInertia(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetJointList">
            <summary>Sets the Shim of Body.GetJointList(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetLinearDamping">
            <summary>Sets the Shim of Body.GetLinearDamping(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetLinearVelocity">
            <summary>Sets the Shim of Body.GetLinearVelocity(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetLinearVelocityFromLocalPointSingleSingle">
            <summary>Sets the Shim of Body.GetLinearVelocityFromLocalPoint(Body this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetLinearVelocityFromWorldPointSingleSingle">
            <summary>Sets the Shim of Body.GetLinearVelocityFromWorldPoint(Body this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetLocalCenter">
            <summary>Sets the Shim of Body.GetLocalCenter(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetLocalPointSingleSingle">
            <summary>Sets the Shim of Body.GetLocalPoint(Body this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetLocalPointVector2">
            <summary>Sets the Shim of Body.GetLocalPoint(Body this, Vector2 input)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetLocalVectorSingleSingle">
            <summary>Sets the Shim of Body.GetLocalVector(Body this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetLocalVectorVector2">
            <summary>Sets the Shim of Body.GetLocalVector(Body this, Vector2 input)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetMass">
            <summary>Sets the Shim of Body.GetMass(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetPosition">
            <summary>Sets the Shim of Body.GetPosition(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetTransform">
            <summary>Sets the Shim of Body.GetTransform(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetWorld">
            <summary>Sets the Shim of Body.GetWorld(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetWorldCenter">
            <summary>Sets the Shim of Body.GetWorldCenter(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetWorldPointSingleSingle">
            <summary>Sets the Shim of Body.GetWorldPoint(Body this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetWorldPointVector2">
            <summary>Sets the Shim of Body.GetWorldPoint(Body this, Vector2 input)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetWorldVectorSingleSingle">
            <summary>Sets the Shim of Body.GetWorldVector(Body this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.GetWorldVectorVector2">
            <summary>Sets the Shim of Body.GetWorldVector(Body this, Vector2 input)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.IsActive">
            <summary>Sets the Shim of Body.IsActive(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.IsAwake">
            <summary>Sets the Shim of Body.IsAwake(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.IsBullet">
            <summary>Sets the Shim of Body.IsBullet(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.IsDestroyed">
            <summary>Sets the Shim of Body.IsDestroyed(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.IsFixedRotation">
            <summary>Sets the Shim of Body.IsFixedRotation(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.IsSleepingAllowed">
            <summary>Sets the Shim of Body.IsSleepingAllowed(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.ResetMassData">
            <summary>Sets the Shim of Body.ResetMassData(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.SetActiveBoolean">
            <summary>Sets the Shim of Body.SetActive(Body this, Boolean b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.SetAngleSingle">
            <summary>Sets the Shim of Body.SetAngle(Body this, Single angle)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.SetAngularDampingSingle">
            <summary>Sets the Shim of Body.SetAngularDamping(Body this, Single angularDamping)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.SetAngularVelocitySingle">
            <summary>Sets the Shim of Body.SetAngularVelocity(Body this, Single angleVelocity)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.SetAwakeBoolean">
            <summary>Sets the Shim of Body.SetAwake(Body this, Boolean b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.SetBulletBoolean">
            <summary>Sets the Shim of Body.SetBullet(Body this, Boolean b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.SetFixedRotationBoolean">
            <summary>Sets the Shim of Body.SetFixedRotation(Body this, Boolean b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.SetGravityScaleSingle">
            <summary>Sets the Shim of Body.SetGravityScale(Body this, Single scale)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.SetInertiaSingle">
            <summary>Sets the Shim of Body.SetInertia(Body this, Single inertia)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.SetLinearDampingSingle">
            <summary>Sets the Shim of Body.SetLinearDamping(Body this, Single linerDamping)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.SetLinearVelocitySingleSingle">
            <summary>Sets the Shim of Body.SetLinearVelocity(Body this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.SetMassSingle">
            <summary>Sets the Shim of Body.SetMass(Body this, Single m)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.SetPositionSingleSingle">
            <summary>Sets the Shim of Body.SetPosition(Body this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.SetSleepingAllowedBoolean">
            <summary>Sets the Shim of Body.SetSleepingAllowed(Body this, Boolean b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.SetTypeInt32">
            <summary>Sets the Shim of Body.SetType(Body this, Int32 body_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.SetXSingle">
            <summary>Sets the Shim of Body.SetX(Body this, Single x)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.AllInstances.SetYSingle">
            <summary>Sets the Shim of Body.SetY(Body this, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.ApplyAngularImpulseSingle">
            <summary>Sets the Shim of Body.ApplyAngularImpulse(Body this, Single i)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.ApplyForceSingleSingle">
            <summary>Sets the Shim of Body.ApplyForce(Body this, Single fx, Single fy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.ApplyForceSingleSingleSingleSingle">
            <summary>Sets the Shim of Body.ApplyForce(Body this, Single fx, Single fy, Single ox, Single oy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.ApplyLinearImpulseSingleSingle">
            <summary>Sets the Shim of Body.ApplyLinearImpulse(Body this, Single jx, Single jy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.ApplyLinearImpulseSingleSingleSingleSingle">
            <summary>Sets the Shim of Body.ApplyLinearImpulse(Body this, Single jx, Single jy, Single ox, Single oy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.ApplyTorqueSingle">
            <summary>Sets the Shim of Body.ApplyTorque(Body this, Single torque)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBody.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBody.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBody.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.Constructor">
            <summary>Sets the Shim of Body.Body(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.Destroy">
            <summary>Sets the Shim of Body.Destroy(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetAngle">
            <summary>Sets the Shim of Body.GetAngle(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetAngularDamping">
            <summary>Sets the Shim of Body.GetAngularDamping(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetAngularVelocity">
            <summary>Sets the Shim of Body.GetAngularVelocity(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetBodyType">
            <summary>Sets the Shim of Body.GetBodyType(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetContactList">
            <summary>Sets the Shim of Body.GetContactList(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetFixtureList">
            <summary>Sets the Shim of Body.GetFixtureList(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetGravityScale">
            <summary>Sets the Shim of Body.GetGravityScale(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetInertia">
            <summary>Sets the Shim of Body.GetInertia(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetJointList">
            <summary>Sets the Shim of Body.GetJointList(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetLinearDamping">
            <summary>Sets the Shim of Body.GetLinearDamping(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetLinearVelocity">
            <summary>Sets the Shim of Body.GetLinearVelocity(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetLinearVelocityFromLocalPointSingleSingle">
            <summary>Sets the Shim of Body.GetLinearVelocityFromLocalPoint(Body this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetLinearVelocityFromWorldPointSingleSingle">
            <summary>Sets the Shim of Body.GetLinearVelocityFromWorldPoint(Body this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetLocalCenter">
            <summary>Sets the Shim of Body.GetLocalCenter(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetLocalPointSingleSingle">
            <summary>Sets the Shim of Body.GetLocalPoint(Body this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetLocalPointVector2">
            <summary>Sets the Shim of Body.GetLocalPoint(Body this, Vector2 input)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetLocalVectorSingleSingle">
            <summary>Sets the Shim of Body.GetLocalVector(Body this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetLocalVectorVector2">
            <summary>Sets the Shim of Body.GetLocalVector(Body this, Vector2 input)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetMass">
            <summary>Sets the Shim of Body.GetMass(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetPosition">
            <summary>Sets the Shim of Body.GetPosition(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetTransform">
            <summary>Sets the Shim of Body.GetTransform(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetWorld">
            <summary>Sets the Shim of Body.GetWorld(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetWorldCenter">
            <summary>Sets the Shim of Body.GetWorldCenter(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetWorldPointSingleSingle">
            <summary>Sets the Shim of Body.GetWorldPoint(Body this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetWorldPointVector2">
            <summary>Sets the Shim of Body.GetWorldPoint(Body this, Vector2 input)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetWorldVectorSingleSingle">
            <summary>Sets the Shim of Body.GetWorldVector(Body this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.GetWorldVectorVector2">
            <summary>Sets the Shim of Body.GetWorldVector(Body this, Vector2 input)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.IsActive">
            <summary>Sets the Shim of Body.IsActive(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.IsAwake">
            <summary>Sets the Shim of Body.IsAwake(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.IsBullet">
            <summary>Sets the Shim of Body.IsBullet(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.IsDestroyed">
            <summary>Sets the Shim of Body.IsDestroyed(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.IsFixedRotation">
            <summary>Sets the Shim of Body.IsFixedRotation(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.IsSleepingAllowed">
            <summary>Sets the Shim of Body.IsSleepingAllowed(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.ResetMassData">
            <summary>Sets the Shim of Body.ResetMassData(Body this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.SetActiveBoolean">
            <summary>Sets the Shim of Body.SetActive(Body this, Boolean b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.SetAngleSingle">
            <summary>Sets the Shim of Body.SetAngle(Body this, Single angle)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.SetAngularDampingSingle">
            <summary>Sets the Shim of Body.SetAngularDamping(Body this, Single angularDamping)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.SetAngularVelocitySingle">
            <summary>Sets the Shim of Body.SetAngularVelocity(Body this, Single angleVelocity)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.SetAwakeBoolean">
            <summary>Sets the Shim of Body.SetAwake(Body this, Boolean b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.SetBulletBoolean">
            <summary>Sets the Shim of Body.SetBullet(Body this, Boolean b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.SetFixedRotationBoolean">
            <summary>Sets the Shim of Body.SetFixedRotation(Body this, Boolean b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.SetGravityScaleSingle">
            <summary>Sets the Shim of Body.SetGravityScale(Body this, Single scale)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.SetInertiaSingle">
            <summary>Sets the Shim of Body.SetInertia(Body this, Single inertia)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.SetLinearDampingSingle">
            <summary>Sets the Shim of Body.SetLinearDamping(Body this, Single linerDamping)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.SetLinearVelocitySingleSingle">
            <summary>Sets the Shim of Body.SetLinearVelocity(Body this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.SetMassSingle">
            <summary>Sets the Shim of Body.SetMass(Body this, Single m)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.SetPositionSingleSingle">
            <summary>Sets the Shim of Body.SetPosition(Body this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.SetSleepingAllowedBoolean">
            <summary>Sets the Shim of Body.SetSleepingAllowed(Body this, Boolean b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.SetTypeInt32">
            <summary>Sets the Shim of Body.SetType(Body this, Int32 body_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.SetXSingle">
            <summary>Sets the Shim of Body.SetX(Body this, Single x)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBody.SetYSingle">
            <summary>Sets the Shim of Body.SetY(Body this, Single y)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot">
            <summary>Shim type of Love.Boot</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.GetLibraryFuncString">
            <summary>Sets the Shim of Boot.GetLibraryFunc(String name)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.InitBootConfig">
            <summary>Sets the Shim of Boot.Init(BootConfig bootConfig)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.InitNativeLibrary">
            <summary>Sets the Shim of Boot.InitNativeLibrary()</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.LoopBootConfigScene">
            <summary>Sets the Shim of Boot.Loop(BootConfig bootConfig, Scene scene)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.LoopErrorSceneSceneException">
            <summary>Sets the Shim of Boot.LoopErrorScene(Scene scene, Exception e)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.RunSceneBootConfig">
            <summary>Sets the Shim of Boot.Run(Scene scene, BootConfig bootConfig)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig">
            <summary>Shim type of Love.Boot.SystemStepConfig</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.#ctor(Love.Boot.SystemStepConfig)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.AllInstances.GenScen">
            <summary>Sets the Shim of SystemStepConfig.GenScen(SystemStepConfig this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.Constructor">
            <summary>Sets the Shim of SystemStepConfig.SystemStepConfig(SystemStepConfig this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.GenScen">
            <summary>Sets the Shim of SystemStepConfig.GenScen(SystemStepConfig this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDirectoryDroppedDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.DirectoryDroppedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDirectoryDroppedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDirectoryDroppedDelegate.#ctor(Love.Boot.SystemStepConfig.DirectoryDroppedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDirectoryDroppedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDirectoryDroppedDelegate.AllInstances.BeginInvokeStringAsyncCallbackObject">
            <summary>Sets the Shim of DirectoryDroppedDelegate.BeginInvoke(DirectoryDroppedDelegate this, String path, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDirectoryDroppedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of DirectoryDroppedDelegate.EndInvoke(DirectoryDroppedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDirectoryDroppedDelegate.AllInstances.InvokeString">
            <summary>Sets the Shim of DirectoryDroppedDelegate.Invoke(DirectoryDroppedDelegate this, String path)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDirectoryDroppedDelegate.BeginInvokeStringAsyncCallbackObject">
            <summary>Sets the Shim of DirectoryDroppedDelegate.BeginInvoke(DirectoryDroppedDelegate this, String path, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDirectoryDroppedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDirectoryDroppedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDirectoryDroppedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDirectoryDroppedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDirectoryDroppedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDirectoryDroppedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of DirectoryDroppedDelegate.DirectoryDroppedDelegate(DirectoryDroppedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDirectoryDroppedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of DirectoryDroppedDelegate.EndInvoke(DirectoryDroppedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDirectoryDroppedDelegate.InvokeString">
            <summary>Sets the Shim of DirectoryDroppedDelegate.Invoke(DirectoryDroppedDelegate this, String path)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDrawDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.DrawDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDrawDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDrawDelegate.#ctor(Love.Boot.SystemStepConfig.DrawDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDrawDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDrawDelegate.AllInstances.BeginInvokeAsyncCallbackObject">
            <summary>Sets the Shim of DrawDelegate.BeginInvoke(DrawDelegate this, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDrawDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of DrawDelegate.EndInvoke(DrawDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDrawDelegate.AllInstances.Invoke">
            <summary>Sets the Shim of DrawDelegate.Invoke(DrawDelegate this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDrawDelegate.BeginInvokeAsyncCallbackObject">
            <summary>Sets the Shim of DrawDelegate.BeginInvoke(DrawDelegate this, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDrawDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDrawDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDrawDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDrawDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDrawDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDrawDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of DrawDelegate.DrawDelegate(DrawDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDrawDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of DrawDelegate.EndInvoke(DrawDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimDrawDelegate.Invoke">
            <summary>Sets the Shim of DrawDelegate.Invoke(DrawDelegate this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimFileDroppedDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.FileDroppedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimFileDroppedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimFileDroppedDelegate.#ctor(Love.Boot.SystemStepConfig.FileDroppedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimFileDroppedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimFileDroppedDelegate.AllInstances.BeginInvokeStringAsyncCallbackObject">
            <summary>Sets the Shim of FileDroppedDelegate.BeginInvoke(FileDroppedDelegate this, String fileFilePath, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimFileDroppedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of FileDroppedDelegate.EndInvoke(FileDroppedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimFileDroppedDelegate.AllInstances.InvokeString">
            <summary>Sets the Shim of FileDroppedDelegate.Invoke(FileDroppedDelegate this, String fileFilePath)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimFileDroppedDelegate.BeginInvokeStringAsyncCallbackObject">
            <summary>Sets the Shim of FileDroppedDelegate.BeginInvoke(FileDroppedDelegate this, String fileFilePath, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimFileDroppedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimFileDroppedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimFileDroppedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimFileDroppedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimFileDroppedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimFileDroppedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of FileDroppedDelegate.FileDroppedDelegate(FileDroppedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimFileDroppedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of FileDroppedDelegate.EndInvoke(FileDroppedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimFileDroppedDelegate.InvokeString">
            <summary>Sets the Shim of FileDroppedDelegate.Invoke(FileDroppedDelegate this, String fileFilePath)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAddedDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.JoystickAddedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAddedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAddedDelegate.#ctor(Love.Boot.SystemStepConfig.JoystickAddedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAddedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAddedDelegate.AllInstances.BeginInvokeJoystickAsyncCallbackObject">
            <summary>Sets the Shim of JoystickAddedDelegate.BeginInvoke(JoystickAddedDelegate this, Joystick joystick, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAddedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickAddedDelegate.EndInvoke(JoystickAddedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAddedDelegate.AllInstances.InvokeJoystick">
            <summary>Sets the Shim of JoystickAddedDelegate.Invoke(JoystickAddedDelegate this, Joystick joystick)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAddedDelegate.BeginInvokeJoystickAsyncCallbackObject">
            <summary>Sets the Shim of JoystickAddedDelegate.BeginInvoke(JoystickAddedDelegate this, Joystick joystick, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAddedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAddedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAddedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAddedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAddedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAddedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of JoystickAddedDelegate.JoystickAddedDelegate(JoystickAddedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAddedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickAddedDelegate.EndInvoke(JoystickAddedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAddedDelegate.InvokeJoystick">
            <summary>Sets the Shim of JoystickAddedDelegate.Invoke(JoystickAddedDelegate this, Joystick joystick)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAxisDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.JoystickAxisDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAxisDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAxisDelegate.#ctor(Love.Boot.SystemStepConfig.JoystickAxisDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAxisDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAxisDelegate.AllInstances.BeginInvokeJoystickSingleSingleAsyncCallbackObject">
            <summary>Sets the Shim of JoystickAxisDelegate.BeginInvoke(JoystickAxisDelegate this, Joystick joystick, Single axis, Single value, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAxisDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickAxisDelegate.EndInvoke(JoystickAxisDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAxisDelegate.AllInstances.InvokeJoystickSingleSingle">
            <summary>Sets the Shim of JoystickAxisDelegate.Invoke(JoystickAxisDelegate this, Joystick joystick, Single axis, Single value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAxisDelegate.BeginInvokeJoystickSingleSingleAsyncCallbackObject">
            <summary>Sets the Shim of JoystickAxisDelegate.BeginInvoke(JoystickAxisDelegate this, Joystick joystick, Single axis, Single value, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAxisDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAxisDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAxisDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAxisDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAxisDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAxisDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of JoystickAxisDelegate.JoystickAxisDelegate(JoystickAxisDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAxisDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickAxisDelegate.EndInvoke(JoystickAxisDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickAxisDelegate.InvokeJoystickSingleSingle">
            <summary>Sets the Shim of JoystickAxisDelegate.Invoke(JoystickAxisDelegate this, Joystick joystick, Single axis, Single value)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadAxisDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.JoystickGamepadAxisDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadAxisDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadAxisDelegate.#ctor(Love.Boot.SystemStepConfig.JoystickGamepadAxisDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadAxisDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadAxisDelegate.AllInstances.BeginInvokeJoystickGamepadAxisSingleAsyncCallbackObject">
            <summary>Sets the Shim of JoystickGamepadAxisDelegate.BeginInvoke(JoystickGamepadAxisDelegate this, Joystick joystick, GamepadAxis axis, Single value, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadAxisDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickGamepadAxisDelegate.EndInvoke(JoystickGamepadAxisDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadAxisDelegate.AllInstances.InvokeJoystickGamepadAxisSingle">
            <summary>Sets the Shim of JoystickGamepadAxisDelegate.Invoke(JoystickGamepadAxisDelegate this, Joystick joystick, GamepadAxis axis, Single value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadAxisDelegate.BeginInvokeJoystickGamepadAxisSingleAsyncCallbackObject">
            <summary>Sets the Shim of JoystickGamepadAxisDelegate.BeginInvoke(JoystickGamepadAxisDelegate this, Joystick joystick, GamepadAxis axis, Single value, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadAxisDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadAxisDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadAxisDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadAxisDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadAxisDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadAxisDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of JoystickGamepadAxisDelegate.JoystickGamepadAxisDelegate(JoystickGamepadAxisDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadAxisDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickGamepadAxisDelegate.EndInvoke(JoystickGamepadAxisDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadAxisDelegate.InvokeJoystickGamepadAxisSingle">
            <summary>Sets the Shim of JoystickGamepadAxisDelegate.Invoke(JoystickGamepadAxisDelegate this, Joystick joystick, GamepadAxis axis, Single value)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadPressedDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.JoystickGamepadPressedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadPressedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadPressedDelegate.#ctor(Love.Boot.SystemStepConfig.JoystickGamepadPressedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadPressedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadPressedDelegate.AllInstances.BeginInvokeJoystickGamepadButtonAsyncCallbackObject">
            <summary>Sets the Shim of JoystickGamepadPressedDelegate.BeginInvoke(JoystickGamepadPressedDelegate this, Joystick joystick, GamepadButton button, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadPressedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickGamepadPressedDelegate.EndInvoke(JoystickGamepadPressedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadPressedDelegate.AllInstances.InvokeJoystickGamepadButton">
            <summary>Sets the Shim of JoystickGamepadPressedDelegate.Invoke(JoystickGamepadPressedDelegate this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadPressedDelegate.BeginInvokeJoystickGamepadButtonAsyncCallbackObject">
            <summary>Sets the Shim of JoystickGamepadPressedDelegate.BeginInvoke(JoystickGamepadPressedDelegate this, Joystick joystick, GamepadButton button, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadPressedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadPressedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadPressedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadPressedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadPressedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadPressedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of JoystickGamepadPressedDelegate.JoystickGamepadPressedDelegate(JoystickGamepadPressedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadPressedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickGamepadPressedDelegate.EndInvoke(JoystickGamepadPressedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadPressedDelegate.InvokeJoystickGamepadButton">
            <summary>Sets the Shim of JoystickGamepadPressedDelegate.Invoke(JoystickGamepadPressedDelegate this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadReleasedDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.JoystickGamepadReleasedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadReleasedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadReleasedDelegate.#ctor(Love.Boot.SystemStepConfig.JoystickGamepadReleasedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadReleasedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadReleasedDelegate.AllInstances.BeginInvokeJoystickGamepadButtonAsyncCallbackObject">
            <summary>Sets the Shim of JoystickGamepadReleasedDelegate.BeginInvoke(JoystickGamepadReleasedDelegate this, Joystick joystick, GamepadButton button, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadReleasedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickGamepadReleasedDelegate.EndInvoke(JoystickGamepadReleasedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadReleasedDelegate.AllInstances.InvokeJoystickGamepadButton">
            <summary>Sets the Shim of JoystickGamepadReleasedDelegate.Invoke(JoystickGamepadReleasedDelegate this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadReleasedDelegate.BeginInvokeJoystickGamepadButtonAsyncCallbackObject">
            <summary>Sets the Shim of JoystickGamepadReleasedDelegate.BeginInvoke(JoystickGamepadReleasedDelegate this, Joystick joystick, GamepadButton button, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadReleasedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadReleasedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadReleasedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadReleasedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadReleasedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadReleasedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of JoystickGamepadReleasedDelegate.JoystickGamepadReleasedDelegate(JoystickGamepadReleasedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadReleasedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickGamepadReleasedDelegate.EndInvoke(JoystickGamepadReleasedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickGamepadReleasedDelegate.InvokeJoystickGamepadButton">
            <summary>Sets the Shim of JoystickGamepadReleasedDelegate.Invoke(JoystickGamepadReleasedDelegate this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickHatDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.JoystickHatDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickHatDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickHatDelegate.#ctor(Love.Boot.SystemStepConfig.JoystickHatDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickHatDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickHatDelegate.AllInstances.BeginInvokeJoystickInt32JoystickHatAsyncCallbackObject">
            <summary>Sets the Shim of JoystickHatDelegate.BeginInvoke(JoystickHatDelegate this, Joystick joystick, Int32 hat, JoystickHat direction, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickHatDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickHatDelegate.EndInvoke(JoystickHatDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickHatDelegate.AllInstances.InvokeJoystickInt32JoystickHat">
            <summary>Sets the Shim of JoystickHatDelegate.Invoke(JoystickHatDelegate this, Joystick joystick, Int32 hat, JoystickHat direction)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickHatDelegate.BeginInvokeJoystickInt32JoystickHatAsyncCallbackObject">
            <summary>Sets the Shim of JoystickHatDelegate.BeginInvoke(JoystickHatDelegate this, Joystick joystick, Int32 hat, JoystickHat direction, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickHatDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickHatDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickHatDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickHatDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickHatDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickHatDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of JoystickHatDelegate.JoystickHatDelegate(JoystickHatDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickHatDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickHatDelegate.EndInvoke(JoystickHatDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickHatDelegate.InvokeJoystickInt32JoystickHat">
            <summary>Sets the Shim of JoystickHatDelegate.Invoke(JoystickHatDelegate this, Joystick joystick, Int32 hat, JoystickHat direction)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickPressedDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.JoystickPressedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickPressedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickPressedDelegate.#ctor(Love.Boot.SystemStepConfig.JoystickPressedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickPressedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickPressedDelegate.AllInstances.BeginInvokeJoystickInt32AsyncCallbackObject">
            <summary>Sets the Shim of JoystickPressedDelegate.BeginInvoke(JoystickPressedDelegate this, Joystick joystick, Int32 button, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickPressedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickPressedDelegate.EndInvoke(JoystickPressedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickPressedDelegate.AllInstances.InvokeJoystickInt32">
            <summary>Sets the Shim of JoystickPressedDelegate.Invoke(JoystickPressedDelegate this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickPressedDelegate.BeginInvokeJoystickInt32AsyncCallbackObject">
            <summary>Sets the Shim of JoystickPressedDelegate.BeginInvoke(JoystickPressedDelegate this, Joystick joystick, Int32 button, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickPressedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickPressedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickPressedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickPressedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickPressedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickPressedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of JoystickPressedDelegate.JoystickPressedDelegate(JoystickPressedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickPressedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickPressedDelegate.EndInvoke(JoystickPressedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickPressedDelegate.InvokeJoystickInt32">
            <summary>Sets the Shim of JoystickPressedDelegate.Invoke(JoystickPressedDelegate this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickReleasedDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.JoystickReleasedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickReleasedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickReleasedDelegate.#ctor(Love.Boot.SystemStepConfig.JoystickReleasedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickReleasedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickReleasedDelegate.AllInstances.BeginInvokeJoystickInt32AsyncCallbackObject">
            <summary>Sets the Shim of JoystickReleasedDelegate.BeginInvoke(JoystickReleasedDelegate this, Joystick joystick, Int32 button, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickReleasedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickReleasedDelegate.EndInvoke(JoystickReleasedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickReleasedDelegate.AllInstances.InvokeJoystickInt32">
            <summary>Sets the Shim of JoystickReleasedDelegate.Invoke(JoystickReleasedDelegate this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickReleasedDelegate.BeginInvokeJoystickInt32AsyncCallbackObject">
            <summary>Sets the Shim of JoystickReleasedDelegate.BeginInvoke(JoystickReleasedDelegate this, Joystick joystick, Int32 button, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickReleasedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickReleasedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickReleasedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickReleasedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickReleasedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickReleasedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of JoystickReleasedDelegate.JoystickReleasedDelegate(JoystickReleasedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickReleasedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickReleasedDelegate.EndInvoke(JoystickReleasedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickReleasedDelegate.InvokeJoystickInt32">
            <summary>Sets the Shim of JoystickReleasedDelegate.Invoke(JoystickReleasedDelegate this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickRemovedDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.JoystickRemovedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickRemovedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickRemovedDelegate.#ctor(Love.Boot.SystemStepConfig.JoystickRemovedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickRemovedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickRemovedDelegate.AllInstances.BeginInvokeJoystickAsyncCallbackObject">
            <summary>Sets the Shim of JoystickRemovedDelegate.BeginInvoke(JoystickRemovedDelegate this, Joystick joystick, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickRemovedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickRemovedDelegate.EndInvoke(JoystickRemovedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickRemovedDelegate.AllInstances.InvokeJoystick">
            <summary>Sets the Shim of JoystickRemovedDelegate.Invoke(JoystickRemovedDelegate this, Joystick joystick)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickRemovedDelegate.BeginInvokeJoystickAsyncCallbackObject">
            <summary>Sets the Shim of JoystickRemovedDelegate.BeginInvoke(JoystickRemovedDelegate this, Joystick joystick, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickRemovedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickRemovedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickRemovedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickRemovedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickRemovedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickRemovedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of JoystickRemovedDelegate.JoystickRemovedDelegate(JoystickRemovedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickRemovedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickRemovedDelegate.EndInvoke(JoystickRemovedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimJoystickRemovedDelegate.InvokeJoystick">
            <summary>Sets the Shim of JoystickRemovedDelegate.Invoke(JoystickRemovedDelegate this, Joystick joystick)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyPressedDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.KeyPressedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyPressedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyPressedDelegate.#ctor(Love.Boot.SystemStepConfig.KeyPressedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyPressedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyPressedDelegate.AllInstances.BeginInvokeKeyConstantScancodeBooleanAsyncCallbackObject">
            <summary>Sets the Shim of KeyPressedDelegate.BeginInvoke(KeyPressedDelegate this, KeyConstant key, Scancode scancode, Boolean isRepeat, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyPressedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of KeyPressedDelegate.EndInvoke(KeyPressedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyPressedDelegate.AllInstances.InvokeKeyConstantScancodeBoolean">
            <summary>Sets the Shim of KeyPressedDelegate.Invoke(KeyPressedDelegate this, KeyConstant key, Scancode scancode, Boolean isRepeat)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyPressedDelegate.BeginInvokeKeyConstantScancodeBooleanAsyncCallbackObject">
            <summary>Sets the Shim of KeyPressedDelegate.BeginInvoke(KeyPressedDelegate this, KeyConstant key, Scancode scancode, Boolean isRepeat, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyPressedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyPressedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyPressedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyPressedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyPressedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyPressedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of KeyPressedDelegate.KeyPressedDelegate(KeyPressedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyPressedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of KeyPressedDelegate.EndInvoke(KeyPressedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyPressedDelegate.InvokeKeyConstantScancodeBoolean">
            <summary>Sets the Shim of KeyPressedDelegate.Invoke(KeyPressedDelegate this, KeyConstant key, Scancode scancode, Boolean isRepeat)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyReleasedDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.KeyReleasedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyReleasedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyReleasedDelegate.#ctor(Love.Boot.SystemStepConfig.KeyReleasedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyReleasedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyReleasedDelegate.AllInstances.BeginInvokeKeyConstantScancodeAsyncCallbackObject">
            <summary>Sets the Shim of KeyReleasedDelegate.BeginInvoke(KeyReleasedDelegate this, KeyConstant key, Scancode scancode, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyReleasedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of KeyReleasedDelegate.EndInvoke(KeyReleasedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyReleasedDelegate.AllInstances.InvokeKeyConstantScancode">
            <summary>Sets the Shim of KeyReleasedDelegate.Invoke(KeyReleasedDelegate this, KeyConstant key, Scancode scancode)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyReleasedDelegate.BeginInvokeKeyConstantScancodeAsyncCallbackObject">
            <summary>Sets the Shim of KeyReleasedDelegate.BeginInvoke(KeyReleasedDelegate this, KeyConstant key, Scancode scancode, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyReleasedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyReleasedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyReleasedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyReleasedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyReleasedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyReleasedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of KeyReleasedDelegate.KeyReleasedDelegate(KeyReleasedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyReleasedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of KeyReleasedDelegate.EndInvoke(KeyReleasedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimKeyReleasedDelegate.InvokeKeyConstantScancode">
            <summary>Sets the Shim of KeyReleasedDelegate.Invoke(KeyReleasedDelegate this, KeyConstant key, Scancode scancode)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLoadDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.LoadDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLoadDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLoadDelegate.#ctor(Love.Boot.SystemStepConfig.LoadDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLoadDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLoadDelegate.AllInstances.BeginInvokeAsyncCallbackObject">
            <summary>Sets the Shim of LoadDelegate.BeginInvoke(LoadDelegate this, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLoadDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of LoadDelegate.EndInvoke(LoadDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLoadDelegate.AllInstances.Invoke">
            <summary>Sets the Shim of LoadDelegate.Invoke(LoadDelegate this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLoadDelegate.BeginInvokeAsyncCallbackObject">
            <summary>Sets the Shim of LoadDelegate.BeginInvoke(LoadDelegate this, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLoadDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLoadDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLoadDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLoadDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLoadDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLoadDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of LoadDelegate.LoadDelegate(LoadDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLoadDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of LoadDelegate.EndInvoke(LoadDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLoadDelegate.Invoke">
            <summary>Sets the Shim of LoadDelegate.Invoke(LoadDelegate this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLowMemoryDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.LowMemoryDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLowMemoryDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLowMemoryDelegate.#ctor(Love.Boot.SystemStepConfig.LowMemoryDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLowMemoryDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLowMemoryDelegate.AllInstances.BeginInvokeAsyncCallbackObject">
            <summary>Sets the Shim of LowMemoryDelegate.BeginInvoke(LowMemoryDelegate this, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLowMemoryDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of LowMemoryDelegate.EndInvoke(LowMemoryDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLowMemoryDelegate.AllInstances.Invoke">
            <summary>Sets the Shim of LowMemoryDelegate.Invoke(LowMemoryDelegate this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLowMemoryDelegate.BeginInvokeAsyncCallbackObject">
            <summary>Sets the Shim of LowMemoryDelegate.BeginInvoke(LowMemoryDelegate this, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLowMemoryDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLowMemoryDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLowMemoryDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLowMemoryDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLowMemoryDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLowMemoryDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of LowMemoryDelegate.LowMemoryDelegate(LowMemoryDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLowMemoryDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of LowMemoryDelegate.EndInvoke(LowMemoryDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimLowMemoryDelegate.Invoke">
            <summary>Sets the Shim of LowMemoryDelegate.Invoke(LowMemoryDelegate this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseFocusDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.MouseFocusDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseFocusDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseFocusDelegate.#ctor(Love.Boot.SystemStepConfig.MouseFocusDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseFocusDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseFocusDelegate.AllInstances.BeginInvokeBooleanAsyncCallbackObject">
            <summary>Sets the Shim of MouseFocusDelegate.BeginInvoke(MouseFocusDelegate this, Boolean focus, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseFocusDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of MouseFocusDelegate.EndInvoke(MouseFocusDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseFocusDelegate.AllInstances.InvokeBoolean">
            <summary>Sets the Shim of MouseFocusDelegate.Invoke(MouseFocusDelegate this, Boolean focus)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseFocusDelegate.BeginInvokeBooleanAsyncCallbackObject">
            <summary>Sets the Shim of MouseFocusDelegate.BeginInvoke(MouseFocusDelegate this, Boolean focus, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseFocusDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseFocusDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseFocusDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseFocusDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseFocusDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseFocusDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of MouseFocusDelegate.MouseFocusDelegate(MouseFocusDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseFocusDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of MouseFocusDelegate.EndInvoke(MouseFocusDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseFocusDelegate.InvokeBoolean">
            <summary>Sets the Shim of MouseFocusDelegate.Invoke(MouseFocusDelegate this, Boolean focus)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseMovedDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.MouseMovedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseMovedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseMovedDelegate.#ctor(Love.Boot.SystemStepConfig.MouseMovedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseMovedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseMovedDelegate.AllInstances.BeginInvokeSingleSingleSingleSingleBooleanAsyncCallbackObject">
            <summary>Sets the Shim of MouseMovedDelegate.BeginInvoke(MouseMovedDelegate this, Single x, Single y, Single dx, Single dy, Boolean isTouch, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseMovedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of MouseMovedDelegate.EndInvoke(MouseMovedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseMovedDelegate.AllInstances.InvokeSingleSingleSingleSingleBoolean">
            <summary>Sets the Shim of MouseMovedDelegate.Invoke(MouseMovedDelegate this, Single x, Single y, Single dx, Single dy, Boolean isTouch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseMovedDelegate.BeginInvokeSingleSingleSingleSingleBooleanAsyncCallbackObject">
            <summary>Sets the Shim of MouseMovedDelegate.BeginInvoke(MouseMovedDelegate this, Single x, Single y, Single dx, Single dy, Boolean isTouch, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseMovedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseMovedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseMovedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseMovedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseMovedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseMovedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of MouseMovedDelegate.MouseMovedDelegate(MouseMovedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseMovedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of MouseMovedDelegate.EndInvoke(MouseMovedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseMovedDelegate.InvokeSingleSingleSingleSingleBoolean">
            <summary>Sets the Shim of MouseMovedDelegate.Invoke(MouseMovedDelegate this, Single x, Single y, Single dx, Single dy, Boolean isTouch)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMousePressedDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.MousePressedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMousePressedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMousePressedDelegate.#ctor(Love.Boot.SystemStepConfig.MousePressedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMousePressedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMousePressedDelegate.AllInstances.BeginInvokeSingleSingleInt32BooleanAsyncCallbackObject">
            <summary>Sets the Shim of MousePressedDelegate.BeginInvoke(MousePressedDelegate this, Single x, Single y, Int32 button, Boolean isTouch, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMousePressedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of MousePressedDelegate.EndInvoke(MousePressedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMousePressedDelegate.AllInstances.InvokeSingleSingleInt32Boolean">
            <summary>Sets the Shim of MousePressedDelegate.Invoke(MousePressedDelegate this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMousePressedDelegate.BeginInvokeSingleSingleInt32BooleanAsyncCallbackObject">
            <summary>Sets the Shim of MousePressedDelegate.BeginInvoke(MousePressedDelegate this, Single x, Single y, Int32 button, Boolean isTouch, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMousePressedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMousePressedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMousePressedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMousePressedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMousePressedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMousePressedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of MousePressedDelegate.MousePressedDelegate(MousePressedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMousePressedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of MousePressedDelegate.EndInvoke(MousePressedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMousePressedDelegate.InvokeSingleSingleInt32Boolean">
            <summary>Sets the Shim of MousePressedDelegate.Invoke(MousePressedDelegate this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseReleasedDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.MouseReleasedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseReleasedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseReleasedDelegate.#ctor(Love.Boot.SystemStepConfig.MouseReleasedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseReleasedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseReleasedDelegate.AllInstances.BeginInvokeSingleSingleInt32BooleanAsyncCallbackObject">
            <summary>Sets the Shim of MouseReleasedDelegate.BeginInvoke(MouseReleasedDelegate this, Single x, Single y, Int32 button, Boolean isTouch, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseReleasedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of MouseReleasedDelegate.EndInvoke(MouseReleasedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseReleasedDelegate.AllInstances.InvokeSingleSingleInt32Boolean">
            <summary>Sets the Shim of MouseReleasedDelegate.Invoke(MouseReleasedDelegate this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseReleasedDelegate.BeginInvokeSingleSingleInt32BooleanAsyncCallbackObject">
            <summary>Sets the Shim of MouseReleasedDelegate.BeginInvoke(MouseReleasedDelegate this, Single x, Single y, Int32 button, Boolean isTouch, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseReleasedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseReleasedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseReleasedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseReleasedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseReleasedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseReleasedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of MouseReleasedDelegate.MouseReleasedDelegate(MouseReleasedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseReleasedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of MouseReleasedDelegate.EndInvoke(MouseReleasedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimMouseReleasedDelegate.InvokeSingleSingleInt32Boolean">
            <summary>Sets the Shim of MouseReleasedDelegate.Invoke(MouseReleasedDelegate this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimQuitDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.QuitDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimQuitDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimQuitDelegate.#ctor(Love.Boot.SystemStepConfig.QuitDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimQuitDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimQuitDelegate.AllInstances.BeginInvokeAsyncCallbackObject">
            <summary>Sets the Shim of QuitDelegate.BeginInvoke(QuitDelegate this, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimQuitDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of QuitDelegate.EndInvoke(QuitDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimQuitDelegate.AllInstances.Invoke">
            <summary>Sets the Shim of QuitDelegate.Invoke(QuitDelegate this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimQuitDelegate.BeginInvokeAsyncCallbackObject">
            <summary>Sets the Shim of QuitDelegate.BeginInvoke(QuitDelegate this, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimQuitDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimQuitDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimQuitDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimQuitDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimQuitDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimQuitDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of QuitDelegate.QuitDelegate(QuitDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimQuitDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of QuitDelegate.EndInvoke(QuitDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimQuitDelegate.Invoke">
            <summary>Sets the Shim of QuitDelegate.Invoke(QuitDelegate this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextEditingDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.TextEditingDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextEditingDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextEditingDelegate.#ctor(Love.Boot.SystemStepConfig.TextEditingDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextEditingDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextEditingDelegate.AllInstances.BeginInvokeStringInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of TextEditingDelegate.BeginInvoke(TextEditingDelegate this, String text, Int32 start, Int32 end, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextEditingDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of TextEditingDelegate.EndInvoke(TextEditingDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextEditingDelegate.AllInstances.InvokeStringInt32Int32">
            <summary>Sets the Shim of TextEditingDelegate.Invoke(TextEditingDelegate this, String text, Int32 start, Int32 end)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextEditingDelegate.BeginInvokeStringInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of TextEditingDelegate.BeginInvoke(TextEditingDelegate this, String text, Int32 start, Int32 end, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextEditingDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextEditingDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextEditingDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextEditingDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextEditingDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextEditingDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of TextEditingDelegate.TextEditingDelegate(TextEditingDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextEditingDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of TextEditingDelegate.EndInvoke(TextEditingDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextEditingDelegate.InvokeStringInt32Int32">
            <summary>Sets the Shim of TextEditingDelegate.Invoke(TextEditingDelegate this, String text, Int32 start, Int32 end)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextInputDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.TextInputDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextInputDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextInputDelegate.#ctor(Love.Boot.SystemStepConfig.TextInputDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextInputDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextInputDelegate.AllInstances.BeginInvokeStringAsyncCallbackObject">
            <summary>Sets the Shim of TextInputDelegate.BeginInvoke(TextInputDelegate this, String text, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextInputDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of TextInputDelegate.EndInvoke(TextInputDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextInputDelegate.AllInstances.InvokeString">
            <summary>Sets the Shim of TextInputDelegate.Invoke(TextInputDelegate this, String text)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextInputDelegate.BeginInvokeStringAsyncCallbackObject">
            <summary>Sets the Shim of TextInputDelegate.BeginInvoke(TextInputDelegate this, String text, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextInputDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextInputDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextInputDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextInputDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextInputDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextInputDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of TextInputDelegate.TextInputDelegate(TextInputDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextInputDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of TextInputDelegate.EndInvoke(TextInputDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTextInputDelegate.InvokeString">
            <summary>Sets the Shim of TextInputDelegate.Invoke(TextInputDelegate this, String text)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchMovedDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.TouchMovedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchMovedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchMovedDelegate.#ctor(Love.Boot.SystemStepConfig.TouchMovedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchMovedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchMovedDelegate.AllInstances.BeginInvokeInt64SingleSingleSingleSingleSingleAsyncCallbackObject">
            <summary>Sets the Shim of TouchMovedDelegate.BeginInvoke(TouchMovedDelegate this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchMovedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of TouchMovedDelegate.EndInvoke(TouchMovedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchMovedDelegate.AllInstances.InvokeInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of TouchMovedDelegate.Invoke(TouchMovedDelegate this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchMovedDelegate.BeginInvokeInt64SingleSingleSingleSingleSingleAsyncCallbackObject">
            <summary>Sets the Shim of TouchMovedDelegate.BeginInvoke(TouchMovedDelegate this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchMovedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchMovedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchMovedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchMovedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchMovedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchMovedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of TouchMovedDelegate.TouchMovedDelegate(TouchMovedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchMovedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of TouchMovedDelegate.EndInvoke(TouchMovedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchMovedDelegate.InvokeInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of TouchMovedDelegate.Invoke(TouchMovedDelegate this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchPressedDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.TouchPressedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchPressedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchPressedDelegate.#ctor(Love.Boot.SystemStepConfig.TouchPressedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchPressedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchPressedDelegate.AllInstances.BeginInvokeInt64SingleSingleSingleSingleSingleAsyncCallbackObject">
            <summary>Sets the Shim of TouchPressedDelegate.BeginInvoke(TouchPressedDelegate this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchPressedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of TouchPressedDelegate.EndInvoke(TouchPressedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchPressedDelegate.AllInstances.InvokeInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of TouchPressedDelegate.Invoke(TouchPressedDelegate this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchPressedDelegate.BeginInvokeInt64SingleSingleSingleSingleSingleAsyncCallbackObject">
            <summary>Sets the Shim of TouchPressedDelegate.BeginInvoke(TouchPressedDelegate this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchPressedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchPressedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchPressedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchPressedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchPressedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchPressedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of TouchPressedDelegate.TouchPressedDelegate(TouchPressedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchPressedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of TouchPressedDelegate.EndInvoke(TouchPressedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchPressedDelegate.InvokeInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of TouchPressedDelegate.Invoke(TouchPressedDelegate this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchReleasedDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.TouchReleasedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchReleasedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchReleasedDelegate.#ctor(Love.Boot.SystemStepConfig.TouchReleasedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchReleasedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchReleasedDelegate.AllInstances.BeginInvokeInt64SingleSingleSingleSingleSingleAsyncCallbackObject">
            <summary>Sets the Shim of TouchReleasedDelegate.BeginInvoke(TouchReleasedDelegate this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchReleasedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of TouchReleasedDelegate.EndInvoke(TouchReleasedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchReleasedDelegate.AllInstances.InvokeInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of TouchReleasedDelegate.Invoke(TouchReleasedDelegate this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchReleasedDelegate.BeginInvokeInt64SingleSingleSingleSingleSingleAsyncCallbackObject">
            <summary>Sets the Shim of TouchReleasedDelegate.BeginInvoke(TouchReleasedDelegate this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchReleasedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchReleasedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchReleasedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchReleasedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchReleasedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchReleasedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of TouchReleasedDelegate.TouchReleasedDelegate(TouchReleasedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchReleasedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of TouchReleasedDelegate.EndInvoke(TouchReleasedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimTouchReleasedDelegate.InvokeInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of TouchReleasedDelegate.Invoke(TouchReleasedDelegate this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimUpdateDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.UpdateDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimUpdateDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimUpdateDelegate.#ctor(Love.Boot.SystemStepConfig.UpdateDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimUpdateDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimUpdateDelegate.AllInstances.BeginInvokeSingleAsyncCallbackObject">
            <summary>Sets the Shim of UpdateDelegate.BeginInvoke(UpdateDelegate this, Single dt, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimUpdateDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of UpdateDelegate.EndInvoke(UpdateDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimUpdateDelegate.AllInstances.InvokeSingle">
            <summary>Sets the Shim of UpdateDelegate.Invoke(UpdateDelegate this, Single dt)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimUpdateDelegate.BeginInvokeSingleAsyncCallbackObject">
            <summary>Sets the Shim of UpdateDelegate.BeginInvoke(UpdateDelegate this, Single dt, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimUpdateDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimUpdateDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimUpdateDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimUpdateDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimUpdateDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimUpdateDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of UpdateDelegate.UpdateDelegate(UpdateDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimUpdateDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of UpdateDelegate.EndInvoke(UpdateDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimUpdateDelegate.InvokeSingle">
            <summary>Sets the Shim of UpdateDelegate.Invoke(UpdateDelegate this, Single dt)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWheelMovedDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.WheelMovedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWheelMovedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWheelMovedDelegate.#ctor(Love.Boot.SystemStepConfig.WheelMovedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWheelMovedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWheelMovedDelegate.AllInstances.BeginInvokeInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of WheelMovedDelegate.BeginInvoke(WheelMovedDelegate this, Int32 x, Int32 y, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWheelMovedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of WheelMovedDelegate.EndInvoke(WheelMovedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWheelMovedDelegate.AllInstances.InvokeInt32Int32">
            <summary>Sets the Shim of WheelMovedDelegate.Invoke(WheelMovedDelegate this, Int32 x, Int32 y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWheelMovedDelegate.BeginInvokeInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of WheelMovedDelegate.BeginInvoke(WheelMovedDelegate this, Int32 x, Int32 y, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWheelMovedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWheelMovedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWheelMovedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWheelMovedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWheelMovedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWheelMovedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of WheelMovedDelegate.WheelMovedDelegate(WheelMovedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWheelMovedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of WheelMovedDelegate.EndInvoke(WheelMovedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWheelMovedDelegate.InvokeInt32Int32">
            <summary>Sets the Shim of WheelMovedDelegate.Invoke(WheelMovedDelegate this, Int32 x, Int32 y)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowFocusDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.WindowFocusDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowFocusDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowFocusDelegate.#ctor(Love.Boot.SystemStepConfig.WindowFocusDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowFocusDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowFocusDelegate.AllInstances.BeginInvokeBooleanAsyncCallbackObject">
            <summary>Sets the Shim of WindowFocusDelegate.BeginInvoke(WindowFocusDelegate this, Boolean focus, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowFocusDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of WindowFocusDelegate.EndInvoke(WindowFocusDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowFocusDelegate.AllInstances.InvokeBoolean">
            <summary>Sets the Shim of WindowFocusDelegate.Invoke(WindowFocusDelegate this, Boolean focus)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowFocusDelegate.BeginInvokeBooleanAsyncCallbackObject">
            <summary>Sets the Shim of WindowFocusDelegate.BeginInvoke(WindowFocusDelegate this, Boolean focus, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowFocusDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowFocusDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowFocusDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowFocusDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowFocusDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowFocusDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of WindowFocusDelegate.WindowFocusDelegate(WindowFocusDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowFocusDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of WindowFocusDelegate.EndInvoke(WindowFocusDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowFocusDelegate.InvokeBoolean">
            <summary>Sets the Shim of WindowFocusDelegate.Invoke(WindowFocusDelegate this, Boolean focus)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowResizeDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.WindowResizeDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowResizeDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowResizeDelegate.#ctor(Love.Boot.SystemStepConfig.WindowResizeDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowResizeDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowResizeDelegate.AllInstances.BeginInvokeInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of WindowResizeDelegate.BeginInvoke(WindowResizeDelegate this, Int32 w, Int32 h, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowResizeDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of WindowResizeDelegate.EndInvoke(WindowResizeDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowResizeDelegate.AllInstances.InvokeInt32Int32">
            <summary>Sets the Shim of WindowResizeDelegate.Invoke(WindowResizeDelegate this, Int32 w, Int32 h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowResizeDelegate.BeginInvokeInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of WindowResizeDelegate.BeginInvoke(WindowResizeDelegate this, Int32 w, Int32 h, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowResizeDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowResizeDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowResizeDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowResizeDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowResizeDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowResizeDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of WindowResizeDelegate.WindowResizeDelegate(WindowResizeDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowResizeDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of WindowResizeDelegate.EndInvoke(WindowResizeDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowResizeDelegate.InvokeInt32Int32">
            <summary>Sets the Shim of WindowResizeDelegate.Invoke(WindowResizeDelegate this, Int32 w, Int32 h)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowVisibleDelegate">
            <summary>Shim type of Love.Boot.SystemStepConfig.WindowVisibleDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowVisibleDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowVisibleDelegate.#ctor(Love.Boot.SystemStepConfig.WindowVisibleDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowVisibleDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowVisibleDelegate.AllInstances.BeginInvokeBooleanAsyncCallbackObject">
            <summary>Sets the Shim of WindowVisibleDelegate.BeginInvoke(WindowVisibleDelegate this, Boolean visible, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowVisibleDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of WindowVisibleDelegate.EndInvoke(WindowVisibleDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowVisibleDelegate.AllInstances.InvokeBoolean">
            <summary>Sets the Shim of WindowVisibleDelegate.Invoke(WindowVisibleDelegate this, Boolean visible)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowVisibleDelegate.BeginInvokeBooleanAsyncCallbackObject">
            <summary>Sets the Shim of WindowVisibleDelegate.BeginInvoke(WindowVisibleDelegate this, Boolean visible, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowVisibleDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowVisibleDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowVisibleDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowVisibleDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowVisibleDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowVisibleDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of WindowVisibleDelegate.WindowVisibleDelegate(WindowVisibleDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowVisibleDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of WindowVisibleDelegate.EndInvoke(WindowVisibleDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.ShimSystemStepConfig.ShimWindowVisibleDelegate.InvokeBoolean">
            <summary>Sets the Shim of WindowVisibleDelegate.Invoke(WindowVisibleDelegate this, Boolean visible)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.StaticConstructor">
            <summary>Sets the Shim of Boot.Boot()</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.SystemStep">
            <summary>Sets the Shim of Boot.SystemStep()</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.SystemStepBootSystemStepConfig">
            <summary>Sets the Shim of Boot.SystemStep(SystemStepConfig config)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot.SystemStepScene">
            <summary>Sets the Shim of Boot.SystemStep(Scene scene)</summary>
        </member>
        <member name="P:Love.Fakes.ShimBoot._InitNativeLibraryg__Load13_0StringString">
            <summary>Sets the Shim of Boot.&lt;InitNativeLibrary&gt;g__Load|13_0(String zipName, String entryName)</summary>
        </member>
        <member name="T:Love.Fakes.ShimBootConfig">
            <summary>Shim type of Love.BootConfig</summary>
        </member>
        <member name="M:Love.Fakes.ShimBootConfig.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimBootConfig.#ctor(Love.BootConfig)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimBootConfig.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimBootConfig.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimBootConfig.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBootConfig.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimBootConfig.Constructor">
            <summary>Sets the Shim of BootConfig.BootConfig(BootConfig this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimCanvas">
            <summary>Shim type of Love.Canvas</summary>
        </member>
        <member name="M:Love.Fakes.ShimCanvas.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimCanvas.#ctor(Love.Canvas)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimCanvas.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimCanvas.AllInstances.GetFormat">
            <summary>Sets the Shim of Canvas.GetFormat(Canvas this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCanvas.AllInstances.GetMSAA">
            <summary>Sets the Shim of Canvas.GetMSAA(Canvas this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCanvas.AllInstances.NewImageData">
            <summary>Sets the Shim of Canvas.NewImageData(Canvas this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCanvas.AllInstances.NewImageDataInt32Int32">
            <summary>Sets the Shim of Canvas.NewImageData(Canvas this, Int32 slice, Int32 mipmap)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCanvas.AllInstances.NewImageDataInt32Int32Int32Int32Int32Int32">
            <summary>Sets the Shim of Canvas.NewImageData(Canvas this, Int32 slice, Int32 mipmap, Int32 x, Int32 y, Int32 w, Int32 h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCanvas.AllInstances.RenderToAction">
            <summary>Sets the Shim of Canvas.RenderTo(Canvas this, Action func)</summary>
        </member>
        <member name="M:Love.Fakes.ShimCanvas.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimCanvas.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimCanvas.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimCanvas.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimCanvas.Constructor">
            <summary>Sets the Shim of Canvas.Canvas(Canvas this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCanvas.GetFormat">
            <summary>Sets the Shim of Canvas.GetFormat(Canvas this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCanvas.GetMSAA">
            <summary>Sets the Shim of Canvas.GetMSAA(Canvas this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCanvas.NewImageData">
            <summary>Sets the Shim of Canvas.NewImageData(Canvas this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCanvas.NewImageDataInt32Int32">
            <summary>Sets the Shim of Canvas.NewImageData(Canvas this, Int32 slice, Int32 mipmap)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCanvas.NewImageDataInt32Int32Int32Int32Int32Int32">
            <summary>Sets the Shim of Canvas.NewImageData(Canvas this, Int32 slice, Int32 mipmap, Int32 x, Int32 y, Int32 w, Int32 h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCanvas.RenderToAction">
            <summary>Sets the Shim of Canvas.RenderTo(Canvas this, Action func)</summary>
        </member>
        <member name="T:Love.Fakes.ShimChainShape">
            <summary>Shim type of Love.ChainShape</summary>
        </member>
        <member name="M:Love.Fakes.ShimChainShape.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimChainShape.#ctor(Love.ChainShape)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimChainShape.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimChainShape.AllInstances.GetChildEdgeInt32">
            <summary>Sets the Shim of ChainShape.GetChildEdge(ChainShape this, Int32 index)</summary>
        </member>
        <member name="P:Love.Fakes.ShimChainShape.AllInstances.GetNextVertexVector2Out">
            <summary>Sets the Shim of ChainShape.GetNextVertex(ChainShape this, Vector2* point)</summary>
        </member>
        <member name="P:Love.Fakes.ShimChainShape.AllInstances.GetPointInt32">
            <summary>Sets the Shim of ChainShape.GetPoint(ChainShape this, Int32 index)</summary>
        </member>
        <member name="P:Love.Fakes.ShimChainShape.AllInstances.GetPoints">
            <summary>Sets the Shim of ChainShape.GetPoints(ChainShape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimChainShape.AllInstances.GetPreviousVertexVector2Out">
            <summary>Sets the Shim of ChainShape.GetPreviousVertex(ChainShape this, Vector2* point)</summary>
        </member>
        <member name="P:Love.Fakes.ShimChainShape.AllInstances.GetVertexCount">
            <summary>Sets the Shim of ChainShape.GetVertexCount(ChainShape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimChainShape.AllInstances.SetNextVertexSingleSingle">
            <summary>Sets the Shim of ChainShape.SetNextVertex(ChainShape this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimChainShape.AllInstances.SetNextVertex_nil">
            <summary>Sets the Shim of ChainShape.SetNextVertex_nil(ChainShape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimChainShape.AllInstances.SetPreviousVertexSingleSingle">
            <summary>Sets the Shim of ChainShape.SetPreviousVertex(ChainShape this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimChainShape.AllInstances.SetPreviousVertex_nil">
            <summary>Sets the Shim of ChainShape.SetPreviousVertex_nil(ChainShape this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimChainShape.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimChainShape.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimChainShape.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimChainShape.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimChainShape.Constructor">
            <summary>Sets the Shim of ChainShape.ChainShape(ChainShape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimChainShape.GetChildEdgeInt32">
            <summary>Sets the Shim of ChainShape.GetChildEdge(ChainShape this, Int32 index)</summary>
        </member>
        <member name="P:Love.Fakes.ShimChainShape.GetNextVertexVector2Out">
            <summary>Sets the Shim of ChainShape.GetNextVertex(ChainShape this, Vector2* point)</summary>
        </member>
        <member name="P:Love.Fakes.ShimChainShape.GetPointInt32">
            <summary>Sets the Shim of ChainShape.GetPoint(ChainShape this, Int32 index)</summary>
        </member>
        <member name="P:Love.Fakes.ShimChainShape.GetPoints">
            <summary>Sets the Shim of ChainShape.GetPoints(ChainShape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimChainShape.GetPreviousVertexVector2Out">
            <summary>Sets the Shim of ChainShape.GetPreviousVertex(ChainShape this, Vector2* point)</summary>
        </member>
        <member name="P:Love.Fakes.ShimChainShape.GetVertexCount">
            <summary>Sets the Shim of ChainShape.GetVertexCount(ChainShape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimChainShape.SetNextVertexSingleSingle">
            <summary>Sets the Shim of ChainShape.SetNextVertex(ChainShape this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimChainShape.SetNextVertex_nil">
            <summary>Sets the Shim of ChainShape.SetNextVertex_nil(ChainShape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimChainShape.SetPreviousVertexSingleSingle">
            <summary>Sets the Shim of ChainShape.SetPreviousVertex(ChainShape this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimChainShape.SetPreviousVertex_nil">
            <summary>Sets the Shim of ChainShape.SetPreviousVertex_nil(ChainShape this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimCheck">
            <summary>Shim type of Love.Check</summary>
        </member>
        <member name="M:Love.Fakes.ShimCheck.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:Love.Fakes.ShimCheck.ArgumentNullObjectString">
            <summary>Sets the Shim of Check.ArgumentNull(Object obj, String argumentName)</summary>
        </member>
        <member name="M:Love.Fakes.ShimCheck.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimCheck.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimCheck.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Love.Fakes.ShimCircleShape">
            <summary>Shim type of Love.CircleShape</summary>
        </member>
        <member name="M:Love.Fakes.ShimCircleShape.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimCircleShape.#ctor(Love.CircleShape)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimCircleShape.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimCircleShape.AllInstances.GetPoint">
            <summary>Sets the Shim of CircleShape.GetPoint(CircleShape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCircleShape.AllInstances.GetRadius">
            <summary>Sets the Shim of CircleShape.GetRadius(CircleShape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCircleShape.AllInstances.SetPointSingleSingle">
            <summary>Sets the Shim of CircleShape.SetPoint(CircleShape this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCircleShape.AllInstances.SetRadiusSingle">
            <summary>Sets the Shim of CircleShape.SetRadius(CircleShape this, Single r)</summary>
        </member>
        <member name="M:Love.Fakes.ShimCircleShape.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimCircleShape.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimCircleShape.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimCircleShape.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimCircleShape.Constructor">
            <summary>Sets the Shim of CircleShape.CircleShape(CircleShape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCircleShape.GetPoint">
            <summary>Sets the Shim of CircleShape.GetPoint(CircleShape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCircleShape.GetRadius">
            <summary>Sets the Shim of CircleShape.GetRadius(CircleShape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCircleShape.SetPointSingleSingle">
            <summary>Sets the Shim of CircleShape.SetPoint(CircleShape this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCircleShape.SetRadiusSingle">
            <summary>Sets the Shim of CircleShape.SetRadius(CircleShape this, Single r)</summary>
        </member>
        <member name="T:Love.Fakes.ShimColor">
            <summary>Shim type of Love.Color</summary>
        </member>
        <member name="M:Love.Fakes.ShimColor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimColor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimColor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimColor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimColor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimColor.EqualityOpColorColor">
            <summary>Sets the Shim of Color.op_Equality(Color left, Color right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimColor.FromARGBUInt32">
            <summary>Sets the Shim of Color.FromARGB(UInt32 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimColor.FromRGBAByteByteByteByte">
            <summary>Sets the Shim of Color.FromRGBA(Byte r, Byte g, Byte b, Byte a)</summary>
        </member>
        <member name="P:Love.Fakes.ShimColor.FromRGBASingleSingleSingleSingle">
            <summary>Sets the Shim of Color.FromRGBA(Single r, Single g, Single b, Single a)</summary>
        </member>
        <member name="P:Love.Fakes.ShimColor.FromRGBAUInt32">
            <summary>Sets the Shim of Color.FromRGBA(UInt32 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimColor.InequalityOpColorColor">
            <summary>Sets the Shim of Color.op_Inequality(Color left, Color right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimColor.LerpColorColorSingle">
            <summary>Sets the Shim of Color.Lerp(Color a, Color b, Single t)</summary>
        </member>
        <member name="P:Love.Fakes.ShimColor.StaticConstructor">
            <summary>Sets the Shim of Color.Color()</summary>
        </member>
        <member name="T:Love.Fakes.ShimColoredPoint">
            <summary>Shim type of Love.ColoredPoint</summary>
        </member>
        <member name="M:Love.Fakes.ShimColoredPoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimColoredPoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimColoredPoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimColoredPoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimColoredPoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Love.Fakes.ShimColoredString">
            <summary>Shim type of Love.ColoredString</summary>
        </member>
        <member name="M:Love.Fakes.ShimColoredString.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimColoredString.#ctor(Love.ColoredString)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimColoredString.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimColoredString.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimColoredString.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimColoredString.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimColoredString.ConstructorStringColor">
            <summary>Sets the Shim of ColoredString.ColoredString(ColoredString this, String text, Color color)</summary>
        </member>
        <member name="P:Love.Fakes.ShimColoredString.ConstructorStringVector4">
            <summary>Sets the Shim of ColoredString.ColoredString(ColoredString this, String text, Vector4 color)</summary>
        </member>
        <member name="P:Love.Fakes.ShimColoredString.CreateStringColor">
            <summary>Sets the Shim of ColoredString.Create(String text, Color color)</summary>
        </member>
        <member name="P:Love.Fakes.ShimColoredString.CreateStringSingleSingleSingleSingle">
            <summary>Sets the Shim of ColoredString.Create(String text, Single r, Single g, Single b, Single a)</summary>
        </member>
        <member name="P:Love.Fakes.ShimColoredString.CreateStringVector4">
            <summary>Sets the Shim of ColoredString.Create(String text, Vector4 color)</summary>
        </member>
        <member name="T:Love.Fakes.ShimColoredStringArray">
            <summary>Shim type of Love.ColoredStringArray</summary>
        </member>
        <member name="M:Love.Fakes.ShimColoredStringArray.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimColoredStringArray.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimColoredStringArray.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimColoredStringArray.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimColoredStringArray.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimColoredStringArray.CreateString">
            <summary>Sets the Shim of ColoredStringArray.Create(String text)</summary>
        </member>
        <member name="T:Love.Fakes.ShimCommon">
            <summary>Shim type of Love.Common</summary>
        </member>
        <member name="M:Love.Fakes.ShimCommon.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimCommon.#ctor(Love.Common)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimCommon.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimCommon.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimCommon.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimCommon.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimCommon.Constructor">
            <summary>Sets the Shim of Common.Common(Common this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCommon.GetVersion">
            <summary>Sets the Shim of Common.GetVersion()</summary>
        </member>
        <member name="P:Love.Fakes.ShimCommon.GetVersionCodeName">
            <summary>Sets the Shim of Common.GetVersionCodeName()</summary>
        </member>
        <member name="T:Love.Fakes.ShimCompressedImageData">
            <summary>Shim type of Love.CompressedImageData</summary>
        </member>
        <member name="M:Love.Fakes.ShimCompressedImageData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimCompressedImageData.#ctor(Love.CompressedImageData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimCompressedImageData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimCompressedImageData.AllInstances.GetFormat">
            <summary>Sets the Shim of CompressedImageData.GetFormat(CompressedImageData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCompressedImageData.AllInstances.GetHeightInt32">
            <summary>Sets the Shim of CompressedImageData.GetHeight(CompressedImageData this, Int32 miplevel)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCompressedImageData.AllInstances.GetMipmapCount">
            <summary>Sets the Shim of CompressedImageData.GetMipmapCount(CompressedImageData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCompressedImageData.AllInstances.GetWidthInt32">
            <summary>Sets the Shim of CompressedImageData.GetWidth(CompressedImageData this, Int32 miplevel)</summary>
        </member>
        <member name="M:Love.Fakes.ShimCompressedImageData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimCompressedImageData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimCompressedImageData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimCompressedImageData.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimCompressedImageData.Constructor">
            <summary>Sets the Shim of CompressedImageData.CompressedImageData(CompressedImageData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCompressedImageData.GetFormat">
            <summary>Sets the Shim of CompressedImageData.GetFormat(CompressedImageData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCompressedImageData.GetHeightInt32">
            <summary>Sets the Shim of CompressedImageData.GetHeight(CompressedImageData this, Int32 miplevel)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCompressedImageData.GetMipmapCount">
            <summary>Sets the Shim of CompressedImageData.GetMipmapCount(CompressedImageData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCompressedImageData.GetWidthInt32">
            <summary>Sets the Shim of CompressedImageData.GetWidth(CompressedImageData this, Int32 miplevel)</summary>
        </member>
        <member name="T:Love.Fakes.ShimContact">
            <summary>Shim type of Love.Contact</summary>
        </member>
        <member name="M:Love.Fakes.ShimContact.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimContact.#ctor(Love.Contact)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimContact.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.AllInstances.GetChildrenInt32OutInt32Out">
            <summary>Sets the Shim of Contact.GetChildren(Contact this, Int32* indexA, Int32* indexB)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.AllInstances.GetFixturesFixtureOutFixtureOut">
            <summary>Sets the Shim of Contact.GetFixtures(Contact this, Fixture* fixtureA, Fixture* fixtureB)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.AllInstances.GetFriction">
            <summary>Sets the Shim of Contact.GetFriction(Contact this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.AllInstances.GetNormal">
            <summary>Sets the Shim of Contact.GetNormal(Contact this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.AllInstances.GetPositions">
            <summary>Sets the Shim of Contact.GetPositions(Contact this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.AllInstances.GetRestitution">
            <summary>Sets the Shim of Contact.GetRestitution(Contact this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.AllInstances.GetTangentSpeed">
            <summary>Sets the Shim of Contact.GetTangentSpeed(Contact this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.AllInstances.IsDestroyed">
            <summary>Sets the Shim of Contact.IsDestroyed(Contact this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.AllInstances.IsEnabled">
            <summary>Sets the Shim of Contact.IsEnabled(Contact this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.AllInstances.IsTouching">
            <summary>Sets the Shim of Contact.IsTouching(Contact this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.AllInstances.ResetFriction">
            <summary>Sets the Shim of Contact.ResetFriction(Contact this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.AllInstances.ResetRestitution">
            <summary>Sets the Shim of Contact.ResetRestitution(Contact this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.AllInstances.SetEnabledBoolean">
            <summary>Sets the Shim of Contact.SetEnabled(Contact this, Boolean enabled)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.AllInstances.SetFrictionSingle">
            <summary>Sets the Shim of Contact.SetFriction(Contact this, Single friction)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.AllInstances.SetRestitutionSingle">
            <summary>Sets the Shim of Contact.SetRestitution(Contact this, Single restitution)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.AllInstances.SetTangentSpeedSingle">
            <summary>Sets the Shim of Contact.SetTangentSpeed(Contact this, Single speed)</summary>
        </member>
        <member name="M:Love.Fakes.ShimContact.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimContact.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimContact.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.Constructor">
            <summary>Sets the Shim of Contact.Contact(Contact this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.GetChildrenInt32OutInt32Out">
            <summary>Sets the Shim of Contact.GetChildren(Contact this, Int32* indexA, Int32* indexB)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.GetFixturesFixtureOutFixtureOut">
            <summary>Sets the Shim of Contact.GetFixtures(Contact this, Fixture* fixtureA, Fixture* fixtureB)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.GetFriction">
            <summary>Sets the Shim of Contact.GetFriction(Contact this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.GetNormal">
            <summary>Sets the Shim of Contact.GetNormal(Contact this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.GetPositions">
            <summary>Sets the Shim of Contact.GetPositions(Contact this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.GetRestitution">
            <summary>Sets the Shim of Contact.GetRestitution(Contact this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.GetTangentSpeed">
            <summary>Sets the Shim of Contact.GetTangentSpeed(Contact this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.IsDestroyed">
            <summary>Sets the Shim of Contact.IsDestroyed(Contact this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.IsEnabled">
            <summary>Sets the Shim of Contact.IsEnabled(Contact this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.IsTouching">
            <summary>Sets the Shim of Contact.IsTouching(Contact this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.ResetFriction">
            <summary>Sets the Shim of Contact.ResetFriction(Contact this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.ResetRestitution">
            <summary>Sets the Shim of Contact.ResetRestitution(Contact this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.SetEnabledBoolean">
            <summary>Sets the Shim of Contact.SetEnabled(Contact this, Boolean enabled)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.SetFrictionSingle">
            <summary>Sets the Shim of Contact.SetFriction(Contact this, Single friction)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.SetRestitutionSingle">
            <summary>Sets the Shim of Contact.SetRestitution(Contact this, Single restitution)</summary>
        </member>
        <member name="P:Love.Fakes.ShimContact.SetTangentSpeedSingle">
            <summary>Sets the Shim of Contact.SetTangentSpeed(Contact this, Single speed)</summary>
        </member>
        <member name="T:Love.Fakes.ShimCursor">
            <summary>Shim type of Love.Cursor</summary>
        </member>
        <member name="M:Love.Fakes.ShimCursor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimCursor.#ctor(Love.Cursor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimCursor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimCursor.AllInstances.GetType01">
            <summary>Sets the Shim of Cursor.GetType(Cursor this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimCursor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimCursor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimCursor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimCursor.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimCursor.Constructor">
            <summary>Sets the Shim of Cursor.Cursor(Cursor this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimCursor.GetType">
            <summary>Sets the Shim of Cursor.GetType(Cursor this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimData">
            <summary>Shim type of Love.Data</summary>
        </member>
        <member name="M:Love.Fakes.ShimData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimData.#ctor(Love.Data)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimData.AllInstances.GetBytes">
            <summary>Sets the Shim of Data.GetBytes(Data this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimData.AllInstances.GetPointer">
            <summary>Sets the Shim of Data.GetPointer(Data this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimData.AllInstances.GetSize">
            <summary>Sets the Shim of Data.GetSize(Data this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimData.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimData.Constructor">
            <summary>Sets the Shim of Data.Data(Data this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimData.GetBytes">
            <summary>Sets the Shim of Data.GetBytes(Data this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimData.GetPointer">
            <summary>Sets the Shim of Data.GetPointer(Data this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimData.GetSize">
            <summary>Sets the Shim of Data.GetSize(Data this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimDecoder">
            <summary>Shim type of Love.Decoder</summary>
        </member>
        <member name="M:Love.Fakes.ShimDecoder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimDecoder.#ctor(Love.Decoder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimDecoder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimDecoder.AllInstances.GetBitDepth">
            <summary>Sets the Shim of Decoder.GetBitDepth(Decoder this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimDecoder.AllInstances.GetChannelCount">
            <summary>Sets the Shim of Decoder.GetChannelCount(Decoder this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimDecoder.AllInstances.GetDuration">
            <summary>Sets the Shim of Decoder.GetDuration(Decoder this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimDecoder.AllInstances.GetSampleRate">
            <summary>Sets the Shim of Decoder.GetSampleRate(Decoder this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimDecoder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimDecoder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimDecoder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimDecoder.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimDecoder.Constructor">
            <summary>Sets the Shim of Decoder.Decoder(Decoder this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimDecoder.GetBitDepth">
            <summary>Sets the Shim of Decoder.GetBitDepth(Decoder this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimDecoder.GetChannelCount">
            <summary>Sets the Shim of Decoder.GetChannelCount(Decoder this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimDecoder.GetDuration">
            <summary>Sets the Shim of Decoder.GetDuration(Decoder this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimDecoder.GetSampleRate">
            <summary>Sets the Shim of Decoder.GetSampleRate(Decoder this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimDistanceJoint">
            <summary>Shim type of Love.DistanceJoint</summary>
        </member>
        <member name="M:Love.Fakes.ShimDistanceJoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimDistanceJoint.#ctor(Love.DistanceJoint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimDistanceJoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimDistanceJoint.AllInstances.GetDampingRatio">
            <summary>Sets the Shim of DistanceJoint.GetDampingRatio(DistanceJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimDistanceJoint.AllInstances.GetFrequency">
            <summary>Sets the Shim of DistanceJoint.GetFrequency(DistanceJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimDistanceJoint.AllInstances.GetLength">
            <summary>Sets the Shim of DistanceJoint.GetLength(DistanceJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimDistanceJoint.AllInstances.SetDampingRatioSingle">
            <summary>Sets the Shim of DistanceJoint.SetDampingRatio(DistanceJoint this, Single dampingRatio)</summary>
        </member>
        <member name="P:Love.Fakes.ShimDistanceJoint.AllInstances.SetFrequencySingle">
            <summary>Sets the Shim of DistanceJoint.SetFrequency(DistanceJoint this, Single frequency)</summary>
        </member>
        <member name="P:Love.Fakes.ShimDistanceJoint.AllInstances.SetLengthSingle">
            <summary>Sets the Shim of DistanceJoint.SetLength(DistanceJoint this, Single length)</summary>
        </member>
        <member name="M:Love.Fakes.ShimDistanceJoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimDistanceJoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimDistanceJoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimDistanceJoint.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimDistanceJoint.Constructor">
            <summary>Sets the Shim of DistanceJoint.DistanceJoint(DistanceJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimDistanceJoint.GetDampingRatio">
            <summary>Sets the Shim of DistanceJoint.GetDampingRatio(DistanceJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimDistanceJoint.GetFrequency">
            <summary>Sets the Shim of DistanceJoint.GetFrequency(DistanceJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimDistanceJoint.GetLength">
            <summary>Sets the Shim of DistanceJoint.GetLength(DistanceJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimDistanceJoint.SetDampingRatioSingle">
            <summary>Sets the Shim of DistanceJoint.SetDampingRatio(DistanceJoint this, Single dampingRatio)</summary>
        </member>
        <member name="P:Love.Fakes.ShimDistanceJoint.SetFrequencySingle">
            <summary>Sets the Shim of DistanceJoint.SetFrequency(DistanceJoint this, Single frequency)</summary>
        </member>
        <member name="P:Love.Fakes.ShimDistanceJoint.SetLengthSingle">
            <summary>Sets the Shim of DistanceJoint.SetLength(DistanceJoint this, Single length)</summary>
        </member>
        <member name="T:Love.Fakes.ShimDrawable">
            <summary>Shim type of Love.Drawable</summary>
        </member>
        <member name="M:Love.Fakes.ShimDrawable.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimDrawable.#ctor(Love.Drawable)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimDrawable.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimDrawable.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimDrawable.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimDrawable.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimDrawable.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimDrawable.Constructor">
            <summary>Sets the Shim of Drawable.Drawable(Drawable this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimDroppedFile">
            <summary>Shim type of Love.DroppedFile</summary>
        </member>
        <member name="M:Love.Fakes.ShimDroppedFile.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimDroppedFile.#ctor(Love.DroppedFile)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimDroppedFile.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimDroppedFile.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimDroppedFile.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimDroppedFile.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimDroppedFile.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimDroppedFile.Constructor">
            <summary>Sets the Shim of DroppedFile.DroppedFile(DroppedFile this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimEdgeShape">
            <summary>Shim type of Love.EdgeShape</summary>
        </member>
        <member name="M:Love.Fakes.ShimEdgeShape.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimEdgeShape.#ctor(Love.EdgeShape)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimEdgeShape.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimEdgeShape.AllInstances.GetNextVertexVector2Out">
            <summary>Sets the Shim of EdgeShape.GetNextVertex(EdgeShape this, Vector2* point)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEdgeShape.AllInstances.GetPoints">
            <summary>Sets the Shim of EdgeShape.GetPoints(EdgeShape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEdgeShape.AllInstances.GetPointsSingleOutSingleOutSingleOutSingleOut">
            <summary>Sets the Shim of EdgeShape.GetPoints(EdgeShape this, Single* x1, Single* y1, Single* x2, Single* y2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEdgeShape.AllInstances.GetPreviousVertexVector2Out">
            <summary>Sets the Shim of EdgeShape.GetPreviousVertex(EdgeShape this, Vector2* point)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEdgeShape.AllInstances.SetNextVertexSingleSingle">
            <summary>Sets the Shim of EdgeShape.SetNextVertex(EdgeShape this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEdgeShape.AllInstances.SetNextVertex_nil">
            <summary>Sets the Shim of EdgeShape.SetNextVertex_nil(EdgeShape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEdgeShape.AllInstances.SetPreviousVertexSingleSingle">
            <summary>Sets the Shim of EdgeShape.SetPreviousVertex(EdgeShape this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEdgeShape.AllInstances.SetPreviousVertex_nil">
            <summary>Sets the Shim of EdgeShape.SetPreviousVertex_nil(EdgeShape this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimEdgeShape.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimEdgeShape.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimEdgeShape.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimEdgeShape.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimEdgeShape.Constructor">
            <summary>Sets the Shim of EdgeShape.EdgeShape(EdgeShape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEdgeShape.GetNextVertexVector2Out">
            <summary>Sets the Shim of EdgeShape.GetNextVertex(EdgeShape this, Vector2* point)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEdgeShape.GetPoints">
            <summary>Sets the Shim of EdgeShape.GetPoints(EdgeShape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEdgeShape.GetPreviousVertexVector2Out">
            <summary>Sets the Shim of EdgeShape.GetPreviousVertex(EdgeShape this, Vector2* point)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEdgeShape.SetNextVertexSingleSingle">
            <summary>Sets the Shim of EdgeShape.SetNextVertex(EdgeShape this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEdgeShape.SetNextVertex_nil">
            <summary>Sets the Shim of EdgeShape.SetNextVertex_nil(EdgeShape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEdgeShape.SetPreviousVertexSingleSingle">
            <summary>Sets the Shim of EdgeShape.SetPreviousVertex(EdgeShape this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEdgeShape.SetPreviousVertex_nil">
            <summary>Sets the Shim of EdgeShape.SetPreviousVertex_nil(EdgeShape this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimErrorHandleScene">
            <summary>Shim type of Love.ErrorHandleScene</summary>
        </member>
        <member name="M:Love.Fakes.ShimErrorHandleScene.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimErrorHandleScene.#ctor(Love.ErrorHandleScene)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimErrorHandleScene.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimErrorHandleScene.AllInstances.Draw">
            <summary>Sets the Shim of ErrorHandleScene.Draw(ErrorHandleScene this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimErrorHandleScene.AllInstances.KeyPressedKeyConstantScancodeBoolean">
            <summary>Sets the Shim of ErrorHandleScene.KeyPressed(ErrorHandleScene this, KeyConstant key, Scancode scancode, Boolean isRepeat)</summary>
        </member>
        <member name="M:Love.Fakes.ShimErrorHandleScene.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimErrorHandleScene.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimErrorHandleScene.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimErrorHandleScene.ConstructorException">
            <summary>Sets the Shim of ErrorHandleScene.ErrorHandleScene(ErrorHandleScene this, Exception e)</summary>
        </member>
        <member name="P:Love.Fakes.ShimErrorHandleScene.Draw">
            <summary>Sets the Shim of ErrorHandleScene.Draw(ErrorHandleScene this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimErrorHandleScene.KeyPressedKeyConstantScancodeBoolean">
            <summary>Sets the Shim of ErrorHandleScene.KeyPressed(ErrorHandleScene this, KeyConstant key, Scancode scancode, Boolean isRepeat)</summary>
        </member>
        <member name="T:Love.Fakes.ShimEvent">
            <summary>Shim type of Love.Event</summary>
        </member>
        <member name="M:Love.Fakes.ShimEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimEvent.#ctor(Love.Event)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.Constructor">
            <summary>Sets the Shim of Event.Event(Event this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.Init">
            <summary>Sets the Shim of Event.Init()</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.PollEventEventQueueBox">
            <summary>Sets the Shim of Event.Poll(EventQueueBox box)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.PollOrWaitRealEventEventQueueBoxBoolean">
            <summary>Sets the Shim of Event.PollOrWaitReal(EventQueueBox eHandler, Boolean poll_or_wait)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.QuitInt32">
            <summary>Sets the Shim of Event.Quit(Int32 exitStatus)</summary>
        </member>
        <member name="T:Love.Fakes.ShimEvent.ShimEventQueueBox">
            <summary>Shim type of Love.Event.EventQueueBox</summary>
        </member>
        <member name="M:Love.Fakes.ShimEvent.ShimEventQueueBox.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimEvent.ShimEventQueueBox.#ctor(Love.Event.EventQueueBox)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.DirectoryDroppedString">
            <summary>Sets the Shim of EventQueueBox.DirectoryDropped(EventQueueBox this, String path)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.FileDroppedString">
            <summary>Sets the Shim of EventQueueBox.FileDropped(EventQueueBox this, String filePath)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.GetScrollValue">
            <summary>Sets the Shim of EventQueueBox.GetScrollValue(EventQueueBox this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.JoystickAddedJoystick">
            <summary>Sets the Shim of EventQueueBox.JoystickAdded(EventQueueBox this, Joystick joystick)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.JoystickAxisJoystickSingleSingle">
            <summary>Sets the Shim of EventQueueBox.JoystickAxis(EventQueueBox this, Joystick joystick, Single axis, Single value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.JoystickGamepadAxisJoystickGamepadAxisSingle">
            <summary>Sets the Shim of EventQueueBox.JoystickGamepadAxis(EventQueueBox this, Joystick joystick, GamepadAxis axis, Single value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.JoystickGamepadPressedJoystickGamepadButton">
            <summary>Sets the Shim of EventQueueBox.JoystickGamepadPressed(EventQueueBox this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.JoystickGamepadReleasedJoystickGamepadButton">
            <summary>Sets the Shim of EventQueueBox.JoystickGamepadReleased(EventQueueBox this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.JoystickHatJoystickInt32JoystickHat">
            <summary>Sets the Shim of EventQueueBox.JoystickHat(EventQueueBox this, Joystick joystick, Int32 hat, JoystickHat direction)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.JoystickPressedJoystickInt32">
            <summary>Sets the Shim of EventQueueBox.JoystickPressed(EventQueueBox this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.JoystickReleasedJoystickInt32">
            <summary>Sets the Shim of EventQueueBox.JoystickReleased(EventQueueBox this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.JoystickRemovedJoystick">
            <summary>Sets the Shim of EventQueueBox.JoystickRemoved(EventQueueBox this, Joystick joystick)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.KeyPressedKeyConstantScancodeBoolean">
            <summary>Sets the Shim of EventQueueBox.KeyPressed(EventQueueBox this, KeyConstant key, Scancode scancode, Boolean isRepeat)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.KeyReleasedKeyConstantScancode">
            <summary>Sets the Shim of EventQueueBox.KeyReleased(EventQueueBox this, KeyConstant key, Scancode scancode)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.LowMemory">
            <summary>Sets the Shim of EventQueueBox.LowMemory(EventQueueBox this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.MouseFocusBoolean">
            <summary>Sets the Shim of EventQueueBox.MouseFocus(EventQueueBox this, Boolean focus)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.MouseMovedSingleSingleSingleSingleBoolean">
            <summary>Sets the Shim of EventQueueBox.MouseMoved(EventQueueBox this, Single x, Single y, Single dx, Single dy, Boolean isTouch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.MousePressedSingleSingleInt32Boolean">
            <summary>Sets the Shim of EventQueueBox.MousePressed(EventQueueBox this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.MouseReleasedSingleSingleInt32Boolean">
            <summary>Sets the Shim of EventQueueBox.MouseReleased(EventQueueBox this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.Quit">
            <summary>Sets the Shim of EventQueueBox.Quit(EventQueueBox this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.SceneHandleEventScene">
            <summary>Sets the Shim of EventQueueBox.SceneHandleEvent(EventQueueBox this, Scene scene)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.TextEditingStringInt32Int32">
            <summary>Sets the Shim of EventQueueBox.TextEditing(EventQueueBox this, String text, Int32 start, Int32 end)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.TextInputString">
            <summary>Sets the Shim of EventQueueBox.TextInput(EventQueueBox this, String text)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.TouchMovedInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of EventQueueBox.TouchMoved(EventQueueBox this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.TouchPressedInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of EventQueueBox.TouchPressed(EventQueueBox this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.TouchReleasedInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of EventQueueBox.TouchReleased(EventQueueBox this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.WheelMovedInt32Int32">
            <summary>Sets the Shim of EventQueueBox.WheelMoved(EventQueueBox this, Int32 x, Int32 y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.WindowFocusBoolean">
            <summary>Sets the Shim of EventQueueBox.WindowFocus(EventQueueBox this, Boolean focus)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.WindowResizeInt32Int32">
            <summary>Sets the Shim of EventQueueBox.WindowResize(EventQueueBox this, Int32 w, Int32 h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.AllInstances.WindowVisibleBoolean">
            <summary>Sets the Shim of EventQueueBox.WindowVisible(EventQueueBox this, Boolean visible)</summary>
        </member>
        <member name="M:Love.Fakes.ShimEvent.ShimEventQueueBox.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimEvent.ShimEventQueueBox.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.Constructor">
            <summary>Sets the Shim of EventQueueBox.EventQueueBox(EventQueueBox this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.DirectoryDroppedString">
            <summary>Sets the Shim of EventQueueBox.DirectoryDropped(EventQueueBox this, String path)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.FileDroppedString">
            <summary>Sets the Shim of EventQueueBox.FileDropped(EventQueueBox this, String filePath)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.GetScrollValue">
            <summary>Sets the Shim of EventQueueBox.GetScrollValue(EventQueueBox this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.JoystickAddedJoystick">
            <summary>Sets the Shim of EventQueueBox.JoystickAdded(EventQueueBox this, Joystick joystick)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.JoystickAxisJoystickSingleSingle">
            <summary>Sets the Shim of EventQueueBox.JoystickAxis(EventQueueBox this, Joystick joystick, Single axis, Single value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.JoystickGamepadAxisJoystickGamepadAxisSingle">
            <summary>Sets the Shim of EventQueueBox.JoystickGamepadAxis(EventQueueBox this, Joystick joystick, GamepadAxis axis, Single value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.JoystickGamepadPressedJoystickGamepadButton">
            <summary>Sets the Shim of EventQueueBox.JoystickGamepadPressed(EventQueueBox this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.JoystickGamepadReleasedJoystickGamepadButton">
            <summary>Sets the Shim of EventQueueBox.JoystickGamepadReleased(EventQueueBox this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.JoystickHatJoystickInt32JoystickHat">
            <summary>Sets the Shim of EventQueueBox.JoystickHat(EventQueueBox this, Joystick joystick, Int32 hat, JoystickHat direction)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.JoystickPressedJoystickInt32">
            <summary>Sets the Shim of EventQueueBox.JoystickPressed(EventQueueBox this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.JoystickReleasedJoystickInt32">
            <summary>Sets the Shim of EventQueueBox.JoystickReleased(EventQueueBox this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.JoystickRemovedJoystick">
            <summary>Sets the Shim of EventQueueBox.JoystickRemoved(EventQueueBox this, Joystick joystick)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.KeyPressedKeyConstantScancodeBoolean">
            <summary>Sets the Shim of EventQueueBox.KeyPressed(EventQueueBox this, KeyConstant key, Scancode scancode, Boolean isRepeat)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.KeyReleasedKeyConstantScancode">
            <summary>Sets the Shim of EventQueueBox.KeyReleased(EventQueueBox this, KeyConstant key, Scancode scancode)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.LowMemory">
            <summary>Sets the Shim of EventQueueBox.LowMemory(EventQueueBox this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.MouseFocusBoolean">
            <summary>Sets the Shim of EventQueueBox.MouseFocus(EventQueueBox this, Boolean focus)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.MouseMovedSingleSingleSingleSingleBoolean">
            <summary>Sets the Shim of EventQueueBox.MouseMoved(EventQueueBox this, Single x, Single y, Single dx, Single dy, Boolean isTouch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.MousePressedSingleSingleInt32Boolean">
            <summary>Sets the Shim of EventQueueBox.MousePressed(EventQueueBox this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.MouseReleasedSingleSingleInt32Boolean">
            <summary>Sets the Shim of EventQueueBox.MouseReleased(EventQueueBox this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.Quit">
            <summary>Sets the Shim of EventQueueBox.Quit(EventQueueBox this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.SceneHandleEventScene">
            <summary>Sets the Shim of EventQueueBox.SceneHandleEvent(EventQueueBox this, Scene scene)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.TextEditingStringInt32Int32">
            <summary>Sets the Shim of EventQueueBox.TextEditing(EventQueueBox this, String text, Int32 start, Int32 end)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.TextInputString">
            <summary>Sets the Shim of EventQueueBox.TextInput(EventQueueBox this, String text)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.TouchMovedInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of EventQueueBox.TouchMoved(EventQueueBox this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.TouchPressedInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of EventQueueBox.TouchPressed(EventQueueBox this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.TouchReleasedInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of EventQueueBox.TouchReleased(EventQueueBox this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.WheelMovedInt32Int32">
            <summary>Sets the Shim of EventQueueBox.WheelMoved(EventQueueBox this, Int32 x, Int32 y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.WindowFocusBoolean">
            <summary>Sets the Shim of EventQueueBox.WindowFocus(EventQueueBox this, Boolean focus)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.WindowResizeInt32Int32">
            <summary>Sets the Shim of EventQueueBox.WindowResize(EventQueueBox this, Int32 w, Int32 h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.ShimEventQueueBox.WindowVisibleBoolean">
            <summary>Sets the Shim of EventQueueBox.WindowVisible(EventQueueBox this, Boolean visible)</summary>
        </member>
        <member name="P:Love.Fakes.ShimEvent.WaitEventEventQueueBox">
            <summary>Sets the Shim of Event.Wait(EventQueueBox box)</summary>
        </member>
        <member name="T:Love.Fakes.ShimFPSCounter">
            <summary>Shim type of Love.FPSCounter</summary>
        </member>
        <member name="M:Love.Fakes.ShimFPSCounter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimFPSCounter.#ctor(Love.FPSCounter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimFPSCounter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimFPSCounter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimFPSCounter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimFPSCounter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimFPSCounter.Constructor">
            <summary>Sets the Shim of FPSCounter.FPSCounter(FPSCounter this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFPSCounter.GetFPS">
            <summary>Sets the Shim of FPSCounter.GetFPS()</summary>
        </member>
        <member name="P:Love.Fakes.ShimFPSCounter.StaticConstructor">
            <summary>Sets the Shim of FPSCounter.FPSCounter()</summary>
        </member>
        <member name="P:Love.Fakes.ShimFPSCounter.Step">
            <summary>Sets the Shim of FPSCounter.Step()</summary>
        </member>
        <member name="T:Love.Fakes.ShimFile">
            <summary>Shim type of Love.File</summary>
        </member>
        <member name="M:Love.Fakes.ShimFile.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimFile.#ctor(Love.File)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimFile.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.AllInstances.Close">
            <summary>Sets the Shim of File.Close(File this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.AllInstances.Flush">
            <summary>Sets the Shim of File.Flush(File this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.AllInstances.GetBufferBufferModeOutInt64Out">
            <summary>Sets the Shim of File.GetBuffer(File this, BufferMode* out_bufmode_type, Int64* out_size)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.AllInstances.GetFilename">
            <summary>Sets the Shim of File.GetFilename(File this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.AllInstances.GetMode">
            <summary>Sets the Shim of File.GetMode(File this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.AllInstances.GetSize">
            <summary>Sets the Shim of File.GetSize(File this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.AllInstances.IsEOF">
            <summary>Sets the Shim of File.IsEOF(File this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.AllInstances.IsOpen">
            <summary>Sets the Shim of File.IsOpen(File this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.AllInstances.OpenFileMode">
            <summary>Sets the Shim of File.Open(File this, FileMode mode_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.AllInstances.ReadInt64">
            <summary>Sets the Shim of File.Read(File this, Int64 size)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.AllInstances.SeekInt64">
            <summary>Sets the Shim of File.Seek(File this, Int64 pos)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.AllInstances.SetBufferBufferModeInt64">
            <summary>Sets the Shim of File.SetBuffer(File this, BufferMode bufmode_type, Int64 size)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.AllInstances.Tell">
            <summary>Sets the Shim of File.Tell(File this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.AllInstances.WriteByteArray">
            <summary>Sets the Shim of File.Write(File this, Byte[] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.AllInstances.WriteByteArrayInt64">
            <summary>Sets the Shim of File.Write(File this, Byte[] data, Int64 datasize)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.AllInstances.WriteData">
            <summary>Sets the Shim of File.Write(File this, Data data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.AllInstances.WriteDataInt64">
            <summary>Sets the Shim of File.Write(File this, Data data, Int64 datasize)</summary>
        </member>
        <member name="M:Love.Fakes.ShimFile.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimFile.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimFile.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.Close">
            <summary>Sets the Shim of File.Close(File this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.Constructor">
            <summary>Sets the Shim of File.File(File this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.Flush">
            <summary>Sets the Shim of File.Flush(File this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.GetBufferBufferModeOutInt64Out">
            <summary>Sets the Shim of File.GetBuffer(File this, BufferMode* out_bufmode_type, Int64* out_size)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.GetFilename">
            <summary>Sets the Shim of File.GetFilename(File this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.GetMode">
            <summary>Sets the Shim of File.GetMode(File this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.GetSize">
            <summary>Sets the Shim of File.GetSize(File this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.IsEOF">
            <summary>Sets the Shim of File.IsEOF(File this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.IsOpen">
            <summary>Sets the Shim of File.IsOpen(File this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.OpenFileMode">
            <summary>Sets the Shim of File.Open(File this, FileMode mode_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.ReadInt64">
            <summary>Sets the Shim of File.Read(File this, Int64 size)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.SeekInt64">
            <summary>Sets the Shim of File.Seek(File this, Int64 pos)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.SetBufferBufferModeInt64">
            <summary>Sets the Shim of File.SetBuffer(File this, BufferMode bufmode_type, Int64 size)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.Tell">
            <summary>Sets the Shim of File.Tell(File this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.WriteByteArray">
            <summary>Sets the Shim of File.Write(File this, Byte[] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.WriteByteArrayInt64">
            <summary>Sets the Shim of File.Write(File this, Byte[] data, Int64 datasize)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.WriteData">
            <summary>Sets the Shim of File.Write(File this, Data data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFile.WriteDataInt64">
            <summary>Sets the Shim of File.Write(File this, Data data, Int64 datasize)</summary>
        </member>
        <member name="T:Love.Fakes.ShimFileData">
            <summary>Shim type of Love.FileData</summary>
        </member>
        <member name="M:Love.Fakes.ShimFileData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimFileData.#ctor(Love.FileData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimFileData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileData.AllInstances.GetExtension">
            <summary>Sets the Shim of FileData.GetExtension(FileData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileData.AllInstances.GetFilename">
            <summary>Sets the Shim of FileData.GetFilename(FileData this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimFileData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimFileData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimFileData.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileData.Constructor">
            <summary>Sets the Shim of FileData.FileData(FileData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileData.GetExtension">
            <summary>Sets the Shim of FileData.GetExtension(FileData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileData.GetFilename">
            <summary>Sets the Shim of FileData.GetFilename(FileData this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimFileInfo">
            <summary>Shim type of Love.FileInfo</summary>
        </member>
        <member name="M:Love.Fakes.ShimFileInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimFileInfo.#ctor(Love.FileInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimFileInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileInfo.AllInstances.ToString01">
            <summary>Sets the Shim of FileInfo.ToString(FileInfo this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimFileInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimFileInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileInfo.ConstructorInt64Int64FileType">
            <summary>Sets the Shim of FileInfo.FileInfo(FileInfo this, Int64 size, Int64 modifyTime, FileType type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileInfo.ConvertFromUnixTimestampDouble">
            <summary>Sets the Shim of FileInfo.ConvertFromUnixTimestamp(Double timestamp)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileInfo.ConvertToUnixTimestampDateTime">
            <summary>Sets the Shim of FileInfo.ConvertToUnixTimestamp(DateTime date)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileInfo.ToString">
            <summary>Sets the Shim of FileInfo.ToString(FileInfo this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimFileSystem">
            <summary>Shim type of Love.FileSystem</summary>
        </member>
        <member name="M:Love.Fakes.ShimFileSystem.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimFileSystem.#ctor(Love.FileSystem)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimFileSystem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.AppendStringByteArray">
            <summary>Sets the Shim of FileSystem.Append(String path, Byte[] byteArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.AppendStringString">
            <summary>Sets the Shim of FileSystem.Append(String path, String content)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.AppendStringStringEncoding">
            <summary>Sets the Shim of FileSystem.Append(String path, String content, Encoding encoding)</summary>
        </member>
        <member name="M:Love.Fakes.ShimFileSystem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimFileSystem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.Constructor">
            <summary>Sets the Shim of FileSystem.FileSystem(FileSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.CreateDirectoryString">
            <summary>Sets the Shim of FileSystem.CreateDirectory(String pathString)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.GetAppdataDirectory">
            <summary>Sets the Shim of FileSystem.GetAppdataDirectory()</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.GetDirectoryItemsString">
            <summary>Sets the Shim of FileSystem.GetDirectoryItems(String path)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.GetExecutablePath">
            <summary>Sets the Shim of FileSystem.GetExecutablePath()</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.GetIdentity">
            <summary>Sets the Shim of FileSystem.GetIdentity()</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.GetInfoString">
            <summary>Sets the Shim of FileSystem.GetInfo(String path)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.GetSaveDirectory">
            <summary>Sets the Shim of FileSystem.GetSaveDirectory()</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.GetSource">
            <summary>Sets the Shim of FileSystem.GetSource()</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.GetUserDirectory">
            <summary>Sets the Shim of FileSystem.GetUserDirectory()</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.GetWorkingDirectory">
            <summary>Sets the Shim of FileSystem.GetWorkingDirectory()</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.InitString">
            <summary>Sets the Shim of FileSystem.Init(String args)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.LinesActionOfStringString">
            <summary>Sets the Shim of FileSystem.Lines(Action`1 lineFunction, String path)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.NewDroppedFileStringFileMode">
            <summary>Sets the Shim of FileSystem.NewDroppedFile(String filename, FileMode fmode_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.NewFileDataByteArrayString">
            <summary>Sets the Shim of FileSystem.NewFileData(Byte[] contents, String filename)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.NewFileDataFile">
            <summary>Sets the Shim of FileSystem.NewFileData(File file)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.NewFileDataString">
            <summary>Sets the Shim of FileSystem.NewFileData(String filename)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.NewFileDataStringString">
            <summary>Sets the Shim of FileSystem.NewFileData(String contents, String filename)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.NewFileStringFileMode">
            <summary>Sets the Shim of FileSystem.NewFile(String filename, FileMode fmode_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.ReadString">
            <summary>Sets the Shim of FileSystem.Read(String path)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.ReadStringInt32">
            <summary>Sets the Shim of FileSystem.Read(String path, Int32 len)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.RemoveString">
            <summary>Sets the Shim of FileSystem.Remove(String path)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.SetIdentityStringBoolean">
            <summary>Sets the Shim of FileSystem.SetIdentity(String path, Boolean append)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.SetSourceString">
            <summary>Sets the Shim of FileSystem.SetSource(String path)</summary>
        </member>
        <member name="T:Love.Fakes.ShimFileSystem.ShimPhysicsFS">
            <summary>Shim type of Love.FileSystem.PhysicsFS</summary>
        </member>
        <member name="M:Love.Fakes.ShimFileSystem.ShimPhysicsFS.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.ShimPhysicsFS.AppendStringByteArray">
            <summary>Sets the Shim of PhysicsFS.Append(String filename, Byte[] input)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.ShimPhysicsFS.AreSymlinksEnabled">
            <summary>Sets the Shim of PhysicsFS.AreSymlinksEnabled()</summary>
        </member>
        <member name="M:Love.Fakes.ShimFileSystem.ShimPhysicsFS.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimFileSystem.ShimPhysicsFS.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.ShimPhysicsFS.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.ShimPhysicsFS.CreateDirectoryString">
            <summary>Sets the Shim of PhysicsFS.CreateDirectory(String name)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.ShimPhysicsFS.GetDirectoryItemsString">
            <summary>Sets the Shim of PhysicsFS.GetDirectoryItems(String dir)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.ShimPhysicsFS.GetInfoString">
            <summary>Sets the Shim of PhysicsFS.GetInfo(String path)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.ShimPhysicsFS.GetRealDirectoryString">
            <summary>Sets the Shim of PhysicsFS.GetRealDirectory(String filename)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.ShimPhysicsFS.GetWorkingDirectory">
            <summary>Sets the Shim of PhysicsFS.GetWorkingDirectory()</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.ShimPhysicsFS.IsFused">
            <summary>Sets the Shim of PhysicsFS.IsFused()</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.ShimPhysicsFS.MountStringStringBoolean">
            <summary>Sets the Shim of PhysicsFS.Mount(String archive, String mountpoint, Boolean appendToPath)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.ShimPhysicsFS.NewFileStringFileMode">
            <summary>Sets the Shim of PhysicsFS.NewFile(String filename, FileMode fmode_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.ShimPhysicsFS.ReadStringInt64">
            <summary>Sets the Shim of PhysicsFS.Read(String filename, Int64 len)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.ShimPhysicsFS.RemoveString">
            <summary>Sets the Shim of PhysicsFS.Remove(String path)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.ShimPhysicsFS.UnmountString">
            <summary>Sets the Shim of PhysicsFS.Unmount(String archive)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.ShimPhysicsFS.WriteStringByteArray">
            <summary>Sets the Shim of PhysicsFS.Write(String filename, Byte[] input)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.ShimPhysicsFS._GetRequirePath">
            <summary>Sets the Shim of PhysicsFS._GetRequirePath()</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.ShimPhysicsFS._GetSourceBaseDirectory">
            <summary>Sets the Shim of PhysicsFS._GetSourceBaseDirectory()</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.ShimPhysicsFS._SetAndroidSaveExternalBoolean">
            <summary>Sets the Shim of PhysicsFS._SetAndroidSaveExternal(Boolean useExternal)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.ShimPhysicsFS._SetFusedBoolean">
            <summary>Sets the Shim of PhysicsFS._SetFused(Boolean flag)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.ShimPhysicsFS._SetRequirePathString">
            <summary>Sets the Shim of PhysicsFS._SetRequirePath(String paths)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.WriteStringByteArray">
            <summary>Sets the Shim of FileSystem.Write(String path, Byte[] bytes)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.WriteStringString">
            <summary>Sets the Shim of FileSystem.Write(String path, String contents)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFileSystem.WriteStringStringEncoding">
            <summary>Sets the Shim of FileSystem.Write(String path, String contents, Encoding encoding)</summary>
        </member>
        <member name="T:Love.Fakes.ShimFixture">
            <summary>Shim type of Love.Fixture</summary>
        </member>
        <member name="M:Love.Fakes.ShimFixture.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimFixture.#ctor(Love.Fixture)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimFixture.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.Destroy">
            <summary>Sets the Shim of Fixture.Destroy(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.GetBody">
            <summary>Sets the Shim of Fixture.GetBody(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.GetBoundingBoxInt32">
            <summary>Sets the Shim of Fixture.GetBoundingBox(Fixture this, Int32 childIndex)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.GetCategory">
            <summary>Sets the Shim of Fixture.GetCategory(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.GetDensity">
            <summary>Sets the Shim of Fixture.GetDensity(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.GetFilterDataSingleOutSingleOutSingleOut">
            <summary>Sets the Shim of Fixture.GetFilterData(Fixture this, Single* categories, Single* mask, Single* group)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.GetFriction">
            <summary>Sets the Shim of Fixture.GetFriction(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.GetGroupIndex">
            <summary>Sets the Shim of Fixture.GetGroupIndex(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.GetMask">
            <summary>Sets the Shim of Fixture.GetMask(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.GetMassDataVector2OutSingleOutSingleOut">
            <summary>Sets the Shim of Fixture.GetMassData(Fixture this, Vector2* center, Single* mass, Single* rotationalInertia)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.GetRestitution">
            <summary>Sets the Shim of Fixture.GetRestitution(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.GetShape">
            <summary>Sets the Shim of Fixture.GetShape(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.GetShapeType">
            <summary>Sets the Shim of Fixture.GetShapeType(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.IsDestroyed">
            <summary>Sets the Shim of Fixture.IsDestroyed(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.IsSensor">
            <summary>Sets the Shim of Fixture.IsSensor(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.RayCastSingleSingleSingleSingleSingleInt32Vector2OutSingleOut">
            <summary>Sets the Shim of Fixture.RayCast(Fixture this, Single x1, Single y1, Single x2, Single y2, Single maxFraction, Int32 childIndex, Vector2* pos, Single* fraction)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.SetCategoryUInt16">
            <summary>Sets the Shim of Fixture.SetCategory(Fixture this, UInt16 categories)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.SetDensitySingle">
            <summary>Sets the Shim of Fixture.SetDensity(Fixture this, Single density)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.SetFilterDataSingleSingleSingle">
            <summary>Sets the Shim of Fixture.SetFilterData(Fixture this, Single categories, Single mask, Single group)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.SetFrictionSingle">
            <summary>Sets the Shim of Fixture.SetFriction(Fixture this, Single friction)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.SetGroupIndexInt32">
            <summary>Sets the Shim of Fixture.SetGroupIndex(Fixture this, Int32 index)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.SetMaskUInt16">
            <summary>Sets the Shim of Fixture.SetMask(Fixture this, UInt16 masks)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.SetRestitutionSingle">
            <summary>Sets the Shim of Fixture.SetRestitution(Fixture this, Single restitution)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.SetSensorBoolean">
            <summary>Sets the Shim of Fixture.SetSensor(Fixture this, Boolean sensor)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.AllInstances.TestPointSingleSingle">
            <summary>Sets the Shim of Fixture.TestPoint(Fixture this, Single x, Single y)</summary>
        </member>
        <member name="M:Love.Fakes.ShimFixture.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimFixture.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimFixture.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.Constructor">
            <summary>Sets the Shim of Fixture.Fixture(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.Destroy">
            <summary>Sets the Shim of Fixture.Destroy(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.GetBody">
            <summary>Sets the Shim of Fixture.GetBody(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.GetBoundingBoxInt32">
            <summary>Sets the Shim of Fixture.GetBoundingBox(Fixture this, Int32 childIndex)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.GetCategory">
            <summary>Sets the Shim of Fixture.GetCategory(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.GetDensity">
            <summary>Sets the Shim of Fixture.GetDensity(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.GetFriction">
            <summary>Sets the Shim of Fixture.GetFriction(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.GetGroupIndex">
            <summary>Sets the Shim of Fixture.GetGroupIndex(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.GetMask">
            <summary>Sets the Shim of Fixture.GetMask(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.GetRestitution">
            <summary>Sets the Shim of Fixture.GetRestitution(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.GetShape">
            <summary>Sets the Shim of Fixture.GetShape(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.GetShapeType">
            <summary>Sets the Shim of Fixture.GetShapeType(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.IsDestroyed">
            <summary>Sets the Shim of Fixture.IsDestroyed(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.IsSensor">
            <summary>Sets the Shim of Fixture.IsSensor(Fixture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.RayCastSingleSingleSingleSingleSingleInt32Vector2OutSingleOut">
            <summary>Sets the Shim of Fixture.RayCast(Fixture this, Single x1, Single y1, Single x2, Single y2, Single maxFraction, Int32 childIndex, Vector2* pos, Single* fraction)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.SetCategoryUInt16">
            <summary>Sets the Shim of Fixture.SetCategory(Fixture this, UInt16 categories)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.SetDensitySingle">
            <summary>Sets the Shim of Fixture.SetDensity(Fixture this, Single density)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.SetFilterDataSingleSingleSingle">
            <summary>Sets the Shim of Fixture.SetFilterData(Fixture this, Single categories, Single mask, Single group)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.SetFrictionSingle">
            <summary>Sets the Shim of Fixture.SetFriction(Fixture this, Single friction)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.SetGroupIndexInt32">
            <summary>Sets the Shim of Fixture.SetGroupIndex(Fixture this, Int32 index)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.SetMaskUInt16">
            <summary>Sets the Shim of Fixture.SetMask(Fixture this, UInt16 masks)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.SetRestitutionSingle">
            <summary>Sets the Shim of Fixture.SetRestitution(Fixture this, Single restitution)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.SetSensorBoolean">
            <summary>Sets the Shim of Fixture.SetSensor(Fixture this, Boolean sensor)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFixture.TestPointSingleSingle">
            <summary>Sets the Shim of Fixture.TestPoint(Fixture this, Single x, Single y)</summary>
        </member>
        <member name="T:Love.Fakes.ShimFont">
            <summary>Shim type of Love.Font</summary>
        </member>
        <member name="M:Love.Fakes.ShimFont.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimFont.#ctor(Love.Font)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimFont.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.AllInstances.GetAscent">
            <summary>Sets the Shim of Font.GetAscent(Font this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.AllInstances.GetBaseline">
            <summary>Sets the Shim of Font.GetBaseline(Font this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.AllInstances.GetDescent">
            <summary>Sets the Shim of Font.GetDescent(Font this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.AllInstances.GetFilterFilterModeOutFilterModeOutSingleOut">
            <summary>Sets the Shim of Font.GetFilter(Font this, FilterMode* min_type, FilterMode* mag_type, Single* out_anisotropy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.AllInstances.GetHeight">
            <summary>Sets the Shim of Font.GetHeight(Font this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.AllInstances.GetLineHeight">
            <summary>Sets the Shim of Font.GetLineHeight(Font this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.AllInstances.GetWidthByteArray">
            <summary>Sets the Shim of Font.GetWidth(Font this, Byte[] str)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.AllInstances.GetWidthString">
            <summary>Sets the Shim of Font.GetWidth(Font this, String str)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.AllInstances.GetWrapStringSingle">
            <summary>Sets the Shim of Font.GetWrap(Font this, String text, Single wrap_limit)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.AllInstances.HasGlyphsByteArray">
            <summary>Sets the Shim of Font.HasGlyphs(Font this, Byte[] str)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.AllInstances.HasGlyphsString">
            <summary>Sets the Shim of Font.HasGlyphs(Font this, String str)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.AllInstances.HasGlyphsUInt32">
            <summary>Sets the Shim of Font.HasGlyphs(Font this, UInt32 chr)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.AllInstances.NewGlyphDataRasterizerString">
            <summary>Sets the Shim of Font.NewGlyphData(Font this, Rasterizer rasterizer, String glyph)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.AllInstances.SetFallbacksFontArray">
            <summary>Sets the Shim of Font.SetFallbacks(Font this, Font[] fallback)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.AllInstances.SetFilterFilterModeFilterModeSingle">
            <summary>Sets the Shim of Font.SetFilter(Font this, FilterMode min_type, FilterMode mag_type, Single anisotropy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.AllInstances.SetLineHeightSingle">
            <summary>Sets the Shim of Font.SetLineHeight(Font this, Single h)</summary>
        </member>
        <member name="M:Love.Fakes.ShimFont.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimFont.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimFont.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.Constructor">
            <summary>Sets the Shim of Font.Font(Font this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.GetAscent">
            <summary>Sets the Shim of Font.GetAscent(Font this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.GetBaseline">
            <summary>Sets the Shim of Font.GetBaseline(Font this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.GetDescent">
            <summary>Sets the Shim of Font.GetDescent(Font this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.GetHeight">
            <summary>Sets the Shim of Font.GetHeight(Font this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.GetLineHeight">
            <summary>Sets the Shim of Font.GetLineHeight(Font this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.GetWidthByteArray">
            <summary>Sets the Shim of Font.GetWidth(Font this, Byte[] str)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.GetWidthString">
            <summary>Sets the Shim of Font.GetWidth(Font this, String str)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.GetWrapStringSingle">
            <summary>Sets the Shim of Font.GetWrap(Font this, String text, Single wrap_limit)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.HasGlyphsByteArray">
            <summary>Sets the Shim of Font.HasGlyphs(Font this, Byte[] str)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.HasGlyphsString">
            <summary>Sets the Shim of Font.HasGlyphs(Font this, String str)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.HasGlyphsUInt32">
            <summary>Sets the Shim of Font.HasGlyphs(Font this, UInt32 chr)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.Init">
            <summary>Sets the Shim of Font.Init()</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.NewBMFontRasterizerFileDataImageDataArray">
            <summary>Sets the Shim of Font.NewBMFontRasterizer(FileData fileData, ImageData[] imageDatas)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.NewGlyphDataRasterizerByteArray">
            <summary>Sets the Shim of Font.NewGlyphData(Rasterizer rasterizer, Byte[] glyph)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.NewGlyphDataRasterizerInt32">
            <summary>Sets the Shim of Font.NewGlyphData(Rasterizer rasterizer, Int32 glyphCode)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.NewGlyphDataRasterizerString">
            <summary>Sets the Shim of Font.NewGlyphData(Font this, Rasterizer rasterizer, String glyph)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.NewImageRasterizerImageDataByteArrayInt32">
            <summary>Sets the Shim of Font.NewImageRasterizer(ImageData imageData, Byte[] glyphs, Int32 extraspacing)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.NewRasterizerFileData">
            <summary>Sets the Shim of Font.NewRasterizer(FileData fileData)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.NewRasterizerString">
            <summary>Sets the Shim of Font.NewRasterizer(String filename)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.NewTrueTypeRasterizerDataInt32HintingMode">
            <summary>Sets the Shim of Font.NewTrueTypeRasterizer(Data data, Int32 size, HintingMode hinting)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.NewTrueTypeRasterizerInt32HintingMode">
            <summary>Sets the Shim of Font.NewTrueTypeRasterizer(Int32 size, HintingMode hinting)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.SetFallbacksFontArray">
            <summary>Sets the Shim of Font.SetFallbacks(Font this, Font[] fallback)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.SetFilterFilterModeFilterModeSingle">
            <summary>Sets the Shim of Font.SetFilter(Font this, FilterMode min_type, FilterMode mag_type, Single anisotropy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFont.SetLineHeightSingle">
            <summary>Sets the Shim of Font.SetLineHeight(Font this, Single h)</summary>
        </member>
        <member name="T:Love.Fakes.ShimFrictionJoint">
            <summary>Shim type of Love.FrictionJoint</summary>
        </member>
        <member name="M:Love.Fakes.ShimFrictionJoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimFrictionJoint.#ctor(Love.FrictionJoint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimFrictionJoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimFrictionJoint.AllInstances.GetMaxForce">
            <summary>Sets the Shim of FrictionJoint.GetMaxForce(FrictionJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFrictionJoint.AllInstances.GetMaxTorque">
            <summary>Sets the Shim of FrictionJoint.GetMaxTorque(FrictionJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFrictionJoint.AllInstances.SetMaxForceSingle">
            <summary>Sets the Shim of FrictionJoint.SetMaxForce(FrictionJoint this, Single maxForce)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFrictionJoint.AllInstances.SetMaxTorqueSingle">
            <summary>Sets the Shim of FrictionJoint.SetMaxTorque(FrictionJoint this, Single maxTorque)</summary>
        </member>
        <member name="M:Love.Fakes.ShimFrictionJoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimFrictionJoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimFrictionJoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimFrictionJoint.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimFrictionJoint.Constructor">
            <summary>Sets the Shim of FrictionJoint.FrictionJoint(FrictionJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFrictionJoint.GetMaxForce">
            <summary>Sets the Shim of FrictionJoint.GetMaxForce(FrictionJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFrictionJoint.GetMaxTorque">
            <summary>Sets the Shim of FrictionJoint.GetMaxTorque(FrictionJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFrictionJoint.SetMaxForceSingle">
            <summary>Sets the Shim of FrictionJoint.SetMaxForce(FrictionJoint this, Single maxForce)</summary>
        </member>
        <member name="P:Love.Fakes.ShimFrictionJoint.SetMaxTorqueSingle">
            <summary>Sets the Shim of FrictionJoint.SetMaxTorque(FrictionJoint this, Single maxTorque)</summary>
        </member>
        <member name="T:Love.Fakes.ShimGearJoint">
            <summary>Shim type of Love.GearJoint</summary>
        </member>
        <member name="M:Love.Fakes.ShimGearJoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimGearJoint.#ctor(Love.GearJoint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimGearJoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimGearJoint.AllInstances.GetJointsJointOutJointOut">
            <summary>Sets the Shim of GearJoint.GetJoints(GearJoint this, Joint* j1, Joint* j2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGearJoint.AllInstances.GetRatio">
            <summary>Sets the Shim of GearJoint.GetRatio(GearJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGearJoint.AllInstances.SetRatioSingle">
            <summary>Sets the Shim of GearJoint.SetRatio(GearJoint this, Single ration)</summary>
        </member>
        <member name="M:Love.Fakes.ShimGearJoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimGearJoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimGearJoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimGearJoint.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimGearJoint.Constructor">
            <summary>Sets the Shim of GearJoint.GearJoint(GearJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGearJoint.GetJointsJointOutJointOut">
            <summary>Sets the Shim of GearJoint.GetJoints(GearJoint this, Joint* j1, Joint* j2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGearJoint.GetRatio">
            <summary>Sets the Shim of GearJoint.GetRatio(GearJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGearJoint.SetRatioSingle">
            <summary>Sets the Shim of GearJoint.SetRatio(GearJoint this, Single ration)</summary>
        </member>
        <member name="T:Love.Fakes.ShimGlyphData">
            <summary>Shim type of Love.GlyphData</summary>
        </member>
        <member name="M:Love.Fakes.ShimGlyphData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimGlyphData.#ctor(Love.GlyphData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimGlyphData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimGlyphData.AllInstances.GetAdvance">
            <summary>Sets the Shim of GlyphData.GetAdvance(GlyphData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGlyphData.AllInstances.GetBearingInt32OutInt32Out">
            <summary>Sets the Shim of GlyphData.GetBearing(GlyphData this, Int32* out_bearingX, Int32* out_bearingY)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGlyphData.AllInstances.GetBoundingBoxInt32OutInt32OutInt32OutInt32Out">
            <summary>Sets the Shim of GlyphData.GetBoundingBox(GlyphData this, Int32* out_minX, Int32* out_minY, Int32* out_width, Int32* out_height)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGlyphData.AllInstances.GetFormat">
            <summary>Sets the Shim of GlyphData.GetFormat(GlyphData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGlyphData.AllInstances.GetGlyph">
            <summary>Sets the Shim of GlyphData.GetGlyph(GlyphData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGlyphData.AllInstances.GetGlyphString">
            <summary>Sets the Shim of GlyphData.GetGlyphString(GlyphData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGlyphData.AllInstances.GetHeight">
            <summary>Sets the Shim of GlyphData.GetHeight(GlyphData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGlyphData.AllInstances.GetWidth">
            <summary>Sets the Shim of GlyphData.GetWidth(GlyphData this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimGlyphData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimGlyphData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimGlyphData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimGlyphData.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimGlyphData.Constructor">
            <summary>Sets the Shim of GlyphData.GlyphData(GlyphData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGlyphData.GetAdvance">
            <summary>Sets the Shim of GlyphData.GetAdvance(GlyphData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGlyphData.GetBearingInt32OutInt32Out">
            <summary>Sets the Shim of GlyphData.GetBearing(GlyphData this, Int32* out_bearingX, Int32* out_bearingY)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGlyphData.GetFormat">
            <summary>Sets the Shim of GlyphData.GetFormat(GlyphData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGlyphData.GetGlyph">
            <summary>Sets the Shim of GlyphData.GetGlyph(GlyphData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGlyphData.GetGlyphString">
            <summary>Sets the Shim of GlyphData.GetGlyphString(GlyphData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGlyphData.GetHeight">
            <summary>Sets the Shim of GlyphData.GetHeight(GlyphData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGlyphData.GetWidth">
            <summary>Sets the Shim of GlyphData.GetWidth(GlyphData this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimGraphics">
            <summary>Shim type of Love.Graphics</summary>
        </member>
        <member name="M:Love.Fakes.ShimGraphics.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimGraphics.#ctor(Love.Graphics)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimGraphics.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.AllInstances.NewVideoStringBooleanNullableOfSingle">
            <summary>Sets the Shim of Graphics.NewVideo(Graphics this, String filename, Boolean audio, Nullable`1 dipScale)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.ApplyTransformMatrix44">
            <summary>Sets the Shim of Graphics.ApplyTransform(Matrix44 m)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.ArcDrawModeArcTypeSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Graphics.Arc(DrawMode mode_type, ArcType arcmode_type, Single x, Single y, Single radius, Single angle1, Single angle2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.ArcDrawModeArcTypeSingleSingleSingleSingleSingleInt32">
            <summary>Sets the Shim of Graphics.Arc(DrawMode mode_type, ArcType arcmode_type, Single x, Single y, Single radius, Single angle1, Single angle2, Int32 points)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.ArcDrawModeSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Graphics.Arc(DrawMode draw_mode, Single x, Single y, Single radius, Single angle1, Single angle2)</summary>
        </member>
        <member name="M:Love.Fakes.ShimGraphics.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimGraphics.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.CircleDrawModeSingleSingleSingle">
            <summary>Sets the Shim of Graphics.Circle(DrawMode mode_type, Single x, Single y, Single radius)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.CircleDrawModeSingleSingleSingleInt32">
            <summary>Sets the Shim of Graphics.Circle(DrawMode mode_type, Single x, Single y, Single radius, Int32 points)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.CircleDrawModeVector2Single">
            <summary>Sets the Shim of Graphics.Circle(DrawMode mode_type, Vector2 center, Single radius)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.CircleDrawModeVector2SingleInt32">
            <summary>Sets the Shim of Graphics.Circle(DrawMode mode_type, Vector2 center, Single radius, Int32 point)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.Clear">
            <summary>Sets the Shim of Graphics.Clear()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.ClearColor">
            <summary>Sets the Shim of Graphics.Clear(Color c)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.ClearSingleSingleSingleSingleSingleBooleanSingleBoolean">
            <summary>Sets the Shim of Graphics.Clear(Single r, Single g, Single b, Single a, Single stencil, Boolean enable_stencil, Single depth, Boolean enable_depth)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.ClearVector4ArrayBooleanArraySingleBooleanSingleBoolean">
            <summary>Sets the Shim of Graphics.Clear(Vector4[] colorList, Boolean[] enableList, Single stencil, Boolean enable_stencil, Single depth, Boolean enable_depth)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.Constructor">
            <summary>Sets the Shim of Graphics.Graphics(Graphics this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.DiscardBooleanArrayBoolean">
            <summary>Sets the Shim of Graphics.Discard(Boolean[] discardColors, Boolean discardStencil)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.DiscardBooleanBoolean">
            <summary>Sets the Shim of Graphics.Discard(Boolean discardColor, Boolean discardStencil)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.DrawDrawableSingleSingleSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Graphics.Draw(Drawable drawable, Single x, Single y, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.DrawInstancedMeshInt32SingleSingleSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Graphics.DrawInstanced(Mesh mesh, Int32 instanceCount, Single x, Single y, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.DrawLayerTextureInt32SingleSingleSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Graphics.DrawLayer(Texture texture, Int32 layer, Single x, Single y, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.DrawLayerTextureQuadInt32SingleSingleSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Graphics.DrawLayer(Texture texture, Quad quad, Int32 layer, Single x, Single y, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.DrawQuadTextureSingleSingleSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Graphics.Draw(Quad quad, Texture texture, Single x, Single y, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.EllipseDrawModeSingleSingleSingleSingleInt32">
            <summary>Sets the Shim of Graphics.Ellipse(DrawMode mode_type, Single x, Single y, Single radiusX, Single radiusY, Int32 points)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.FlushBatch">
            <summary>Sets the Shim of Graphics.FlushBatch()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetBackgroundColor">
            <summary>Sets the Shim of Graphics.GetBackgroundColor()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetBlendModeBlendModeOutBlendAlphaModeOut">
            <summary>Sets the Shim of Graphics.GetBlendMode(BlendMode* out_blendMode_type, BlendAlphaMode* out_blendAlphaMode_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetCanvas">
            <summary>Sets the Shim of Graphics.GetCanvas()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetCanvasFormatsPixelFormat">
            <summary>Sets the Shim of Graphics.GetCanvasFormats(PixelFormat format_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetColor">
            <summary>Sets the Shim of Graphics.GetColor()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetColorMaskBooleanOutBooleanOutBooleanOutBooleanOut">
            <summary>Sets the Shim of Graphics.GetColorMask(Boolean* out_r, Boolean* out_g, Boolean* out_b, Boolean* out_a)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetDPIScale">
            <summary>Sets the Shim of Graphics.GetDPIScale()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetDefaultFilterFilterModeOutFilterModeOutInt32Out">
            <summary>Sets the Shim of Graphics.GetDefaultFilter(FilterMode* out_filterModeMagMin_type, FilterMode* out_filterModeMag_type, Int32* out_anisotropy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetDepthModeCompareModeOutBooleanOut">
            <summary>Sets the Shim of Graphics.GetDepthMode(CompareMode* compare, Boolean* write)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetDimensions">
            <summary>Sets the Shim of Graphics.GetDimensions()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetFont">
            <summary>Sets the Shim of Graphics.GetFont()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetFrontFaceWinding">
            <summary>Sets the Shim of Graphics.GetFrontFaceWinding()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetHeight">
            <summary>Sets the Shim of Graphics.GetHeight()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetImageFormatsPixelFormat">
            <summary>Sets the Shim of Graphics.GetImageFormats(PixelFormat format_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetLineJoin">
            <summary>Sets the Shim of Graphics.GetLineJoin()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetLineStyle">
            <summary>Sets the Shim of Graphics.GetLineStyle()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetLineWidth">
            <summary>Sets the Shim of Graphics.GetLineWidth()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetMeshCullMode">
            <summary>Sets the Shim of Graphics.GetMeshCullMode()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetPointSize">
            <summary>Sets the Shim of Graphics.GetPointSize()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetRendererInfoStringOutStringOutStringOutStringOut">
            <summary>Sets the Shim of Graphics.GetRendererInfo(String* name, String* version, String* vendor, String* device)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetScissor">
            <summary>Sets the Shim of Graphics.GetScissor()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetShader">
            <summary>Sets the Shim of Graphics.GetShader()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetStackDepth">
            <summary>Sets the Shim of Graphics.GetStackDepth()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetStatsInt32OutInt32OutInt32OutInt32OutInt32OutInt32OutInt32Out">
            <summary>Sets the Shim of Graphics.GetStats(Int32* out_drawCalls, Int32* out_canvasSwitches, Int32* out_shaderSwitches, Int32* out_canvases, Int32* out_images, Int32* out_fonts, Int32* out_textureMemory)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetStencilTestCompareModeOutInt32Out">
            <summary>Sets the Shim of Graphics.GetStencilTest(CompareMode* out_compare_type, Int32* out_compareValue)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetSupportedFeature">
            <summary>Sets the Shim of Graphics.GetSupported(Feature feature_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetSystemLimitsGraphicsSystemLimit">
            <summary>Sets the Shim of Graphics.GetSystemLimits(SystemLimit limit_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetTextureTypes">
            <summary>Sets the Shim of Graphics.GetTextureTypes()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.GetWidth">
            <summary>Sets the Shim of Graphics.GetWidth()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.Init">
            <summary>Sets the Shim of Graphics.Init()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.IntersectScissorInt32Int32Int32Int32">
            <summary>Sets the Shim of Graphics.IntersectScissor(Int32 x, Int32 y, Int32 w, Int32 h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.IntersectScissorRectangle">
            <summary>Sets the Shim of Graphics.IntersectScissor(Rectangle r)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.IntersectScissorRectangleF">
            <summary>Sets the Shim of Graphics.IntersectScissor(RectangleF r)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.InverseTransformPointSingleSingle">
            <summary>Sets the Shim of Graphics.InverseTransformPoint(Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.InverseTransformPointVector2">
            <summary>Sets the Shim of Graphics.InverseTransformPoint(Vector2 p)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.IsActive">
            <summary>Sets the Shim of Graphics.IsActive()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.IsCreated">
            <summary>Sets the Shim of Graphics.IsCreated()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.IsGammaCorrect">
            <summary>Sets the Shim of Graphics.IsGammaCorrect()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.IsOpenGLES">
            <summary>Sets the Shim of Graphics.IsOpenGLES()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.IsWireframe">
            <summary>Sets the Shim of Graphics.IsWireframe()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.LineSingleArray">
            <summary>Sets the Shim of Graphics.Line(Single[] points)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.LineVector2Array">
            <summary>Sets the Shim of Graphics.Line(Vector2[] coords)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.NewBMFontString">
            <summary>Sets the Shim of Graphics.NewBMFont(String filename)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.NewBMFontStringStringArray">
            <summary>Sets the Shim of Graphics.NewBMFont(String filename, String[] imageFileName)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.NewCanvas">
            <summary>Sets the Shim of Graphics.NewCanvas()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.NewCanvasInt32Int32GraphicsSettings">
            <summary>Sets the Shim of Graphics.NewCanvas(Int32 width, Int32 height, Settings settings)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.NewFontInt32HintingMode">
            <summary>Sets the Shim of Graphics.NewFont(Int32 size, HintingMode hinting)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.NewFontRasterizer">
            <summary>Sets the Shim of Graphics.NewFont(Rasterizer rasterizer)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.NewFontStringInt32HintingMode">
            <summary>Sets the Shim of Graphics.NewFont(String filename, Int32 size, HintingMode hinting)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.NewImageCompressedImageDataBooleanBoolean">
            <summary>Sets the Shim of Graphics.NewImage(CompressedImageData compressedImageData, Boolean flagMipmaps, Boolean flagLinear)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.NewImageFontStringStringInt32">
            <summary>Sets the Shim of Graphics.NewImageFont(String filename, String glyphs, Int32 extraspacing)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.NewImageImageDataBaseArrayBooleanBoolean">
            <summary>Sets the Shim of Graphics.NewImage(ImageDataBase[] imageData, Boolean flagMipmaps, Boolean flagLinear)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.NewImageImageDataBooleanBoolean">
            <summary>Sets the Shim of Graphics.NewImage(ImageData imageData, Boolean flagMipmaps, Boolean flagLinear)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.NewImageStringBooleanBoolean">
            <summary>Sets the Shim of Graphics.NewImage(String filename, Boolean flagMipmaps, Boolean flagLinear)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.NewMeshInt32MeshDrawModeSpriteBatchUsage">
            <summary>Sets the Shim of Graphics.NewMesh(Int32 count, MeshDrawMode drawMode, SpriteBatchUsage usage)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.NewMeshMeshFormatDescribeByteArrayMeshDrawModeSpriteBatchUsage">
            <summary>Sets the Shim of Graphics.NewMesh(MeshFormatDescribe desc, Byte[] data, MeshDrawMode drawMode, SpriteBatchUsage usage)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.NewMeshMeshFormatDescribeInt32MeshDrawModeSpriteBatchUsage">
            <summary>Sets the Shim of Graphics.NewMesh(MeshFormatDescribe desc, Int32 count, MeshDrawMode drawMode, SpriteBatchUsage usage)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.NewParticleSystemTextureInt32">
            <summary>Sets the Shim of Graphics.NewParticleSystem(Texture texture, Int32 buffer)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.NewQuadDoubleDoubleDoubleDoubleDoubleDouble">
            <summary>Sets the Shim of Graphics.NewQuad(Double x, Double y, Double w, Double h, Double sw, Double sh)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.NewShaderString">
            <summary>Sets the Shim of Graphics.NewShader(String codeStr)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.NewShaderStringString">
            <summary>Sets the Shim of Graphics.NewShader(String vertexCodeStr, String pixelCodeStr)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.NewSpriteBatchTextureInt32SpriteBatchUsage">
            <summary>Sets the Shim of Graphics.NewSpriteBatch(Texture texture, Int32 maxSprites, SpriteBatchUsage usage_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.NewTextFontColoredStringArray">
            <summary>Sets the Shim of Graphics.NewText(Font font, ColoredStringArray coloredStr)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.NewTextFontString">
            <summary>Sets the Shim of Graphics.NewText(Font font, String coloredStr)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.NewVideoStringBooleanNullableOfSingle">
            <summary>Sets the Shim of Graphics.NewVideo(Graphics this, String filename, Boolean audio, Nullable`1 dipScale)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.NewVideoVideoStreamBooleanNullableOfSingle">
            <summary>Sets the Shim of Graphics.NewVideo(VideoStream videoStream, Boolean audio, Nullable`1 dipScale)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.Origin">
            <summary>Sets the Shim of Graphics.Origin()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.PointsColoredPointArray">
            <summary>Sets the Shim of Graphics.Points(ColoredPoint[] coloredPoints)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.PointsSingleArray">
            <summary>Sets the Shim of Graphics.Points(Single[] points)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.PointsVector2Array">
            <summary>Sets the Shim of Graphics.Points(Vector2[] coords)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.PointsVector2ArrayVector4Array">
            <summary>Sets the Shim of Graphics.Points(Vector2[] coords, Vector4[] colors)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.PolygonDrawModeSingleArray">
            <summary>Sets the Shim of Graphics.Polygon(DrawMode mode, Single[] points)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.PolygonDrawModeVector2Array">
            <summary>Sets the Shim of Graphics.Polygon(DrawMode mode_type, Vector2[] coords)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.Pop">
            <summary>Sets the Shim of Graphics.Pop()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.Present">
            <summary>Sets the Shim of Graphics.Present()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.PrintColoredStringArraySingleSingleSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Graphics.Print(ColoredString[] coloredStr, Single x, Single y, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.PrintColoredStringArraySingleSingleSingleSingleSingleSingleSingleSingleSingle01">
            <summary>Sets the Shim of Graphics.Print(ColoredStringArray coloredStr, Single x, Single y, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.PrintStringSingleSingleSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Graphics.Print(String text, Single x, Single y, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.PrintfColoredStringArraySingleSingleSingleAlignModeSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Graphics.Printf(ColoredStringArray coloredStr, Single x, Single y, Single wrap, AlignMode align_type, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.PrintfStringSingleSingleSingleAlignModeSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Graphics.Printf(String text, Single x, Single y, Single wrap, AlignMode align_type, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.PushStackType">
            <summary>Sets the Shim of Graphics.Push(StackType stack)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.RectangleDrawModeRectangle">
            <summary>Sets the Shim of Graphics.Rectangle(DrawMode mode, Rectangle rect)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.RectangleDrawModeRectangleF">
            <summary>Sets the Shim of Graphics.Rectangle(DrawMode mode, RectangleF rect)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.RectangleDrawModeRectangleFArray">
            <summary>Sets the Shim of Graphics.Rectangle(DrawMode mode, RectangleF[] rectList)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.RectangleDrawModeSingleSingleSingleSingle">
            <summary>Sets the Shim of Graphics.Rectangle(DrawMode mode_type, Single x, Single y, Single w, Single h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.RectangleDrawModeSingleSingleSingleSingleSingleSingleInt32">
            <summary>Sets the Shim of Graphics.Rectangle(DrawMode mode_type, Single x, Single y, Single w, Single h, Single rx, Single ry, Int32 points)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.ReplaceTransformMatrix44">
            <summary>Sets the Shim of Graphics.ReplaceTransform(Matrix44 m)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.Reset">
            <summary>Sets the Shim of Graphics.Reset()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.RotateSingle">
            <summary>Sets the Shim of Graphics.Rotate(Single angle)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.ScaleSingle">
            <summary>Sets the Shim of Graphics.Scale(Single scale)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.ScaleSingleSingle">
            <summary>Sets the Shim of Graphics.Scale(Single sx, Single sy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.ScaleVector2">
            <summary>Sets the Shim of Graphics.Scale(Vector2 scale)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetBackgroundColorColor">
            <summary>Sets the Shim of Graphics.SetBackgroundColor(Color color)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetBackgroundColorSingleSingleSingleSingle">
            <summary>Sets the Shim of Graphics.SetBackgroundColor(Single r, Single g, Single b, Single a)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetBlendModeBlendModeBlendAlphaMode">
            <summary>Sets the Shim of Graphics.SetBlendMode(BlendMode blendMode, BlendAlphaMode blendAlphaMode)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetCanvasCanvasArray">
            <summary>Sets the Shim of Graphics.SetCanvas(Canvas[] canvas)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetCanvasRenderTargetInfo">
            <summary>Sets the Shim of Graphics.SetCanvas(RenderTargetInfo renderTargetInfo)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetColorColor">
            <summary>Sets the Shim of Graphics.SetColor(Color color)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetColorMaskBooleanBooleanBooleanBoolean">
            <summary>Sets the Shim of Graphics.SetColorMask(Boolean r, Boolean g, Boolean b, Boolean a)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetColorSingleSingleSingleSingle">
            <summary>Sets the Shim of Graphics.SetColor(Single r, Single g, Single b, Single a)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetColorVector4">
            <summary>Sets the Shim of Graphics.SetColor(Vector4 color)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetDefaultFilterFilterModeFilterModeInt32">
            <summary>Sets the Shim of Graphics.SetDefaultFilter(FilterMode filterModeMagMin_type, FilterMode filterModeMag_type, Int32 anisotropy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetDepthModeCompareModeBoolean">
            <summary>Sets the Shim of Graphics.SetDepthMode(CompareMode odepthMode, Boolean write)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetFontFont">
            <summary>Sets the Shim of Graphics.SetFont(Font font)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetLineJoinLineJoin">
            <summary>Sets the Shim of Graphics.SetLineJoin(LineJoin join_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetLineStyleLineStyle">
            <summary>Sets the Shim of Graphics.SetLineStyle(LineStyle style_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetLineWidthSingle">
            <summary>Sets the Shim of Graphics.SetLineWidth(Single width)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetMeshCullModeVertexCullMode">
            <summary>Sets the Shim of Graphics.SetMeshCullMode(VertexCullMode mode)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetPointSizeSingle">
            <summary>Sets the Shim of Graphics.SetPointSize(Single size)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetScissor">
            <summary>Sets the Shim of Graphics.SetScissor()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetScissorInt32Int32Int32Int32">
            <summary>Sets the Shim of Graphics.SetScissor(Int32 x, Int32 y, Int32 w, Int32 h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetScissorRectangle">
            <summary>Sets the Shim of Graphics.SetScissor(Rectangle r)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetScissorRectangleF">
            <summary>Sets the Shim of Graphics.SetScissor(RectangleF r)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetShader">
            <summary>Sets the Shim of Graphics.SetShader()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetShaderShader">
            <summary>Sets the Shim of Graphics.SetShader(Shader shader)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetStencilTest">
            <summary>Sets the Shim of Graphics.SetStencilTest()</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetStencilTestCompareModeInt32">
            <summary>Sets the Shim of Graphics.SetStencilTest(CompareMode compare_type, Int32 compareValue)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.SetWireframeBoolean">
            <summary>Sets the Shim of Graphics.SetWireframe(Boolean enable)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.ShearSingleSingle">
            <summary>Sets the Shim of Graphics.Shear(Single kx, Single ky)</summary>
        </member>
        <member name="T:Love.Fakes.ShimGraphics.ShimSettings">
            <summary>Shim type of Love.Graphics.Settings</summary>
        </member>
        <member name="M:Love.Fakes.ShimGraphics.ShimSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimGraphics.ShimSettings.#ctor(Love.Graphics.Settings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimGraphics.ShimSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimGraphics.ShimSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimGraphics.ShimSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.ShimSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.ShimSettings.Constructor">
            <summary>Sets the Shim of Settings.Settings(Settings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.StencilActionStencilActionInt32Boolean">
            <summary>Sets the Shim of Graphics.Stencil(Action actionFunc, StencilAction stencilAction, Int32 value, Boolean keepValue)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.TransformPointSingleSingle">
            <summary>Sets the Shim of Graphics.TransformPoint(Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.TransformPointVector2">
            <summary>Sets the Shim of Graphics.TransformPoint(Vector2 p)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.TranslateSingleSingle">
            <summary>Sets the Shim of Graphics.Translate(Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.TranslateVector2">
            <summary>Sets the Shim of Graphics.Translate(Vector2 offset)</summary>
        </member>
        <member name="P:Love.Fakes.ShimGraphics.ValidateShaderBooleanStringStringStringOut">
            <summary>Sets the Shim of Graphics.ValidateShader(Boolean gles, String vertexCodeStr, String pixelCodeStr, String* errorString)</summary>
        </member>
        <member name="T:Love.Fakes.ShimHalf">
            <summary>Shim type of Love.Half</summary>
        </member>
        <member name="M:Love.Fakes.ShimHalf.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimHalf.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimHalf.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimHalf.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimHalf.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimHalf.FloatToIntSingle">
            <summary>Sets the Shim of Half.FloatToInt(Single fval)</summary>
        </member>
        <member name="P:Love.Fakes.ShimHalf.FromFloatSingle">
            <summary>Sets the Shim of Half.FromFloat(Single v)</summary>
        </member>
        <member name="P:Love.Fakes.ShimHalf.IntToFloatInt32">
            <summary>Sets the Shim of Half.IntToFloat(Int32 hbits)</summary>
        </member>
        <member name="T:Love.Fakes.ShimImage">
            <summary>Shim type of Love.Image</summary>
        </member>
        <member name="M:Love.Fakes.ShimImage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimImage.#ctor(Love.Image)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimImage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimImage.AllInstances.IsCompressed">
            <summary>Sets the Shim of Image.IsCompressed(Image this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImage.AllInstances.ReplacePixelsImageDataInt32Int32Int32Int32Boolean">
            <summary>Sets the Shim of Image.ReplacePixels(Image this, ImageData imageData, Int32 slice, Int32 mipmap, Int32 x, Int32 y, Boolean reloadmipmaps)</summary>
        </member>
        <member name="M:Love.Fakes.ShimImage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimImage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimImage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimImage.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimImage.Constructor">
            <summary>Sets the Shim of Image.Image(Image this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImage.Init">
            <summary>Sets the Shim of Image.Init()</summary>
        </member>
        <member name="P:Love.Fakes.ShimImage.IsCompressed">
            <summary>Sets the Shim of Image.IsCompressed(Image this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImage.IsCompressedFileData">
            <summary>Sets the Shim of Image.IsCompressed(FileData data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImage.IsCompressedString">
            <summary>Sets the Shim of Image.IsCompressed(String filename)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImage.NewCompressedDataFileData">
            <summary>Sets the Shim of Image.NewCompressedData(FileData data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImage.NewCompressedDataString">
            <summary>Sets the Shim of Image.NewCompressedData(String filename)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImage.NewImageDataColorArrayArrayImageDataPixelFormat">
            <summary>Sets the Shim of Image.NewImageData(Color[][] rawData, ImageDataPixelFormat format)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImage.NewImageDataColorMdArray2ImageDataPixelFormat">
            <summary>Sets the Shim of Image.NewImageData(Color[,] rawData, ImageDataPixelFormat format)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImage.NewImageDataFileData">
            <summary>Sets the Shim of Image.NewImageData(FileData data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImage.NewImageDataInt32Int32ImageDataPixelFormatByteArray">
            <summary>Sets the Shim of Image.NewImageData(Int32 w, Int32 h, ImageDataPixelFormat format, Byte[] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImage.NewImageDataString">
            <summary>Sets the Shim of Image.NewImageData(String filename)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImage.NewImageDataUInt32UInt32ImageDataPixelFormatByteArray">
            <summary>Sets the Shim of Image.NewImageData(UInt32 w, UInt32 h, ImageDataPixelFormat format, Byte[] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImage.NewImageDataVector4ArrayArrayImageDataPixelFormat">
            <summary>Sets the Shim of Image.NewImageData(Vector4[][] rawData, ImageDataPixelFormat format)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImage.NewImageDataVector4MdArray2ImageDataPixelFormat">
            <summary>Sets the Shim of Image.NewImageData(Vector4[,] rawData, ImageDataPixelFormat format)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImage.ReplacePixelsImageDataInt32Int32Int32Int32Boolean">
            <summary>Sets the Shim of Image.ReplacePixels(Image this, ImageData imageData, Int32 slice, Int32 mipmap, Int32 x, Int32 y, Boolean reloadmipmaps)</summary>
        </member>
        <member name="T:Love.Fakes.ShimImageData">
            <summary>Shim type of Love.ImageData</summary>
        </member>
        <member name="M:Love.Fakes.ShimImageData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimImageData.#ctor(Love.ImageData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimImageData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.CheckInSideInt32Int32">
            <summary>Sets the Shim of ImageData.CheckInSide(ImageData this, Int32 x, Int32 y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.CheckInSideInt32Int32Int32Int32">
            <summary>Sets the Shim of ImageData.CheckInSide(ImageData this, Int32 x, Int32 y, Int32 w, Int32 h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.EncodeImageFormat">
            <summary>Sets the Shim of ImageData.Encode(ImageData this, ImageFormat format)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.EncodeImageFormatBooleanString">
            <summary>Sets the Shim of ImageData.Encode(ImageData this, ImageFormat format_type, Boolean writeToFile, String filename)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.EncodeImageFormatString">
            <summary>Sets the Shim of ImageData.Encode(ImageData this, ImageFormat format, String filename)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.GetFormat">
            <summary>Sets the Shim of ImageData.GetFormat(ImageData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.GetHeight">
            <summary>Sets the Shim of ImageData.GetHeight(ImageData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.GetPixelInt32Int32">
            <summary>Sets the Shim of ImageData.GetPixel(ImageData this, Int32 x, Int32 y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.GetPixels">
            <summary>Sets the Shim of ImageData.GetPixels(ImageData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.GetPixelsFloat">
            <summary>Sets the Shim of ImageData.GetPixelsFloat(ImageData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.GetPixelsFloatInt32Int32Int32Int32">
            <summary>Sets the Shim of ImageData.GetPixelsFloat(ImageData this, Int32 x, Int32 y, Int32 w, Int32 h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.GetPixelsInt32Int32Int32Int32">
            <summary>Sets the Shim of ImageData.GetPixels(ImageData this, Int32 x, Int32 y, Int32 w, Int32 h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.GetPixelsRectangle">
            <summary>Sets the Shim of ImageData.GetPixels(ImageData this, Rectangle area)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.GetWidth">
            <summary>Sets the Shim of ImageData.GetWidth(ImageData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.MapPixelImageDataMapColorDelegate">
            <summary>Sets the Shim of ImageData.MapPixel(ImageData this, MapColorDelegate func)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.MapPixelImageDataMapColorDelegateInt32Int32Int32Int32">
            <summary>Sets the Shim of ImageData.MapPixel(ImageData this, MapColorDelegate func, Int32 sx, Int32 sy, Int32 w, Int32 h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.MapPixelImageDataMapVectorDelegate">
            <summary>Sets the Shim of ImageData.MapPixel(ImageData this, MapVectorDelegate func)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.MapPixelImageDataMapVectorDelegateInt32Int32Int32Int32">
            <summary>Sets the Shim of ImageData.MapPixel(ImageData this, MapVectorDelegate func, Int32 sx, Int32 sy, Int32 w, Int32 h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.PasteImageDataInt32Int32Int32Int32Int32Int32">
            <summary>Sets the Shim of ImageData.Paste(ImageData this, ImageData src_imageData, Int32 dx, Int32 dy, Int32 sx, Int32 sy, Int32 sw, Int32 sh)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.SetPixelInt32Int32Color">
            <summary>Sets the Shim of ImageData.SetPixel(ImageData this, Int32 x, Int32 y, Color pixel)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.SetPixelsColorArray">
            <summary>Sets the Shim of ImageData.SetPixels(ImageData this, Color[] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.SetPixelsColorArrayArray">
            <summary>Sets the Shim of ImageData.SetPixels(ImageData this, Color[][] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.SetPixelsColorMdArray2">
            <summary>Sets the Shim of ImageData.SetPixels(ImageData this, Color[,] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.SetPixelsFloatInt32Int32Int32Int32Vector4Array">
            <summary>Sets the Shim of ImageData.SetPixelsFloat(ImageData this, Int32 x, Int32 y, Int32 w, Int32 h, Vector4[] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.SetPixelsFloatVector4Array">
            <summary>Sets the Shim of ImageData.SetPixelsFloat(ImageData this, Vector4[] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.SetPixelsInt32Int32ColorMdArray2">
            <summary>Sets the Shim of ImageData.SetPixels(ImageData this, Int32 x, Int32 y, Color[,] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.SetPixelsInt32Int32Int32Int32ColorArray">
            <summary>Sets the Shim of ImageData.SetPixels(ImageData this, Int32 x, Int32 y, Int32 w, Int32 h, Color[] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.SetPixelsInt32Int32Int32Int32ColorArrayArray">
            <summary>Sets the Shim of ImageData.SetPixels(ImageData this, Int32 x, Int32 y, Int32 w, Int32 h, Color[][] rawData)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.SetPixelsInt32Int32Int32Int32ColorMdArray2">
            <summary>Sets the Shim of ImageData.SetPixels(ImageData this, Int32 x, Int32 y, Int32 w, Int32 h, Color[,] rawData)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.SetPixelsRectangleColorArray">
            <summary>Sets the Shim of ImageData.SetPixels(ImageData this, Rectangle area, Color[] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.SetPixelsRectangleColorArrayArray">
            <summary>Sets the Shim of ImageData.SetPixels(ImageData this, Rectangle area, Color[][] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.AllInstances.SetPixelsRectangleColorMdArray2">
            <summary>Sets the Shim of ImageData.SetPixels(ImageData this, Rectangle area, Color[,] data)</summary>
        </member>
        <member name="M:Love.Fakes.ShimImageData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimImageData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimImageData.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.CheckInSideInt32Int32">
            <summary>Sets the Shim of ImageData.CheckInSide(ImageData this, Int32 x, Int32 y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.CheckInSideInt32Int32Int32Int32">
            <summary>Sets the Shim of ImageData.CheckInSide(ImageData this, Int32 x, Int32 y, Int32 w, Int32 h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.Constructor">
            <summary>Sets the Shim of ImageData.ImageData(ImageData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.EncodeImageFormat">
            <summary>Sets the Shim of ImageData.Encode(ImageData this, ImageFormat format)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.EncodeImageFormatBooleanString">
            <summary>Sets the Shim of ImageData.Encode(ImageData this, ImageFormat format_type, Boolean writeToFile, String filename)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.EncodeImageFormatString">
            <summary>Sets the Shim of ImageData.Encode(ImageData this, ImageFormat format, String filename)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.GetFormat">
            <summary>Sets the Shim of ImageData.GetFormat(ImageData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.GetHeight">
            <summary>Sets the Shim of ImageData.GetHeight(ImageData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.GetPixelInt32Int32">
            <summary>Sets the Shim of ImageData.GetPixel(ImageData this, Int32 x, Int32 y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.GetPixels">
            <summary>Sets the Shim of ImageData.GetPixels(ImageData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.GetPixelsFloat">
            <summary>Sets the Shim of ImageData.GetPixelsFloat(ImageData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.GetPixelsFloatInt32Int32Int32Int32">
            <summary>Sets the Shim of ImageData.GetPixelsFloat(ImageData this, Int32 x, Int32 y, Int32 w, Int32 h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.GetPixelsInt32Int32Int32Int32">
            <summary>Sets the Shim of ImageData.GetPixels(ImageData this, Int32 x, Int32 y, Int32 w, Int32 h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.GetPixelsRectangle">
            <summary>Sets the Shim of ImageData.GetPixels(ImageData this, Rectangle area)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.GetWidth">
            <summary>Sets the Shim of ImageData.GetWidth(ImageData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.MapPixelImageDataMapColorDelegate">
            <summary>Sets the Shim of ImageData.MapPixel(ImageData this, MapColorDelegate func)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.MapPixelImageDataMapColorDelegateInt32Int32Int32Int32">
            <summary>Sets the Shim of ImageData.MapPixel(ImageData this, MapColorDelegate func, Int32 sx, Int32 sy, Int32 w, Int32 h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.MapPixelImageDataMapVectorDelegate">
            <summary>Sets the Shim of ImageData.MapPixel(ImageData this, MapVectorDelegate func)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.MapPixelImageDataMapVectorDelegateInt32Int32Int32Int32">
            <summary>Sets the Shim of ImageData.MapPixel(ImageData this, MapVectorDelegate func, Int32 sx, Int32 sy, Int32 w, Int32 h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.PasteImageDataInt32Int32Int32Int32Int32Int32">
            <summary>Sets the Shim of ImageData.Paste(ImageData this, ImageData src_imageData, Int32 dx, Int32 dy, Int32 sx, Int32 sy, Int32 sw, Int32 sh)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.SetPixelInt32Int32Color">
            <summary>Sets the Shim of ImageData.SetPixel(ImageData this, Int32 x, Int32 y, Color pixel)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.SetPixelsColorArray">
            <summary>Sets the Shim of ImageData.SetPixels(ImageData this, Color[] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.SetPixelsColorArrayArray">
            <summary>Sets the Shim of ImageData.SetPixels(ImageData this, Color[][] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.SetPixelsColorMdArray2">
            <summary>Sets the Shim of ImageData.SetPixels(ImageData this, Color[,] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.SetPixelsFloatInt32Int32Int32Int32Vector4Array">
            <summary>Sets the Shim of ImageData.SetPixelsFloat(ImageData this, Int32 x, Int32 y, Int32 w, Int32 h, Vector4[] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.SetPixelsFloatVector4Array">
            <summary>Sets the Shim of ImageData.SetPixelsFloat(ImageData this, Vector4[] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.SetPixelsInt32Int32ColorMdArray2">
            <summary>Sets the Shim of ImageData.SetPixels(ImageData this, Int32 x, Int32 y, Color[,] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.SetPixelsInt32Int32Int32Int32ColorArray">
            <summary>Sets the Shim of ImageData.SetPixels(ImageData this, Int32 x, Int32 y, Int32 w, Int32 h, Color[] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.SetPixelsInt32Int32Int32Int32ColorArrayArray">
            <summary>Sets the Shim of ImageData.SetPixels(ImageData this, Int32 x, Int32 y, Int32 w, Int32 h, Color[][] rawData)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.SetPixelsInt32Int32Int32Int32ColorMdArray2">
            <summary>Sets the Shim of ImageData.SetPixels(ImageData this, Int32 x, Int32 y, Int32 w, Int32 h, Color[,] rawData)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.SetPixelsRectangleColorArray">
            <summary>Sets the Shim of ImageData.SetPixels(ImageData this, Rectangle area, Color[] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.SetPixelsRectangleColorArrayArray">
            <summary>Sets the Shim of ImageData.SetPixels(ImageData this, Rectangle area, Color[][] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.SetPixelsRectangleColorMdArray2">
            <summary>Sets the Shim of ImageData.SetPixels(ImageData this, Rectangle area, Color[,] data)</summary>
        </member>
        <member name="T:Love.Fakes.ShimImageData.ShimMapColorDelegate">
            <summary>Shim type of Love.ImageData.MapColorDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimImageData.ShimMapColorDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimImageData.ShimMapColorDelegate.#ctor(Love.ImageData.MapColorDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimImageData.ShimMapColorDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.ShimMapColorDelegate.AllInstances.BeginInvokeInt32Int32ColorAsyncCallbackObject">
            <summary>Sets the Shim of MapColorDelegate.BeginInvoke(MapColorDelegate this, Int32 x, Int32 y, Color color, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.ShimMapColorDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of MapColorDelegate.EndInvoke(MapColorDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.ShimMapColorDelegate.AllInstances.InvokeInt32Int32Color">
            <summary>Sets the Shim of MapColorDelegate.Invoke(MapColorDelegate this, Int32 x, Int32 y, Color color)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.ShimMapColorDelegate.BeginInvokeInt32Int32ColorAsyncCallbackObject">
            <summary>Sets the Shim of MapColorDelegate.BeginInvoke(MapColorDelegate this, Int32 x, Int32 y, Color color, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimImageData.ShimMapColorDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimImageData.ShimMapColorDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.ShimMapColorDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimImageData.ShimMapColorDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimImageData.ShimMapColorDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.ShimMapColorDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of MapColorDelegate.MapColorDelegate(MapColorDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.ShimMapColorDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of MapColorDelegate.EndInvoke(MapColorDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.ShimMapColorDelegate.InvokeInt32Int32Color">
            <summary>Sets the Shim of MapColorDelegate.Invoke(MapColorDelegate this, Int32 x, Int32 y, Color color)</summary>
        </member>
        <member name="T:Love.Fakes.ShimImageData.ShimMapVectorDelegate">
            <summary>Shim type of Love.ImageData.MapVectorDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimImageData.ShimMapVectorDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimImageData.ShimMapVectorDelegate.#ctor(Love.ImageData.MapVectorDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimImageData.ShimMapVectorDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.ShimMapVectorDelegate.AllInstances.BeginInvokeInt32Int32Vector4AsyncCallbackObject">
            <summary>Sets the Shim of MapVectorDelegate.BeginInvoke(MapVectorDelegate this, Int32 x, Int32 y, Vector4 p, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.ShimMapVectorDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of MapVectorDelegate.EndInvoke(MapVectorDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.ShimMapVectorDelegate.AllInstances.InvokeInt32Int32Vector4">
            <summary>Sets the Shim of MapVectorDelegate.Invoke(MapVectorDelegate this, Int32 x, Int32 y, Vector4 p)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.ShimMapVectorDelegate.BeginInvokeInt32Int32Vector4AsyncCallbackObject">
            <summary>Sets the Shim of MapVectorDelegate.BeginInvoke(MapVectorDelegate this, Int32 x, Int32 y, Vector4 p, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimImageData.ShimMapVectorDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimImageData.ShimMapVectorDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.ShimMapVectorDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimImageData.ShimMapVectorDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimImageData.ShimMapVectorDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.ShimMapVectorDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of MapVectorDelegate.MapVectorDelegate(MapVectorDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.ShimMapVectorDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of MapVectorDelegate.EndInvoke(MapVectorDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageData.ShimMapVectorDelegate.InvokeInt32Int32Vector4">
            <summary>Sets the Shim of MapVectorDelegate.Invoke(MapVectorDelegate this, Int32 x, Int32 y, Vector4 p)</summary>
        </member>
        <member name="T:Love.Fakes.ShimImageDataBase">
            <summary>Shim type of Love.ImageDataBase</summary>
        </member>
        <member name="M:Love.Fakes.ShimImageDataBase.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimImageDataBase.#ctor(Love.ImageDataBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimImageDataBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimImageDataBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimImageDataBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageDataBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimImageDataBase.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimImageDataBase.Constructor">
            <summary>Sets the Shim of ImageDataBase.ImageDataBase(ImageDataBase this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimJoint">
            <summary>Shim type of Love.Joint</summary>
        </member>
        <member name="M:Love.Fakes.ShimJoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimJoint.#ctor(Love.Joint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimJoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.AllInstances.Destroy">
            <summary>Sets the Shim of Joint.Destroy(Joint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.AllInstances.GetAnchors">
            <summary>Sets the Shim of Joint.GetAnchors(Joint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.AllInstances.GetAnchorsSingleOutSingleOutSingleOutSingleOut">
            <summary>Sets the Shim of Joint.GetAnchors(Joint this, Single* x1, Single* y1, Single* x2, Single* y2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.AllInstances.GetAnchorsVector2OutVector2Out">
            <summary>Sets the Shim of Joint.GetAnchors(Joint this, Vector2* p1, Vector2* p2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.AllInstances.GetBodies">
            <summary>Sets the Shim of Joint.GetBodies(Joint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.AllInstances.GetBodiesBodyOutBodyOut">
            <summary>Sets the Shim of Joint.GetBodies(Joint this, Body* bodyA, Body* bodyB)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.AllInstances.GetCollideConnected">
            <summary>Sets the Shim of Joint.GetCollideConnected(Joint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.AllInstances.GetJointType">
            <summary>Sets the Shim of Joint.GetJointType(Joint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.AllInstances.GetReactionForceSingle">
            <summary>Sets the Shim of Joint.GetReactionForce(Joint this, Single dt)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.AllInstances.GetReactionTorqueSingle">
            <summary>Sets the Shim of Joint.GetReactionTorque(Joint this, Single inv_dt)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.AllInstances.IsDestroyed">
            <summary>Sets the Shim of Joint.IsDestroyed(Joint this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimJoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimJoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimJoint.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.Constructor">
            <summary>Sets the Shim of Joint.Joint(Joint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.Destroy">
            <summary>Sets the Shim of Joint.Destroy(Joint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.GetAnchors">
            <summary>Sets the Shim of Joint.GetAnchors(Joint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.GetAnchorsVector2OutVector2Out">
            <summary>Sets the Shim of Joint.GetAnchors(Joint this, Vector2* p1, Vector2* p2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.GetBodies">
            <summary>Sets the Shim of Joint.GetBodies(Joint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.GetBodiesBodyOutBodyOut">
            <summary>Sets the Shim of Joint.GetBodies(Joint this, Body* bodyA, Body* bodyB)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.GetCollideConnected">
            <summary>Sets the Shim of Joint.GetCollideConnected(Joint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.GetJointType">
            <summary>Sets the Shim of Joint.GetJointType(Joint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.GetReactionForceSingle">
            <summary>Sets the Shim of Joint.GetReactionForce(Joint this, Single dt)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.GetReactionTorqueSingle">
            <summary>Sets the Shim of Joint.GetReactionTorque(Joint this, Single inv_dt)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.IsDestroyed">
            <summary>Sets the Shim of Joint.IsDestroyed(Joint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.JointRetainToRegularJointJoint">
            <summary>Sets the Shim of Joint.JointRetainToRegularJoint(Joint joint)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoint.JointRetainToRegularJointJointArray">
            <summary>Sets the Shim of Joint.JointRetainToRegularJoint(Joint[] jointList)</summary>
        </member>
        <member name="T:Love.Fakes.ShimJoystick">
            <summary>Shim type of Love.Joystick</summary>
        </member>
        <member name="M:Love.Fakes.ShimJoystick.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimJoystick.#ctor(Love.Joystick)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimJoystick.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.AllInstances.GetAxes">
            <summary>Sets the Shim of Joystick.GetAxes(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.AllInstances.GetAxisCount">
            <summary>Sets the Shim of Joystick.GetAxisCount(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.AllInstances.GetAxisInt32">
            <summary>Sets the Shim of Joystick.GetAxis(Joystick this, Int32 axisindex)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.AllInstances.GetButtonCount">
            <summary>Sets the Shim of Joystick.GetButtonCount(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.AllInstances.GetGUID">
            <summary>Sets the Shim of Joystick.GetGUID(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.AllInstances.GetGamepadAxisGamepadAxis">
            <summary>Sets the Shim of Joystick.GetGamepadAxis(Joystick this, GamepadAxis axis_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.AllInstances.GetHatCount">
            <summary>Sets the Shim of Joystick.GetHatCount(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.AllInstances.GetHatInt32">
            <summary>Sets the Shim of Joystick.GetHat(Joystick this, Int32 hatindex)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.AllInstances.GetID">
            <summary>Sets the Shim of Joystick.GetID(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.AllInstances.GetInstanceID">
            <summary>Sets the Shim of Joystick.GetInstanceID(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.AllInstances.GetName">
            <summary>Sets the Shim of Joystick.GetName(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.AllInstances.GetVibrationSingleOutSingleOut">
            <summary>Sets the Shim of Joystick.GetVibration(Joystick this, Single* out_left, Single* out_right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.AllInstances.IsConnected">
            <summary>Sets the Shim of Joystick.IsConnected(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.AllInstances.IsDownInt32">
            <summary>Sets the Shim of Joystick.IsDown(Joystick this, Int32 button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.AllInstances.IsGamepad">
            <summary>Sets the Shim of Joystick.IsGamepad(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.AllInstances.IsGamepadDownGamepadButton">
            <summary>Sets the Shim of Joystick.IsGamepadDown(Joystick this, GamepadButton gamepadButton_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.AllInstances.IsGamepadPressedGamepadButton">
            <summary>Sets the Shim of Joystick.IsGamepadPressed(Joystick this, GamepadButton gamepadButton)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.AllInstances.IsGamepadReleasedGamepadButton">
            <summary>Sets the Shim of Joystick.IsGamepadReleased(Joystick this, GamepadButton gamepadButton)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.AllInstances.IsPressedInt32">
            <summary>Sets the Shim of Joystick.IsPressed(Joystick this, Int32 button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.AllInstances.IsReleasedInt32">
            <summary>Sets the Shim of Joystick.IsReleased(Joystick this, Int32 button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.AllInstances.IsVibrationSupported">
            <summary>Sets the Shim of Joystick.IsVibrationSupported(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.AllInstances.SetVibration">
            <summary>Sets the Shim of Joystick.SetVibration(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.AllInstances.SetVibrationSingleSingleSingle">
            <summary>Sets the Shim of Joystick.SetVibration(Joystick this, Single left, Single right, Single duration)</summary>
        </member>
        <member name="M:Love.Fakes.ShimJoystick.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimJoystick.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimJoystick.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.Constructor">
            <summary>Sets the Shim of Joystick.Joystick(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.GetAxes">
            <summary>Sets the Shim of Joystick.GetAxes(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.GetAxisCount">
            <summary>Sets the Shim of Joystick.GetAxisCount(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.GetAxisInt32">
            <summary>Sets the Shim of Joystick.GetAxis(Joystick this, Int32 axisindex)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.GetButtonCount">
            <summary>Sets the Shim of Joystick.GetButtonCount(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.GetGUID">
            <summary>Sets the Shim of Joystick.GetGUID(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.GetGamepadAxisGamepadAxis">
            <summary>Sets the Shim of Joystick.GetGamepadAxis(Joystick this, GamepadAxis axis_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.GetHatCount">
            <summary>Sets the Shim of Joystick.GetHatCount(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.GetHatInt32">
            <summary>Sets the Shim of Joystick.GetHat(Joystick this, Int32 hatindex)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.GetID">
            <summary>Sets the Shim of Joystick.GetID(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.GetIndexJoystick">
            <summary>Sets the Shim of Joystick.GetIndex(Joystick j)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.GetInstanceID">
            <summary>Sets the Shim of Joystick.GetInstanceID(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.GetJoystickCount">
            <summary>Sets the Shim of Joystick.GetJoystickCount()</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.GetJoysticks">
            <summary>Sets the Shim of Joystick.GetJoysticks()</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.GetName">
            <summary>Sets the Shim of Joystick.GetName(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.GetVibrationSingleOutSingleOut">
            <summary>Sets the Shim of Joystick.GetVibration(Joystick this, Single* out_left, Single* out_right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.Init">
            <summary>Sets the Shim of Joystick.Init()</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.IsConnected">
            <summary>Sets the Shim of Joystick.IsConnected(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.IsDownInt32">
            <summary>Sets the Shim of Joystick.IsDown(Joystick this, Int32 button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.IsGamepad">
            <summary>Sets the Shim of Joystick.IsGamepad(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.IsGamepadDownGamepadButton">
            <summary>Sets the Shim of Joystick.IsGamepadDown(Joystick this, GamepadButton gamepadButton_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.IsGamepadPressedGamepadButton">
            <summary>Sets the Shim of Joystick.IsGamepadPressed(Joystick this, GamepadButton gamepadButton)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.IsGamepadPressedJoystickGamepadButton">
            <summary>Sets the Shim of Joystick.IsGamepadPressed(Joystick joystick, GamepadButton gamepadButton)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.IsGamepadReleasedGamepadButton">
            <summary>Sets the Shim of Joystick.IsGamepadReleased(Joystick this, GamepadButton gamepadButton)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.IsGamepadReleasedJoystickGamepadButton">
            <summary>Sets the Shim of Joystick.IsGamepadReleased(Joystick joystick, GamepadButton gamepadButton)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.IsPressedInt32">
            <summary>Sets the Shim of Joystick.IsPressed(Joystick this, Int32 button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.IsPressedJoystickInt32">
            <summary>Sets the Shim of Joystick.IsPressed(Joystick joystick, Int32 button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.IsReleasedInt32">
            <summary>Sets the Shim of Joystick.IsReleased(Joystick this, Int32 button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.IsReleasedJoystickInt32">
            <summary>Sets the Shim of Joystick.IsReleased(Joystick joystick, Int32 button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.IsVibrationSupported">
            <summary>Sets the Shim of Joystick.IsVibrationSupported(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.SaveGamepadMappings">
            <summary>Sets the Shim of Joystick.SaveGamepadMappings()</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.SetVibration">
            <summary>Sets the Shim of Joystick.SetVibration(Joystick this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.SetVibrationSingleSingleSingle">
            <summary>Sets the Shim of Joystick.SetVibration(Joystick this, Single left, Single right, Single duration)</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.StaticConstructor">
            <summary>Sets the Shim of Joystick.Joystick()</summary>
        </member>
        <member name="P:Love.Fakes.ShimJoystick.Step">
            <summary>Sets the Shim of Joystick.Step()</summary>
        </member>
        <member name="T:Love.Fakes.ShimKeyboard">
            <summary>Shim type of Love.Keyboard</summary>
        </member>
        <member name="M:Love.Fakes.ShimKeyboard.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimKeyboard.#ctor(Love.Keyboard)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimKeyboard.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimKeyboard.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimKeyboard.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimKeyboard.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimKeyboard.Constructor">
            <summary>Sets the Shim of Keyboard.Keyboard(Keyboard this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimKeyboard.GetKeyFromScancodeScancode">
            <summary>Sets the Shim of Keyboard.GetKeyFromScancode(Scancode scancode)</summary>
        </member>
        <member name="P:Love.Fakes.ShimKeyboard.GetScancodeFromKeyKeyConstant">
            <summary>Sets the Shim of Keyboard.GetScancodeFromKey(KeyConstant key)</summary>
        </member>
        <member name="P:Love.Fakes.ShimKeyboard.HasKeyRepeat">
            <summary>Sets the Shim of Keyboard.HasKeyRepeat()</summary>
        </member>
        <member name="P:Love.Fakes.ShimKeyboard.HasScreenKeyboard">
            <summary>Sets the Shim of Keyboard.HasScreenKeyboard()</summary>
        </member>
        <member name="P:Love.Fakes.ShimKeyboard.HasTextInput">
            <summary>Sets the Shim of Keyboard.HasTextInput()</summary>
        </member>
        <member name="P:Love.Fakes.ShimKeyboard.Init">
            <summary>Sets the Shim of Keyboard.Init()</summary>
        </member>
        <member name="P:Love.Fakes.ShimKeyboard.IsDownKeyConstant">
            <summary>Sets the Shim of Keyboard.IsDown(KeyConstant key)</summary>
        </member>
        <member name="P:Love.Fakes.ShimKeyboard.IsPressedKeyConstant">
            <summary>Sets the Shim of Keyboard.IsPressed(KeyConstant key)</summary>
        </member>
        <member name="P:Love.Fakes.ShimKeyboard.IsReleasedKeyConstant">
            <summary>Sets the Shim of Keyboard.IsReleased(KeyConstant key)</summary>
        </member>
        <member name="P:Love.Fakes.ShimKeyboard.IsScancodeDownScancode">
            <summary>Sets the Shim of Keyboard.IsScancodeDown(Scancode scancode)</summary>
        </member>
        <member name="P:Love.Fakes.ShimKeyboard.SetKeyRepeatBoolean">
            <summary>Sets the Shim of Keyboard.SetKeyRepeat(Boolean enable)</summary>
        </member>
        <member name="P:Love.Fakes.ShimKeyboard.SetTextInputBoolean">
            <summary>Sets the Shim of Keyboard.SetTextInput(Boolean enable)</summary>
        </member>
        <member name="P:Love.Fakes.ShimKeyboard.SetTextInputBooleanDoubleDoubleDoubleDouble">
            <summary>Sets the Shim of Keyboard.SetTextInput(Boolean enable, Double x, Double y, Double w, Double h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimKeyboard.StaticConstructor">
            <summary>Sets the Shim of Keyboard.Keyboard()</summary>
        </member>
        <member name="P:Love.Fakes.ShimKeyboard.Step">
            <summary>Sets the Shim of Keyboard.Step()</summary>
        </member>
        <member name="T:Love.Fakes.ShimLog">
            <summary>Shim type of Love.Log</summary>
        </member>
        <member name="M:Love.Fakes.ShimLog.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimLog.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimLog.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimLog.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimLog.ErrorObject">
            <summary>Sets the Shim of Log.Error(Object info)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLog.InfoObject">
            <summary>Sets the Shim of Log.Info(Object info)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLog.StaticConstructor">
            <summary>Sets the Shim of Log.Log()</summary>
        </member>
        <member name="P:Love.Fakes.ShimLog.WarnningObject">
            <summary>Sets the Shim of Log.Warnning(Object info)</summary>
        </member>
        <member name="T:Love.Fakes.ShimLoveObject">
            <summary>Shim type of Love.LoveObject</summary>
        </member>
        <member name="M:Love.Fakes.ShimLoveObject.#ctor(Love.LoveObject)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Love.Fakes.ShimLoveObject.AcquirePointerLoveObject">
            <summary>Sets the Shim of LoveObject.AcquirePointer(LoveObject loveObject)</summary>
        </member>
        <member name="T:Love.Fakes.ShimLoveObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimLoveObject.AllInstances.Dispose">
            <summary>Sets the Shim of LoveObject.Dispose(LoveObject this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLoveObject.AllInstances.EqualsObject">
            <summary>Sets the Shim of LoveObject.Equals(LoveObject this, Object obj)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLoveObject.AllInstances.GetHashCode01">
            <summary>Sets the Shim of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimLoveObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimLoveObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimLoveObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimLoveObject.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimLoveObject.Constructor">
            <summary>Sets the Shim of LoveObject.LoveObject(LoveObject this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLoveObject.Dispose">
            <summary>Sets the Shim of LoveObject.Dispose(LoveObject this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLoveObject.EqualsObject">
            <summary>Sets the Shim of LoveObject.Equals(LoveObject this, Object obj)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLoveObject.GetHashCode">
            <summary>Sets the Shim of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimLoveObject.NewObjectOf1IntPtr``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.IntPtr,``0})">
            <summary>Sets the Shim of LoveObject.NewObject(IntPtr ip)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLoveObject.RetainLoveObjectIntPtr">
            <summary>Sets the Shim of LoveObject.RetainLoveObject(IntPtr p)</summary>
        </member>
        <member name="T:Love.Fakes.ShimLua">
            <summary>Shim type of Love.Lua</summary>
        </member>
        <member name="M:Love.Fakes.ShimLua.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimLua.#ctor(Love.Lua)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimLua.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimLua.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimLua.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.CheckLuaModleInitStatus">
            <summary>Sets the Shim of Lua.CheckLuaModleInitStatus()</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.Constructor">
            <summary>Sets the Shim of Lua.Lua(Lua this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.DoFileString">
            <summary>Sets the Shim of Lua.DoFile(String filepath)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.DoStringString">
            <summary>Sets the Shim of Lua.DoString(String luaCode)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.DoStringStringArray">
            <summary>Sets the Shim of Lua.DoString(String[] luaCode)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.Draw">
            <summary>Sets the Shim of Lua.Draw()</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.FunctionBackIntPtr">
            <summary>Sets the Shim of Lua.FunctionBack(IntPtr functionNameStr)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.Init">
            <summary>Sets the Shim of Lua.Init()</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.InitInternalIntPtr">
            <summary>Sets the Shim of Lua.InitInternal(IntPtr luaState)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.IsInitGet">
            <summary>Sets the Shim of Lua.get_IsInit()</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.IsInitSetBoolean">
            <summary>Sets the Shim of Lua.set_IsInit(Boolean value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.IsTransAbleTypeTypeLuaSupportedTransTypeOut">
            <summary>Sets the Shim of Lua.IsTransAbleType(Type type, SupportedTransType* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.LoadFromStringString">
            <summary>Sets the Shim of Lua.LoadFromString(String luaCode)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.LoadString">
            <summary>Sets the Shim of Lua.Load(String filepath)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.RegisterFunctionObjectString">
            <summary>Sets the Shim of Lua.RegisterFunction(Object target, String functionName)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.RegisterFunctionObjectStringString">
            <summary>Sets the Shim of Lua.RegisterFunction(Object target, String functionName, String luaName)</summary>
        </member>
        <member name="T:Love.Fakes.ShimLua.ShimCallbackCSharpTargetInfo">
            <summary>Shim type of Love.Lua.CallbackCSharpTargetInfo</summary>
        </member>
        <member name="M:Love.Fakes.ShimLua.ShimCallbackCSharpTargetInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimLua.ShimCallbackCSharpTargetInfo.#ctor(Love.Lua.CallbackCSharpTargetInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimLua.ShimCallbackCSharpTargetInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimCallbackCSharpTargetInfo.AllInstances.Call">
            <summary>Sets the Shim of CallbackCSharpTargetInfo.Call(CallbackCSharpTargetInfo this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimLua.ShimCallbackCSharpTargetInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimLua.ShimCallbackCSharpTargetInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimCallbackCSharpTargetInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimCallbackCSharpTargetInfo.Call">
            <summary>Sets the Shim of CallbackCSharpTargetInfo.Call(CallbackCSharpTargetInfo this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimCallbackCSharpTargetInfo.ConstructorObjectStringMethodInfoLuaSupportedTransTypeListOfCallbackCSharpTargetInfoLuaPairCastInfo">
            <summary>Sets the Shim of CallbackCSharpTargetInfo.CallbackCSharpTargetInfo(CallbackCSharpTargetInfo this, Object target, String name, MethodInfo info, SupportedTransType returnType, List`1 argTypeList)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimCallbackCSharpTargetInfo.PraseObjectString">
            <summary>Sets the Shim of CallbackCSharpTargetInfo.Prase(Object target, String funcName)</summary>
        </member>
        <member name="T:Love.Fakes.ShimLua.ShimCallbackCSharpTargetInfo.ShimPairCastInfo">
            <summary>Shim type of Love.Lua.CallbackCSharpTargetInfo.PairCastInfo</summary>
        </member>
        <member name="M:Love.Fakes.ShimLua.ShimCallbackCSharpTargetInfo.ShimPairCastInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimLua.ShimCallbackCSharpTargetInfo.ShimPairCastInfo.#ctor(Love.Lua.CallbackCSharpTargetInfo.PairCastInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimLua.ShimCallbackCSharpTargetInfo.ShimPairCastInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimLua.ShimCallbackCSharpTargetInfo.ShimPairCastInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimLua.ShimCallbackCSharpTargetInfo.ShimPairCastInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimCallbackCSharpTargetInfo.ShimPairCastInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimCallbackCSharpTargetInfo.ShimPairCastInfo.ConstructorTypeLuaSupportedTransType">
            <summary>Sets the Shim of PairCastInfo.PairCastInfo(PairCastInfo this, Type type, SupportedTransType stype)</summary>
        </member>
        <member name="T:Love.Fakes.ShimLua.ShimRawOperate">
            <summary>Shim type of Love.Lua.RawOperate</summary>
        </member>
        <member name="M:Love.Fakes.ShimLua.ShimRawOperate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimLua.ShimRawOperate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimLua.ShimRawOperate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimRawOperate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimRawOperate.CheckToArrayBooleanInt32">
            <summary>Sets the Shim of RawOperate.CheckToArrayBoolean(Int32 index)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimRawOperate.CheckToArrayIntInt32">
            <summary>Sets the Shim of RawOperate.CheckToArrayInt(Int32 index)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimRawOperate.CheckToArrayNumberInt32">
            <summary>Sets the Shim of RawOperate.CheckToArrayNumber(Int32 index)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimRawOperate.CheckToArrayStringInt32">
            <summary>Sets the Shim of RawOperate.CheckToArrayString(Int32 index)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimRawOperate.CheckToBooleanInt32">
            <summary>Sets the Shim of RawOperate.CheckToBoolean(Int32 index)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimRawOperate.CheckToIntegerInt32">
            <summary>Sets the Shim of RawOperate.CheckToInteger(Int32 index)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimRawOperate.CheckToNumberInt32">
            <summary>Sets the Shim of RawOperate.CheckToNumber(Int32 index)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimRawOperate.CheckToStringInt32">
            <summary>Sets the Shim of RawOperate.CheckToString(Int32 index)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimRawOperate.DebugStackDump">
            <summary>Sets the Shim of RawOperate.DebugStackDump()</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimRawOperate.GetTop">
            <summary>Sets the Shim of RawOperate.GetTop()</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimRawOperate.IsTableInt32">
            <summary>Sets the Shim of RawOperate.IsTable(Int32 index)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimRawOperate.PushBooleanArrayBooleanArray">
            <summary>Sets the Shim of RawOperate.PushBooleanArray(Boolean[] num)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimRawOperate.PushBooleanBoolean">
            <summary>Sets the Shim of RawOperate.PushBoolean(Boolean v)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimRawOperate.PushIntegerArrayInt32Array">
            <summary>Sets the Shim of RawOperate.PushIntegerArray(Int32[] num)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimRawOperate.PushIntegerInt32">
            <summary>Sets the Shim of RawOperate.PushInteger(Int32 num)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimRawOperate.PushNumberArraySingleArray">
            <summary>Sets the Shim of RawOperate.PushNumberArray(Single[] num)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimRawOperate.PushNumberSingle">
            <summary>Sets the Shim of RawOperate.PushNumber(Single num)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimRawOperate.PushStringByteArray">
            <summary>Sets the Shim of RawOperate.PushString(Byte[] str)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimRawOperate.PushStringString">
            <summary>Sets the Shim of RawOperate.PushString(String str)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.ShimRawOperate.SetTopInt32">
            <summary>Sets the Shim of RawOperate.SetTop(Int32 idx)</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.StaticConstructor">
            <summary>Sets the Shim of Lua.Lua()</summary>
        </member>
        <member name="P:Love.Fakes.ShimLua.UpdateSingle">
            <summary>Sets the Shim of Lua.Update(Single dt)</summary>
        </member>
        <member name="T:Love.Fakes.ShimMathUtil">
            <summary>Shim type of Love.MathUtil</summary>
        </member>
        <member name="M:Love.Fakes.ShimMathUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimMathUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimMathUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.ClampInt32Int32Int32">
            <summary>Sets the Shim of MathUtil.Clamp(Int32 value, Int32 min, Int32 max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.ClampSingleSingleSingle">
            <summary>Sets the Shim of MathUtil.Clamp(Single value, Single min, Single max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.DegreesToRadiansSingle">
            <summary>Sets the Shim of MathUtil.DegreesToRadians(Single degree)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.DegreesToRevolutionsSingle">
            <summary>Sets the Shim of MathUtil.DegreesToRevolutions(Single degree)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.GaussDoubleDoubleDoubleDoubleDoubleDoubleDouble">
            <summary>Sets the Shim of MathUtil.Gauss(Double amplitude, Double x, Double y, Double centerX, Double centerY, Double sigmaX, Double sigmaY)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.GaussSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of MathUtil.Gauss(Single amplitude, Single x, Single y, Single centerX, Single centerY, Single sigmaX, Single sigmaY)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.GradiansToDegreesSingle">
            <summary>Sets the Shim of MathUtil.GradiansToDegrees(Single gradian)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.GradiansToRadiansSingle">
            <summary>Sets the Shim of MathUtil.GradiansToRadians(Single gradian)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.GradiansToRevolutionsSingle">
            <summary>Sets the Shim of MathUtil.GradiansToRevolutions(Single gradian)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.IsOneSingle">
            <summary>Sets the Shim of MathUtil.IsOne(Single a)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.IsZeroSingle">
            <summary>Sets the Shim of MathUtil.IsZero(Single a)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.LerpByteByteSingle">
            <summary>Sets the Shim of MathUtil.Lerp(Byte from, Byte to, Single amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.LerpDoubleDoubleDouble">
            <summary>Sets the Shim of MathUtil.Lerp(Double from, Double to, Double amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.LerpSingleSingleSingle">
            <summary>Sets the Shim of MathUtil.Lerp(Single from, Single to, Single amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.Mod2PISingle">
            <summary>Sets the Shim of MathUtil.Mod2PI(Single value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.ModSingleSingle">
            <summary>Sets the Shim of MathUtil.Mod(Single value, Single modulo)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.NearEqualSingleSingle">
            <summary>Sets the Shim of MathUtil.NearEqual(Single a, Single b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.RadiansToDegreesSingle">
            <summary>Sets the Shim of MathUtil.RadiansToDegrees(Single radian)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.RadiansToGradiansSingle">
            <summary>Sets the Shim of MathUtil.RadiansToGradians(Single radian)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.RadiansToRevolutionsSingle">
            <summary>Sets the Shim of MathUtil.RadiansToRevolutions(Single radian)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.RevolutionsToDegreesSingle">
            <summary>Sets the Shim of MathUtil.RevolutionsToDegrees(Single revolution)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.RevolutionsToGradiansSingle">
            <summary>Sets the Shim of MathUtil.RevolutionsToGradians(Single revolution)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.RevolutionsToRadiansSingle">
            <summary>Sets the Shim of MathUtil.RevolutionsToRadians(Single revolution)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.SmoothStepSingle">
            <summary>Sets the Shim of MathUtil.SmoothStep(Single amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.SmootherStepSingle">
            <summary>Sets the Shim of MathUtil.SmootherStep(Single amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.WithinEpsilonSingleSingleSingle">
            <summary>Sets the Shim of MathUtil.WithinEpsilon(Single a, Single b, Single epsilon)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.WrapInt32Int32Int32">
            <summary>Sets the Shim of MathUtil.Wrap(Int32 value, Int32 min, Int32 max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathUtil.WrapSingleSingleSingle">
            <summary>Sets the Shim of MathUtil.Wrap(Single value, Single min, Single max)</summary>
        </member>
        <member name="T:Love.Fakes.ShimMathf">
            <summary>Shim type of Love.Mathf</summary>
        </member>
        <member name="M:Love.Fakes.ShimMathf.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimMathf.#ctor(Love.Mathf)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.AbsInt32">
            <summary>Sets the Shim of Mathf.Abs(Int32 a)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.AbsSingle">
            <summary>Sets the Shim of Mathf.Abs(Single a)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.AcosSingle">
            <summary>Sets the Shim of Mathf.Acos(Single a)</summary>
        </member>
        <member name="T:Love.Fakes.ShimMathf.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.ApproximatelySingleSingle">
            <summary>Sets the Shim of Mathf.Approximately(Single a, Single b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.AsinSingle">
            <summary>Sets the Shim of Mathf.Asin(Single a)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.Atan2SingleSingle">
            <summary>Sets the Shim of Mathf.Atan2(Single y, Single x)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.AtanSingle">
            <summary>Sets the Shim of Mathf.Atan(Single a)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.BarycentricSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Mathf.Barycentric(Single value1, Single value2, Single value3, Single amount1, Single amount2)</summary>
        </member>
        <member name="M:Love.Fakes.ShimMathf.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimMathf.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.CatmullRomSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Mathf.CatmullRom(Single value1, Single value2, Single value3, Single value4, Single amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.CeilSingle">
            <summary>Sets the Shim of Mathf.Ceil(Single a)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.CeilToIntSingle">
            <summary>Sets the Shim of Mathf.CeilToInt(Single a)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.Clamp01Single">
            <summary>Sets the Shim of Mathf.Clamp01(Single value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.ClampInt32Int32Int32">
            <summary>Sets the Shim of Mathf.Clamp(Int32 value, Int32 min, Int32 max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.ClampSingleSingleSingle">
            <summary>Sets the Shim of Mathf.Clamp(Single value, Single min, Single max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.ClosestPowerOfTwoInt32">
            <summary>Sets the Shim of Mathf.ClosestPowerOfTwo(Int32 a)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.Constructor">
            <summary>Sets the Shim of Mathf.Mathf(Mathf this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.CosSingle">
            <summary>Sets the Shim of Mathf.Cos(Single a)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.ExpSingle">
            <summary>Sets the Shim of Mathf.Exp(Single power)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.Ext_getRandomGenerator">
            <summary>Sets the Shim of Mathf.Ext_getRandomGenerator()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.FloorSingle">
            <summary>Sets the Shim of Mathf.Floor(Single a)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.FloorToIntSingle">
            <summary>Sets the Shim of Mathf.FloorToInt(Single a)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.GammaToLinearSingle">
            <summary>Sets the Shim of Mathf.GammaToLinear(Single gama)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.HermiteSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Mathf.Hermite(Single value1, Single tangent1, Single value2, Single tangent2, Single amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.Init">
            <summary>Sets the Shim of Mathf.Init()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.InitInt64">
            <summary>Sets the Shim of Mathf.Init(Int64 seed)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.IsConvexVector2Array">
            <summary>Sets the Shim of Mathf.IsConvex(Vector2[] points)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.IsPowerOfTwoInt32">
            <summary>Sets the Shim of Mathf.IsPowerOfTwo(Int32 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.LerpSingleSingleSingle">
            <summary>Sets the Shim of Mathf.Lerp(Single from, Single to, Single t)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.LinearToGammaSingle">
            <summary>Sets the Shim of Mathf.LinearToGamma(Single liner)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.Log10Single">
            <summary>Sets the Shim of Mathf.Log10(Single value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.LogSingle">
            <summary>Sets the Shim of Mathf.Log(Single value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.MaxInt32Array">
            <summary>Sets the Shim of Mathf.Max(Int32[] values)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.MaxInt32Int32">
            <summary>Sets the Shim of Mathf.Max(Int32 a, Int32 b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.MaxSingleArray">
            <summary>Sets the Shim of Mathf.Max(Single[] values)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.MaxSingleSingle">
            <summary>Sets the Shim of Mathf.Max(Single a, Single b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.MinInt32Int32">
            <summary>Sets the Shim of Mathf.Min(Int32 a, Int32 b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.MinSingleSingle">
            <summary>Sets the Shim of Mathf.Min(Single a, Single b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.NewBezierCurveVector2Array">
            <summary>Sets the Shim of Mathf.NewBezierCurve(Vector2[] points)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.NewRandomGenerator">
            <summary>Sets the Shim of Mathf.NewRandomGenerator()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.NextPowerOfTwoInt32">
            <summary>Sets the Shim of Mathf.NextPowerOfTwo(Int32 a)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.NoiseSingle">
            <summary>Sets the Shim of Mathf.Noise(Single x)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.NoiseSingleSingle">
            <summary>Sets the Shim of Mathf.Noise(Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.NoiseSingleSingleSingle">
            <summary>Sets the Shim of Mathf.Noise(Single x, Single y, Single z)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.NoiseSingleSingleSingleSingle">
            <summary>Sets the Shim of Mathf.Noise(Single x, Single y, Single z, Single w)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.PowSingleSingle">
            <summary>Sets the Shim of Mathf.Pow(Single f, Single p)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.Random">
            <summary>Sets the Shim of Mathf.Random()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.RandomInt32Int32">
            <summary>Sets the Shim of Mathf.Random(Int32 min, Int32 max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.RandomSingleSingle">
            <summary>Sets the Shim of Mathf.Random(Single min, Single max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.RoughlyEqualSingleSingleSingle">
            <summary>Sets the Shim of Mathf.RoughlyEqual(Single a, Single b, Single threshold)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.RoundSingle">
            <summary>Sets the Shim of Mathf.Round(Single f)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.RoundSingleInt32">
            <summary>Sets the Shim of Mathf.Round(Single f, Int32 decimals)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.RoundSingleInt32MidpointRounding">
            <summary>Sets the Shim of Mathf.Round(Single f, Int32 decimals, MidpointRounding mode)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.RoundToIntSingle">
            <summary>Sets the Shim of Mathf.RoundToInt(Single f)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.RoundToIntSingleMidpointRounding">
            <summary>Sets the Shim of Mathf.RoundToInt(Single f, MidpointRounding mode)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.SignSingle">
            <summary>Sets the Shim of Mathf.Sign(Single f)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.SinSingle">
            <summary>Sets the Shim of Mathf.Sin(Single f)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.SmoothStepSingleSingleSingle">
            <summary>Sets the Shim of Mathf.SmoothStep(Single value1, Single value2, Single amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.SqrtSingle">
            <summary>Sets the Shim of Mathf.Sqrt(Single f)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.StaticConstructor">
            <summary>Sets the Shim of Mathf.Mathf()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.TanSingle">
            <summary>Sets the Shim of Mathf.Tan(Single f)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMathf.TriangulateVector2Array">
            <summary>Sets the Shim of Mathf.Triangulate(Vector2[] points)</summary>
        </member>
        <member name="T:Love.Fakes.ShimMatrix22">
            <summary>Shim type of Love.Matrix22</summary>
        </member>
        <member name="M:Love.Fakes.ShimMatrix22.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimMatrix22.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimMatrix22.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimMatrix22.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix22.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix22.EqualityOpMatrix22Matrix22">
            <summary>Sets the Shim of Matrix22.op_Equality(Matrix22 matrix1, Matrix22 matrix2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix22.InequalityOpMatrix22Matrix22">
            <summary>Sets the Shim of Matrix22.op_Inequality(Matrix22 matrix1, Matrix22 matrix2)</summary>
        </member>
        <member name="T:Love.Fakes.ShimMatrix33">
            <summary>Shim type of Love.Matrix33</summary>
        </member>
        <member name="M:Love.Fakes.ShimMatrix33.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.AddMatrix33Matrix33">
            <summary>Sets the Shim of Matrix33.Add(Matrix33 left, Matrix33 right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.AddMatrix33RefMatrix33RefMatrix33Out">
            <summary>Sets the Shim of Matrix33.Add(Matrix33* left, Matrix33* right, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.AdditionOpMatrix33Matrix33">
            <summary>Sets the Shim of Matrix33.op_Addition(Matrix33 left, Matrix33 right)</summary>
        </member>
        <member name="T:Love.Fakes.ShimMatrix33.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimMatrix33.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimMatrix33.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.BillboardLHVector3RefVector3RefVector3RefVector3RefMatrix33Out">
            <summary>Sets the Shim of Matrix33.BillboardLH(Vector3* objectPosition, Vector3* cameraPosition, Vector3* cameraUpVector, Vector3* cameraForwardVector, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.BillboardLHVector3Vector3Vector3Vector3">
            <summary>Sets the Shim of Matrix33.BillboardLH(Vector3 objectPosition, Vector3 cameraPosition, Vector3 cameraUpVector, Vector3 cameraForwardVector)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.BillboardRHVector3RefVector3RefVector3RefVector3RefMatrix33Out">
            <summary>Sets the Shim of Matrix33.BillboardRH(Vector3* objectPosition, Vector3* cameraPosition, Vector3* cameraUpVector, Vector3* cameraForwardVector, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.BillboardRHVector3Vector3Vector3Vector3">
            <summary>Sets the Shim of Matrix33.BillboardRH(Vector3 objectPosition, Vector3 cameraPosition, Vector3 cameraUpVector, Vector3 cameraForwardVector)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.DivideMatrix33Matrix33">
            <summary>Sets the Shim of Matrix33.Divide(Matrix33 left, Matrix33 right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.DivideMatrix33RefMatrix33RefMatrix33Out">
            <summary>Sets the Shim of Matrix33.Divide(Matrix33* left, Matrix33* right, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.DivideMatrix33RefSingleMatrix33Out">
            <summary>Sets the Shim of Matrix33.Divide(Matrix33* left, Single right, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.DivideMatrix33Single">
            <summary>Sets the Shim of Matrix33.Divide(Matrix33 left, Single right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.DivisionOpMatrix33Matrix33">
            <summary>Sets the Shim of Matrix33.op_Division(Matrix33 left, Matrix33 right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.DivisionOpMatrix33Single">
            <summary>Sets the Shim of Matrix33.op_Division(Matrix33 left, Single right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.EqualityOpMatrix33Matrix33">
            <summary>Sets the Shim of Matrix33.op_Equality(Matrix33 left, Matrix33 right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.EqualsMatrix33RefMatrix33Ref">
            <summary>Sets the Shim of Matrix33.Equals(Matrix33* a, Matrix33* b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.ExplicitOpMatrix33Matrix44">
            <summary>Sets the Shim of Matrix33.op_Explicit(Matrix33 Value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.ExplicitOpMatrix44Matrix33">
            <summary>Sets the Shim of Matrix33.op_Explicit(Matrix44 Value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.ExponentMatrix33Int32">
            <summary>Sets the Shim of Matrix33.Exponent(Matrix33 value, Int32 exponent)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.ExponentMatrix33RefInt32Matrix33Out">
            <summary>Sets the Shim of Matrix33.Exponent(Matrix33* value, Int32 exponent, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.InequalityOpMatrix33Matrix33">
            <summary>Sets the Shim of Matrix33.op_Inequality(Matrix33 left, Matrix33 right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.InvertMatrix33">
            <summary>Sets the Shim of Matrix33.Invert(Matrix33 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.InvertMatrix33RefMatrix33Out">
            <summary>Sets the Shim of Matrix33.Invert(Matrix33* value, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.LerpMatrix33Matrix33Single">
            <summary>Sets the Shim of Matrix33.Lerp(Matrix33 start, Matrix33 end, Single amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.LerpMatrix33RefMatrix33RefSingleMatrix33Out">
            <summary>Sets the Shim of Matrix33.Lerp(Matrix33* start, Matrix33* end, Single amount, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.LookAtLHVector3RefVector3RefVector3RefMatrix33Out">
            <summary>Sets the Shim of Matrix33.LookAtLH(Vector3* eye, Vector3* target, Vector3* up, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.LookAtLHVector3Vector3Vector3">
            <summary>Sets the Shim of Matrix33.LookAtLH(Vector3 eye, Vector3 target, Vector3 up)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.LookAtRHVector3RefVector3RefVector3RefMatrix33Out">
            <summary>Sets the Shim of Matrix33.LookAtRH(Vector3* eye, Vector3* target, Vector3* up, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.LookAtRHVector3Vector3Vector3">
            <summary>Sets the Shim of Matrix33.LookAtRH(Vector3 eye, Vector3 target, Vector3 up)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.LowerTriangularFormMatrix33">
            <summary>Sets the Shim of Matrix33.LowerTriangularForm(Matrix33 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.LowerTriangularFormMatrix33RefMatrix33Out">
            <summary>Sets the Shim of Matrix33.LowerTriangularForm(Matrix33* value, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.MultiplyMatrix33Matrix33">
            <summary>Sets the Shim of Matrix33.Multiply(Matrix33 left, Matrix33 right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.MultiplyMatrix33RefMatrix33RefMatrix33Out">
            <summary>Sets the Shim of Matrix33.Multiply(Matrix33* left, Matrix33* right, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.MultiplyMatrix33RefSingleMatrix33Out">
            <summary>Sets the Shim of Matrix33.Multiply(Matrix33* left, Single right, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.MultiplyMatrix33Single">
            <summary>Sets the Shim of Matrix33.Multiply(Matrix33 left, Single right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.MultiplyOpMatrix33Matrix33">
            <summary>Sets the Shim of Matrix33.op_Multiply(Matrix33 left, Matrix33 right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.MultiplyOpMatrix33Single">
            <summary>Sets the Shim of Matrix33.op_Multiply(Matrix33 left, Single right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.MultiplyOpSingleMatrix33">
            <summary>Sets the Shim of Matrix33.op_Multiply(Single left, Matrix33 right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.NegateMatrix33">
            <summary>Sets the Shim of Matrix33.Negate(Matrix33 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.NegateMatrix33RefMatrix33Out">
            <summary>Sets the Shim of Matrix33.Negate(Matrix33* value, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.OrthogonalizeMatrix33">
            <summary>Sets the Shim of Matrix33.Orthogonalize(Matrix33 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.OrthogonalizeMatrix33RefMatrix33Out">
            <summary>Sets the Shim of Matrix33.Orthogonalize(Matrix33* value, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.OrthonormalizeMatrix33">
            <summary>Sets the Shim of Matrix33.Orthonormalize(Matrix33 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.OrthonormalizeMatrix33RefMatrix33Out">
            <summary>Sets the Shim of Matrix33.Orthonormalize(Matrix33* value, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.RotationAxisVector3RefSingleMatrix33Out">
            <summary>Sets the Shim of Matrix33.RotationAxis(Vector3* axis, Single angle, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.RotationAxisVector3Single">
            <summary>Sets the Shim of Matrix33.RotationAxis(Vector3 axis, Single angle)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.RotationQuaternionQuaternion">
            <summary>Sets the Shim of Matrix33.RotationQuaternion(Quaternion rotation)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.RotationQuaternionQuaternionRefMatrix33Out">
            <summary>Sets the Shim of Matrix33.RotationQuaternion(Quaternion* rotation, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.RotationXSingle">
            <summary>Sets the Shim of Matrix33.RotationX(Single angle)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.RotationXSingleMatrix33Out">
            <summary>Sets the Shim of Matrix33.RotationX(Single angle, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.RotationYSingle">
            <summary>Sets the Shim of Matrix33.RotationY(Single angle)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.RotationYSingleMatrix33Out">
            <summary>Sets the Shim of Matrix33.RotationY(Single angle, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.RotationYawPitchRollSingleSingleSingle">
            <summary>Sets the Shim of Matrix33.RotationYawPitchRoll(Single yaw, Single pitch, Single roll)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.RotationYawPitchRollSingleSingleSingleMatrix33Out">
            <summary>Sets the Shim of Matrix33.RotationYawPitchRoll(Single yaw, Single pitch, Single roll, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.RotationZSingle">
            <summary>Sets the Shim of Matrix33.RotationZ(Single angle)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.RotationZSingleMatrix33Out">
            <summary>Sets the Shim of Matrix33.RotationZ(Single angle, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.RowEchelonFormMatrix33">
            <summary>Sets the Shim of Matrix33.RowEchelonForm(Matrix33 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.RowEchelonFormMatrix33RefMatrix33Out">
            <summary>Sets the Shim of Matrix33.RowEchelonForm(Matrix33* value, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.ScalingSingle">
            <summary>Sets the Shim of Matrix33.Scaling(Single scale)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.ScalingSingleMatrix33Out">
            <summary>Sets the Shim of Matrix33.Scaling(Single scale, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.ScalingSingleSingleSingle">
            <summary>Sets the Shim of Matrix33.Scaling(Single x, Single y, Single z)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.ScalingSingleSingleSingleMatrix33Out">
            <summary>Sets the Shim of Matrix33.Scaling(Single x, Single y, Single z, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.ScalingVector3">
            <summary>Sets the Shim of Matrix33.Scaling(Vector3 scale)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.ScalingVector3RefMatrix33Out">
            <summary>Sets the Shim of Matrix33.Scaling(Vector3* scale, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.SmoothStepMatrix33Matrix33Single">
            <summary>Sets the Shim of Matrix33.SmoothStep(Matrix33 start, Matrix33 end, Single amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.SmoothStepMatrix33RefMatrix33RefSingleMatrix33Out">
            <summary>Sets the Shim of Matrix33.SmoothStep(Matrix33* start, Matrix33* end, Single amount, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.StaticConstructor">
            <summary>Sets the Shim of Matrix33.Matrix33()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.SubtractMatrix33Matrix33">
            <summary>Sets the Shim of Matrix33.Subtract(Matrix33 left, Matrix33 right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.SubtractMatrix33RefMatrix33RefMatrix33Out">
            <summary>Sets the Shim of Matrix33.Subtract(Matrix33* left, Matrix33* right, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.SubtractionOpMatrix33Matrix33">
            <summary>Sets the Shim of Matrix33.op_Subtraction(Matrix33 left, Matrix33 right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.TransposeByRefMatrix33RefMatrix33Ref">
            <summary>Sets the Shim of Matrix33.TransposeByRef(Matrix33* value, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.TransposeMatrix33">
            <summary>Sets the Shim of Matrix33.Transpose(Matrix33 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.TransposeMatrix33RefMatrix33Out">
            <summary>Sets the Shim of Matrix33.Transpose(Matrix33* value, Matrix33* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.UnaryNegationOpMatrix33">
            <summary>Sets the Shim of Matrix33.op_UnaryNegation(Matrix33 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.UnaryPlusOpMatrix33">
            <summary>Sets the Shim of Matrix33.op_UnaryPlus(Matrix33 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.UpperTriangularFormMatrix33">
            <summary>Sets the Shim of Matrix33.UpperTriangularForm(Matrix33 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix33.UpperTriangularFormMatrix33RefMatrix33Out">
            <summary>Sets the Shim of Matrix33.UpperTriangularForm(Matrix33* value, Matrix33* result)</summary>
        </member>
        <member name="T:Love.Fakes.ShimMatrix44">
            <summary>Shim type of Love.Matrix44</summary>
        </member>
        <member name="M:Love.Fakes.ShimMatrix44.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.AddMatrix44Matrix44">
            <summary>Sets the Shim of Matrix44.Add(Matrix44 matrix1, Matrix44 matrix2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.AddMatrix44RefMatrix44RefMatrix44Out">
            <summary>Sets the Shim of Matrix44.Add(Matrix44* matrix1, Matrix44* matrix2, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.AdditionOpMatrix44Matrix44">
            <summary>Sets the Shim of Matrix44.op_Addition(Matrix44 matrix1, Matrix44 matrix2)</summary>
        </member>
        <member name="T:Love.Fakes.ShimMatrix44.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimMatrix44.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimMatrix44.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateBillboardVector3RefVector3RefVector3RefNullableOfVector3Matrix44Out">
            <summary>Sets the Shim of Matrix44.CreateBillboard(Vector3* objectPosition, Vector3* cameraPosition, Vector3* cameraUpVector, Nullable`1 cameraForwardVector, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateBillboardVector3Vector3Vector3NullableOfVector3">
            <summary>Sets the Shim of Matrix44.CreateBillboard(Vector3 objectPosition, Vector3 cameraPosition, Vector3 cameraUpVector, Nullable`1 cameraForwardVector)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateConstrainedBillboardVector3RefVector3RefVector3RefNullableOfVector3NullableOfVector3Matrix44Out">
            <summary>Sets the Shim of Matrix44.CreateConstrainedBillboard(Vector3* objectPosition, Vector3* cameraPosition, Vector3* rotateAxis, Nullable`1 cameraForwardVector, Nullable`1 objectForwardVector, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateConstrainedBillboardVector3Vector3Vector3NullableOfVector3NullableOfVector3">
            <summary>Sets the Shim of Matrix44.CreateConstrainedBillboard(Vector3 objectPosition, Vector3 cameraPosition, Vector3 rotateAxis, Nullable`1 cameraForwardVector, Nullable`1 objectForwardVector)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateFromAxisAngleVector3RefSingleMatrix44Out">
            <summary>Sets the Shim of Matrix44.CreateFromAxisAngle(Vector3* axis, Single angle, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateFromAxisAngleVector3Single">
            <summary>Sets the Shim of Matrix44.CreateFromAxisAngle(Vector3 axis, Single angle)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateLookAtVector3RefVector3RefVector3RefMatrix44Out">
            <summary>Sets the Shim of Matrix44.CreateLookAt(Vector3* cameraPosition, Vector3* cameraTarget, Vector3* cameraUpVector, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateLookAtVector3Vector3Vector3">
            <summary>Sets the Shim of Matrix44.CreateLookAt(Vector3 cameraPosition, Vector3 cameraTarget, Vector3 cameraUpVector)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateOrthographicOffCenterSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Matrix44.CreateOrthographicOffCenter(Single left, Single right, Single bottom, Single top, Single zNearPlane, Single zFarPlane)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateOrthographicOffCenterSingleSingleSingleSingleSingleSingleMatrix44Out">
            <summary>Sets the Shim of Matrix44.CreateOrthographicOffCenter(Single left, Single right, Single bottom, Single top, Single zNearPlane, Single zFarPlane, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateOrthographicSingleSingleSingleSingle">
            <summary>Sets the Shim of Matrix44.CreateOrthographic(Single width, Single height, Single zNearPlane, Single zFarPlane)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateOrthographicSingleSingleSingleSingleMatrix44Out">
            <summary>Sets the Shim of Matrix44.CreateOrthographic(Single width, Single height, Single zNearPlane, Single zFarPlane, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreatePerspectiveFieldOfViewSingleSingleSingleSingle">
            <summary>Sets the Shim of Matrix44.CreatePerspectiveFieldOfView(Single fieldOfView, Single aspectRatio, Single nearPlaneDistance, Single farPlaneDistance)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreatePerspectiveFieldOfViewSingleSingleSingleSingleMatrix44Out">
            <summary>Sets the Shim of Matrix44.CreatePerspectiveFieldOfView(Single fieldOfView, Single aspectRatio, Single nearPlaneDistance, Single farPlaneDistance, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreatePerspectiveOffCenterSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Matrix44.CreatePerspectiveOffCenter(Single left, Single right, Single bottom, Single top, Single zNearPlane, Single zFarPlane)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreatePerspectiveOffCenterSingleSingleSingleSingleSingleSingleMatrix44Out">
            <summary>Sets the Shim of Matrix44.CreatePerspectiveOffCenter(Single left, Single right, Single bottom, Single top, Single nearPlaneDistance, Single farPlaneDistance, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreatePerspectiveSingleSingleSingleSingle">
            <summary>Sets the Shim of Matrix44.CreatePerspective(Single width, Single height, Single zNearPlane, Single zFarPlane)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreatePerspectiveSingleSingleSingleSingleMatrix44Out">
            <summary>Sets the Shim of Matrix44.CreatePerspective(Single width, Single height, Single zNearPlane, Single zFarPlane, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateRotationXSingle">
            <summary>Sets the Shim of Matrix44.CreateRotationX(Single radians)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateRotationXSingleMatrix44Out">
            <summary>Sets the Shim of Matrix44.CreateRotationX(Single radians, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateRotationYSingle">
            <summary>Sets the Shim of Matrix44.CreateRotationY(Single radians)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateRotationYSingleMatrix44Out">
            <summary>Sets the Shim of Matrix44.CreateRotationY(Single radians, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateRotationZSingle">
            <summary>Sets the Shim of Matrix44.CreateRotationZ(Single radians)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateRotationZSingleMatrix44Out">
            <summary>Sets the Shim of Matrix44.CreateRotationZ(Single radians, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateScaleSingle">
            <summary>Sets the Shim of Matrix44.CreateScale(Single scale)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateScaleSingleMatrix44Out">
            <summary>Sets the Shim of Matrix44.CreateScale(Single scale, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateScaleSingleSingleSingle">
            <summary>Sets the Shim of Matrix44.CreateScale(Single xScale, Single yScale, Single zScale)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateScaleSingleSingleSingleMatrix44Out">
            <summary>Sets the Shim of Matrix44.CreateScale(Single xScale, Single yScale, Single zScale, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateScaleVector3">
            <summary>Sets the Shim of Matrix44.CreateScale(Vector3 scales)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateScaleVector3RefMatrix44Out">
            <summary>Sets the Shim of Matrix44.CreateScale(Vector3* scales, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateTranslationSingleSingleSingle">
            <summary>Sets the Shim of Matrix44.CreateTranslation(Single xPosition, Single yPosition, Single zPosition)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateTranslationSingleSingleSingleMatrix44Out">
            <summary>Sets the Shim of Matrix44.CreateTranslation(Single xPosition, Single yPosition, Single zPosition, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateTranslationVector3">
            <summary>Sets the Shim of Matrix44.CreateTranslation(Vector3 position)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateTranslationVector3RefMatrix44Out">
            <summary>Sets the Shim of Matrix44.CreateTranslation(Vector3* position, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateWorldVector3RefVector3RefVector3RefMatrix44Out">
            <summary>Sets the Shim of Matrix44.CreateWorld(Vector3* position, Vector3* forward, Vector3* up, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.CreateWorldVector3Vector3Vector3">
            <summary>Sets the Shim of Matrix44.CreateWorld(Vector3 position, Vector3 forward, Vector3 up)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.DivideMatrix44Matrix44">
            <summary>Sets the Shim of Matrix44.Divide(Matrix44 matrix1, Matrix44 matrix2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.DivideMatrix44RefMatrix44RefMatrix44Out">
            <summary>Sets the Shim of Matrix44.Divide(Matrix44* matrix1, Matrix44* matrix2, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.DivideMatrix44RefSingleMatrix44Out">
            <summary>Sets the Shim of Matrix44.Divide(Matrix44* matrix1, Single divider, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.DivideMatrix44Single">
            <summary>Sets the Shim of Matrix44.Divide(Matrix44 matrix1, Single divider)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.DivisionOpMatrix44Matrix44">
            <summary>Sets the Shim of Matrix44.op_Division(Matrix44 matrix1, Matrix44 matrix2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.DivisionOpMatrix44Single">
            <summary>Sets the Shim of Matrix44.op_Division(Matrix44 matrix1, Single divider)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.EqualityOpMatrix44Matrix44">
            <summary>Sets the Shim of Matrix44.op_Equality(Matrix44 matrix1, Matrix44 matrix2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.IdentityGet">
            <summary>Sets the Shim of Matrix44.get_Identity()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.InequalityOpMatrix44Matrix44">
            <summary>Sets the Shim of Matrix44.op_Inequality(Matrix44 matrix1, Matrix44 matrix2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.InvertMatrix44">
            <summary>Sets the Shim of Matrix44.Invert(Matrix44 matrix)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.InvertMatrix44Matrix44Out">
            <summary>Sets the Shim of Matrix44.Invert(Matrix44 matrix, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.InvertMatrix44RefMatrix44Out">
            <summary>Sets the Shim of Matrix44.Invert(Matrix44* matrix, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.LerpMatrix44Matrix44Single">
            <summary>Sets the Shim of Matrix44.Lerp(Matrix44 matrix1, Matrix44 matrix2, Single amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.LerpMatrix44RefMatrix44RefSingleMatrix44Out">
            <summary>Sets the Shim of Matrix44.Lerp(Matrix44* matrix1, Matrix44* matrix2, Single amount, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.MultiplyMatrix44Matrix44">
            <summary>Sets the Shim of Matrix44.Multiply(Matrix44 matrix1, Matrix44 matrix2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.MultiplyMatrix44RefMatrix44RefMatrix44Out">
            <summary>Sets the Shim of Matrix44.Multiply(Matrix44* matrix1, Matrix44* matrix2, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.MultiplyMatrix44RefSingleMatrix44Out">
            <summary>Sets the Shim of Matrix44.Multiply(Matrix44* matrix1, Single factor, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.MultiplyMatrix44Single">
            <summary>Sets the Shim of Matrix44.Multiply(Matrix44 matrix1, Single factor)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.MultiplyOpMatrix44Matrix44">
            <summary>Sets the Shim of Matrix44.op_Multiply(Matrix44 matrix1, Matrix44 matrix2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.MultiplyOpMatrix44Single">
            <summary>Sets the Shim of Matrix44.op_Multiply(Matrix44 matrix, Single scaleFactor)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.MultiplyOpSingleMatrix44">
            <summary>Sets the Shim of Matrix44.op_Multiply(Single scaleFactor, Matrix44 matrix)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.NegateMatrix44">
            <summary>Sets the Shim of Matrix44.Negate(Matrix44 matrix)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.NegateMatrix44RefMatrix44Out">
            <summary>Sets the Shim of Matrix44.Negate(Matrix44* matrix, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.StaticConstructor">
            <summary>Sets the Shim of Matrix44.Matrix44()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.SubtractMatrix44Matrix44">
            <summary>Sets the Shim of Matrix44.Subtract(Matrix44 matrix1, Matrix44 matrix2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.SubtractMatrix44RefMatrix44RefMatrix44Out">
            <summary>Sets the Shim of Matrix44.Subtract(Matrix44* matrix1, Matrix44* matrix2, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.SubtractionOpMatrix44Matrix44">
            <summary>Sets the Shim of Matrix44.op_Subtraction(Matrix44 matrix1, Matrix44 matrix2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.TransposeMatrix44">
            <summary>Sets the Shim of Matrix44.Transpose(Matrix44 matrix)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.TransposeMatrix44RefMatrix44Out">
            <summary>Sets the Shim of Matrix44.Transpose(Matrix44* matrix, Matrix44* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMatrix44.UnaryNegationOpMatrix44">
            <summary>Sets the Shim of Matrix44.op_UnaryNegation(Matrix44 matrix1)</summary>
        </member>
        <member name="T:Love.Fakes.ShimMesh">
            <summary>Shim type of Love.Mesh</summary>
        </member>
        <member name="M:Love.Fakes.ShimMesh.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimMesh.#ctor(Love.Mesh)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimMesh.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.AllInstances.Flush">
            <summary>Sets the Shim of Mesh.Flush(Mesh this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.AllInstances.GetDrawMode">
            <summary>Sets the Shim of Mesh.GetDrawMode(Mesh this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.AllInstances.GetDrawRangeInt32OutInt32Out">
            <summary>Sets the Shim of Mesh.GetDrawRange(Mesh this, Int32* out_start, Int32* out_count)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.AllInstances.GetTexture">
            <summary>Sets the Shim of Mesh.GetTexture(Mesh this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.AllInstances.GetVertexAttributeInt32Int32">
            <summary>Sets the Shim of Mesh.GetVertexAttribute(Mesh this, Int32 vertIndex, Int32 attrIndex)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.AllInstances.GetVertexCount">
            <summary>Sets the Shim of Mesh.GetVertexCount(Mesh this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.AllInstances.GetVertexFormat">
            <summary>Sets the Shim of Mesh.GetVertexFormat(Mesh this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.AllInstances.GetVertexInt32">
            <summary>Sets the Shim of Mesh.GetVertex(Mesh this, Int32 index)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.AllInstances.GetVertexMap">
            <summary>Sets the Shim of Mesh.GetVertexMap(Mesh this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.AllInstances.IsAttributeEnabledString">
            <summary>Sets the Shim of Mesh.IsAttributeEnabled(Mesh this, String name)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.AllInstances.IsAttributeEnabledStringBoolean">
            <summary>Sets the Shim of Mesh.IsAttributeEnabled(Mesh this, String name, Boolean flag)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.AllInstances.SetDrawModeMeshDrawMode">
            <summary>Sets the Shim of Mesh.SetDrawMode(Mesh this, MeshDrawMode mode_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.AllInstances.SetDrawRange">
            <summary>Sets the Shim of Mesh.SetDrawRange(Mesh this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.AllInstances.SetDrawRangeInt32Int32">
            <summary>Sets the Shim of Mesh.SetDrawRange(Mesh this, Int32 start, Int32 count)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.AllInstances.SetTexture">
            <summary>Sets the Shim of Mesh.SetTexture(Mesh this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.AllInstances.SetTextureTexture">
            <summary>Sets the Shim of Mesh.SetTexture(Mesh this, Texture tex)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.AllInstances.SetVertexAttributeInt32Int32ByteArray">
            <summary>Sets the Shim of Mesh.SetVertexAttribute(Mesh this, Int32 vertIndex, Int32 attrIndex, Byte[] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.AllInstances.SetVertexInt32ByteArray">
            <summary>Sets the Shim of Mesh.SetVertex(Mesh this, Int32 index, Byte[] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.AllInstances.SetVertexMap">
            <summary>Sets the Shim of Mesh.SetVertexMap(Mesh this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.AllInstances.SetVertexMapUInt32Array">
            <summary>Sets the Shim of Mesh.SetVertexMap(Mesh this, UInt32[] vertexmaps)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.AllInstances.SetVerticesInt32ByteArray">
            <summary>Sets the Shim of Mesh.SetVertices(Mesh this, Int32 vertOffset, Byte[] inputData)</summary>
        </member>
        <member name="M:Love.Fakes.ShimMesh.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimMesh.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimMesh.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.Constructor">
            <summary>Sets the Shim of Mesh.Mesh(Mesh this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.Flush">
            <summary>Sets the Shim of Mesh.Flush(Mesh this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.GetDrawMode">
            <summary>Sets the Shim of Mesh.GetDrawMode(Mesh this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.GetDrawRangeInt32OutInt32Out">
            <summary>Sets the Shim of Mesh.GetDrawRange(Mesh this, Int32* out_start, Int32* out_count)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.GetTexture">
            <summary>Sets the Shim of Mesh.GetTexture(Mesh this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.GetVertexAttributeInt32Int32">
            <summary>Sets the Shim of Mesh.GetVertexAttribute(Mesh this, Int32 vertIndex, Int32 attrIndex)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.GetVertexCount">
            <summary>Sets the Shim of Mesh.GetVertexCount(Mesh this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.GetVertexFormat">
            <summary>Sets the Shim of Mesh.GetVertexFormat(Mesh this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.GetVertexInt32">
            <summary>Sets the Shim of Mesh.GetVertex(Mesh this, Int32 index)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.GetVertexMap">
            <summary>Sets the Shim of Mesh.GetVertexMap(Mesh this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.IsAttributeEnabledString">
            <summary>Sets the Shim of Mesh.IsAttributeEnabled(Mesh this, String name)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.IsAttributeEnabledStringBoolean">
            <summary>Sets the Shim of Mesh.IsAttributeEnabled(Mesh this, String name, Boolean flag)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.SetDrawModeMeshDrawMode">
            <summary>Sets the Shim of Mesh.SetDrawMode(Mesh this, MeshDrawMode mode_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.SetDrawRange">
            <summary>Sets the Shim of Mesh.SetDrawRange(Mesh this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.SetDrawRangeInt32Int32">
            <summary>Sets the Shim of Mesh.SetDrawRange(Mesh this, Int32 start, Int32 count)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.SetTexture">
            <summary>Sets the Shim of Mesh.SetTexture(Mesh this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.SetTextureTexture">
            <summary>Sets the Shim of Mesh.SetTexture(Mesh this, Texture tex)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.SetVertexAttributeInt32Int32ByteArray">
            <summary>Sets the Shim of Mesh.SetVertexAttribute(Mesh this, Int32 vertIndex, Int32 attrIndex, Byte[] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.SetVertexInt32ByteArray">
            <summary>Sets the Shim of Mesh.SetVertex(Mesh this, Int32 index, Byte[] data)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.SetVertexMap">
            <summary>Sets the Shim of Mesh.SetVertexMap(Mesh this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.SetVertexMapUInt32Array">
            <summary>Sets the Shim of Mesh.SetVertexMap(Mesh this, UInt32[] vertexmaps)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMesh.SetVerticesInt32ByteArray">
            <summary>Sets the Shim of Mesh.SetVertices(Mesh this, Int32 vertOffset, Byte[] inputData)</summary>
        </member>
        <member name="T:Love.Fakes.ShimMeshAttributeNameAttribute">
            <summary>Shim type of Love.MeshAttributeNameAttribute</summary>
        </member>
        <member name="M:Love.Fakes.ShimMeshAttributeNameAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimMeshAttributeNameAttribute.#ctor(Love.MeshAttributeNameAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimMeshAttributeNameAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimMeshAttributeNameAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimMeshAttributeNameAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimMeshAttributeNameAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimMeshAttributeNameAttribute.ConstructorString">
            <summary>Sets the Shim of MeshAttributeNameAttribute.MeshAttributeNameAttribute(MeshAttributeNameAttribute this, String name)</summary>
        </member>
        <member name="T:Love.Fakes.ShimMeshFormatDescribe">
            <summary>Shim type of Love.MeshFormatDescribe</summary>
        </member>
        <member name="M:Love.Fakes.ShimMeshFormatDescribe.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimMeshFormatDescribe.#ctor(Love.MeshFormatDescribe)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimMeshFormatDescribe.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimMeshFormatDescribe.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimMeshFormatDescribe.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimMeshFormatDescribe.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimMeshFormatDescribe.ConstructorIEnumerableOfMeshFormatDescribeEntry">
            <summary>Sets the Shim of MeshFormatDescribe.MeshFormatDescribe(MeshFormatDescribe this, IEnumerable`1 formatList)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMeshFormatDescribe.NewIEnumerableOfMeshFormatDescribeEntry">
            <summary>Sets the Shim of MeshFormatDescribe.New(IEnumerable`1 entries)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMeshFormatDescribe.NewMeshFormatDescribeEntryArray">
            <summary>Sets the Shim of MeshFormatDescribe.New(Entry[] entries)</summary>
        </member>
        <member name="M:Love.Fakes.ShimMeshFormatDescribe.NewOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Love.MeshFormatDescribe{``0}})">
            <summary>Sets the Shim of MeshFormatDescribe.New()</summary>
        </member>
        <member name="T:Love.Fakes.ShimMeshFormatDescribe.ShimEntry">
            <summary>Shim type of Love.MeshFormatDescribe.Entry</summary>
        </member>
        <member name="M:Love.Fakes.ShimMeshFormatDescribe.ShimEntry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimMeshFormatDescribe.ShimEntry.#ctor(Love.MeshFormatDescribe.Entry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimMeshFormatDescribe.ShimEntry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimMeshFormatDescribe.ShimEntry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimMeshFormatDescribe.ShimEntry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimMeshFormatDescribe.ShimEntry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimMeshFormatDescribe.ShimEntry.ConstructorStringVertexDataTypeInt32">
            <summary>Sets the Shim of Entry.Entry(Entry this, String name, VertexDataType type, Int32 componentCount)</summary>
        </member>
        <member name="T:Love.Fakes.ShimMeshFormatDescribe`1">
            <summary>Shim type of Love.MeshFormatDescribe&lt;T&gt;</summary>
        </member>
        <member name="M:Love.Fakes.ShimMeshFormatDescribe`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimMeshFormatDescribe`1.#ctor(Love.MeshFormatDescribe{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimMeshFormatDescribe`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimMeshFormatDescribe`1.AllInstances.ByteCountGet">
            <summary>Sets the Shim of MeshFormatDescribe`1.get_ByteCount(MeshFormatDescribe`1 this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMeshFormatDescribe`1.AllInstances.EntriesGet">
            <summary>Sets the Shim of MeshFormatDescribe`1.get_Entries(MeshFormatDescribe`1 this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimMeshFormatDescribe`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimMeshFormatDescribe`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimMeshFormatDescribe`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimMeshFormatDescribe`1.ByteCountGet">
            <summary>Sets the Shim of MeshFormatDescribe`1.get_ByteCount(MeshFormatDescribe`1 this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMeshFormatDescribe`1.Constructor">
            <summary>Sets the Shim of MeshFormatDescribe`1.MeshFormatDescribe`1(MeshFormatDescribe`1 this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMeshFormatDescribe`1.EntriesGet">
            <summary>Sets the Shim of MeshFormatDescribe`1.get_Entries(MeshFormatDescribe`1 this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMeshFormatDescribe`1.New">
            <summary>Sets the Shim of MeshFormatDescribe`1.New()</summary>
        </member>
        <member name="T:Love.Fakes.ShimMotorJoint">
            <summary>Shim type of Love.MotorJoint</summary>
        </member>
        <member name="M:Love.Fakes.ShimMotorJoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimMotorJoint.#ctor(Love.MotorJoint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimMotorJoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimMotorJoint.AllInstances.GetAngularOffset">
            <summary>Sets the Shim of MotorJoint.GetAngularOffset(MotorJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMotorJoint.AllInstances.GetCorrectionFactor">
            <summary>Sets the Shim of MotorJoint.GetCorrectionFactor(MotorJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMotorJoint.AllInstances.GetLinearOffset">
            <summary>Sets the Shim of MotorJoint.GetLinearOffset(MotorJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMotorJoint.AllInstances.GetMaxForce">
            <summary>Sets the Shim of MotorJoint.GetMaxForce(MotorJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMotorJoint.AllInstances.GetMaxTorque">
            <summary>Sets the Shim of MotorJoint.GetMaxTorque(MotorJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMotorJoint.AllInstances.SetAngularOffsetSingle">
            <summary>Sets the Shim of MotorJoint.SetAngularOffset(MotorJoint this, Single angularOffset)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMotorJoint.AllInstances.SetCorrectionFactorSingle">
            <summary>Sets the Shim of MotorJoint.SetCorrectionFactor(MotorJoint this, Single factor)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMotorJoint.AllInstances.SetLinearOffsetSingleSingle">
            <summary>Sets the Shim of MotorJoint.SetLinearOffset(MotorJoint this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMotorJoint.AllInstances.SetMaxForceSingle">
            <summary>Sets the Shim of MotorJoint.SetMaxForce(MotorJoint this, Single maxForce)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMotorJoint.AllInstances.SetMaxTorqueSingle">
            <summary>Sets the Shim of MotorJoint.SetMaxTorque(MotorJoint this, Single torque)</summary>
        </member>
        <member name="M:Love.Fakes.ShimMotorJoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimMotorJoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimMotorJoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimMotorJoint.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimMotorJoint.Constructor">
            <summary>Sets the Shim of MotorJoint.MotorJoint(MotorJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMotorJoint.GetAngularOffset">
            <summary>Sets the Shim of MotorJoint.GetAngularOffset(MotorJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMotorJoint.GetCorrectionFactor">
            <summary>Sets the Shim of MotorJoint.GetCorrectionFactor(MotorJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMotorJoint.GetLinearOffset">
            <summary>Sets the Shim of MotorJoint.GetLinearOffset(MotorJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMotorJoint.GetMaxForce">
            <summary>Sets the Shim of MotorJoint.GetMaxForce(MotorJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMotorJoint.GetMaxTorque">
            <summary>Sets the Shim of MotorJoint.GetMaxTorque(MotorJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMotorJoint.SetAngularOffsetSingle">
            <summary>Sets the Shim of MotorJoint.SetAngularOffset(MotorJoint this, Single angularOffset)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMotorJoint.SetCorrectionFactorSingle">
            <summary>Sets the Shim of MotorJoint.SetCorrectionFactor(MotorJoint this, Single factor)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMotorJoint.SetLinearOffsetSingleSingle">
            <summary>Sets the Shim of MotorJoint.SetLinearOffset(MotorJoint this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMotorJoint.SetMaxForceSingle">
            <summary>Sets the Shim of MotorJoint.SetMaxForce(MotorJoint this, Single maxForce)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMotorJoint.SetMaxTorqueSingle">
            <summary>Sets the Shim of MotorJoint.SetMaxTorque(MotorJoint this, Single torque)</summary>
        </member>
        <member name="T:Love.Fakes.ShimMouse">
            <summary>Shim type of Love.Mouse</summary>
        </member>
        <member name="M:Love.Fakes.ShimMouse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimMouse.#ctor(Love.Mouse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimMouse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimMouse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimMouse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.Constructor">
            <summary>Sets the Shim of Mouse.Mouse(Mouse this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.GetCursor">
            <summary>Sets the Shim of Mouse.GetCursor()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.GetPosition">
            <summary>Sets the Shim of Mouse.GetPosition()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.GetPositionDoubleOutDoubleOut">
            <summary>Sets the Shim of Mouse.GetPosition(Double* out_x, Double* out_y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.GetPreviousPosition">
            <summary>Sets the Shim of Mouse.GetPreviousPosition()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.GetPreviousX">
            <summary>Sets the Shim of Mouse.GetPreviousX()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.GetPreviousY">
            <summary>Sets the Shim of Mouse.GetPreviousY()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.GetRelativeMode">
            <summary>Sets the Shim of Mouse.GetRelativeMode()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.GetScrollX">
            <summary>Sets the Shim of Mouse.GetScrollX()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.GetScrollY">
            <summary>Sets the Shim of Mouse.GetScrollY()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.GetSystemCursorSystemCursor">
            <summary>Sets the Shim of Mouse.GetSystemCursor(SystemCursor sysctype)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.GetX">
            <summary>Sets the Shim of Mouse.GetX()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.GetXDouble">
            <summary>Sets the Shim of Mouse.GetXDouble()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.GetY">
            <summary>Sets the Shim of Mouse.GetY()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.GetYDouble">
            <summary>Sets the Shim of Mouse.GetYDouble()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.Init">
            <summary>Sets the Shim of Mouse.Init()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.IsCursorSupported">
            <summary>Sets the Shim of Mouse.IsCursorSupported()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.IsDownInt32">
            <summary>Sets the Shim of Mouse.IsDown(Int32 buttonIndex)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.IsDownMouseButton">
            <summary>Sets the Shim of Mouse.IsDown(MouseButton btn)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.IsGrabbed">
            <summary>Sets the Shim of Mouse.IsGrabbed()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.IsPressedInt32">
            <summary>Sets the Shim of Mouse.IsPressed(Int32 buttonIndex)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.IsPressedMouseButton">
            <summary>Sets the Shim of Mouse.IsPressed(MouseButton btn)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.IsReleasedInt32">
            <summary>Sets the Shim of Mouse.IsReleased(Int32 buttonIndex)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.IsReleasedMouseButton">
            <summary>Sets the Shim of Mouse.IsReleased(MouseButton btn)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.IsVisible">
            <summary>Sets the Shim of Mouse.IsVisible()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.NewCursorImageDataInt32Int32">
            <summary>Sets the Shim of Mouse.NewCursor(ImageData imageData, Int32 hotX, Int32 hotY)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.NewCursorStringInt32Int32">
            <summary>Sets the Shim of Mouse.NewCursor(String filename, Int32 hotX, Int32 hotY)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.SetCursorCursor">
            <summary>Sets the Shim of Mouse.SetCursor(Cursor cursor)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.SetCursorSystemCursor">
            <summary>Sets the Shim of Mouse.SetCursor(SystemCursor systemCursor)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.SetGrabbedBoolean">
            <summary>Sets the Shim of Mouse.SetGrabbed(Boolean grabbed)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.SetPositionDoubleDouble">
            <summary>Sets the Shim of Mouse.SetPosition(Double x, Double y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.SetPreviousPositionSingleSingle">
            <summary>Sets the Shim of Mouse.SetPreviousPosition(Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.SetPreviousPositionVector2">
            <summary>Sets the Shim of Mouse.SetPreviousPosition(Vector2 pos)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.SetRelativeModeBoolean">
            <summary>Sets the Shim of Mouse.SetRelativeMode(Boolean enable)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.SetScrollXInt32">
            <summary>Sets the Shim of Mouse.SetScrollX(Int32 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.SetScrollYInt32">
            <summary>Sets the Shim of Mouse.SetScrollY(Int32 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.SetVisibleBoolean">
            <summary>Sets the Shim of Mouse.SetVisible(Boolean visible)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.SetXDouble">
            <summary>Sets the Shim of Mouse.SetX(Double x)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.SetYDouble">
            <summary>Sets the Shim of Mouse.SetY(Double y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.StaticConstructor">
            <summary>Sets the Shim of Mouse.Mouse()</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouse.Step">
            <summary>Sets the Shim of Mouse.Step()</summary>
        </member>
        <member name="T:Love.Fakes.ShimMouseJoint">
            <summary>Shim type of Love.MouseJoint</summary>
        </member>
        <member name="M:Love.Fakes.ShimMouseJoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimMouseJoint.#ctor(Love.MouseJoint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimMouseJoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouseJoint.AllInstances.GetDampingRatio">
            <summary>Sets the Shim of MouseJoint.GetDampingRatio(MouseJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouseJoint.AllInstances.GetFrequency">
            <summary>Sets the Shim of MouseJoint.GetFrequency(MouseJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouseJoint.AllInstances.GetMaxForce">
            <summary>Sets the Shim of MouseJoint.GetMaxForce(MouseJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouseJoint.AllInstances.GetTarget">
            <summary>Sets the Shim of MouseJoint.GetTarget(MouseJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouseJoint.AllInstances.SetDampingRatioSingle">
            <summary>Sets the Shim of MouseJoint.SetDampingRatio(MouseJoint this, Single ratio)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouseJoint.AllInstances.SetFrequencySingle">
            <summary>Sets the Shim of MouseJoint.SetFrequency(MouseJoint this, Single frequency)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouseJoint.AllInstances.SetMaxForceSingle">
            <summary>Sets the Shim of MouseJoint.SetMaxForce(MouseJoint this, Single force)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouseJoint.AllInstances.SetTargetSingleSingle">
            <summary>Sets the Shim of MouseJoint.SetTarget(MouseJoint this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouseJoint.AllInstances.SetTargetVector2">
            <summary>Sets the Shim of MouseJoint.SetTarget(MouseJoint this, Vector2 pos)</summary>
        </member>
        <member name="M:Love.Fakes.ShimMouseJoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimMouseJoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouseJoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimMouseJoint.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouseJoint.Constructor">
            <summary>Sets the Shim of MouseJoint.MouseJoint(MouseJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouseJoint.GetDampingRatio">
            <summary>Sets the Shim of MouseJoint.GetDampingRatio(MouseJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouseJoint.GetFrequency">
            <summary>Sets the Shim of MouseJoint.GetFrequency(MouseJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouseJoint.GetMaxForce">
            <summary>Sets the Shim of MouseJoint.GetMaxForce(MouseJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouseJoint.GetTarget">
            <summary>Sets the Shim of MouseJoint.GetTarget(MouseJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouseJoint.SetDampingRatioSingle">
            <summary>Sets the Shim of MouseJoint.SetDampingRatio(MouseJoint this, Single ratio)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouseJoint.SetFrequencySingle">
            <summary>Sets the Shim of MouseJoint.SetFrequency(MouseJoint this, Single frequency)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouseJoint.SetMaxForceSingle">
            <summary>Sets the Shim of MouseJoint.SetMaxForce(MouseJoint this, Single force)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouseJoint.SetTargetSingleSingle">
            <summary>Sets the Shim of MouseJoint.SetTarget(MouseJoint this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimMouseJoint.SetTargetVector2">
            <summary>Sets the Shim of MouseJoint.SetTarget(MouseJoint this, Vector2 pos)</summary>
        </member>
        <member name="T:Love.Fakes.ShimNativeLibraryUtil">
            <summary>Shim type of Love.NativeLibraryUtil</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Love.Fakes.ShimNativeLibraryUtil.ShimFunctionAddrLoader">
            <summary>Shim type of Love.NativeLibraryUtil.FunctionAddrLoader</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.ShimFunctionAddrLoader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.ShimFunctionAddrLoader.#ctor(Love.NativeLibraryUtil.FunctionAddrLoader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimNativeLibraryUtil.ShimFunctionAddrLoader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimFunctionAddrLoader.AllInstances.GetFunctionLoaderString">
            <summary>Sets the Shim of FunctionAddrLoader.GetFunctionLoader(FunctionAddrLoader this, String libPath)</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.ShimFunctionAddrLoader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.ShimFunctionAddrLoader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimFunctionAddrLoader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimFunctionAddrLoader.ConstructorNativeLibraryUtilINativeLibraryLoaderDictionaryOfStringIntPtr">
            <summary>Sets the Shim of FunctionAddrLoader.FunctionAddrLoader(FunctionAddrLoader this, INativeLibraryLoader loader, Dictionary`2 libAddrDict)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimFunctionAddrLoader.GetFunctionLoaderString">
            <summary>Sets the Shim of FunctionAddrLoader.GetFunctionLoader(FunctionAddrLoader this, String libPath)</summary>
        </member>
        <member name="T:Love.Fakes.ShimNativeLibraryUtil.ShimFunctionAddrLoaderDelegate">
            <summary>Shim type of Love.NativeLibraryUtil.FunctionAddrLoaderDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.ShimFunctionAddrLoaderDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.ShimFunctionAddrLoaderDelegate.#ctor(Love.NativeLibraryUtil.FunctionAddrLoaderDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimNativeLibraryUtil.ShimFunctionAddrLoaderDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimFunctionAddrLoaderDelegate.AllInstances.BeginInvokeStringIntPtrOutStringOutAsyncCallbackObject">
            <summary>Sets the Shim of FunctionAddrLoaderDelegate.BeginInvoke(FunctionAddrLoaderDelegate this, String functionName, IntPtr* funcPtr, String* errorInfo, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimFunctionAddrLoaderDelegate.AllInstances.EndInvokeIntPtrOutStringOutIAsyncResult">
            <summary>Sets the Shim of FunctionAddrLoaderDelegate.EndInvoke(FunctionAddrLoaderDelegate this, IntPtr* funcPtr, String* errorInfo, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimFunctionAddrLoaderDelegate.AllInstances.InvokeStringIntPtrOutStringOut">
            <summary>Sets the Shim of FunctionAddrLoaderDelegate.Invoke(FunctionAddrLoaderDelegate this, String functionName, IntPtr* funcPtr, String* errorInfo)</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.ShimFunctionAddrLoaderDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.ShimFunctionAddrLoaderDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimFunctionAddrLoaderDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.ShimFunctionAddrLoaderDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.ShimFunctionAddrLoaderDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimFunctionAddrLoaderDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of FunctionAddrLoaderDelegate.FunctionAddrLoaderDelegate(FunctionAddrLoaderDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimFunctionAddrLoaderDelegate.InvokeStringIntPtrOutStringOut">
            <summary>Sets the Shim of FunctionAddrLoaderDelegate.Invoke(FunctionAddrLoaderDelegate this, String functionName, IntPtr* funcPtr, String* errorInfo)</summary>
        </member>
        <member name="T:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig">
            <summary>Shim type of Love.NativeLibraryUtil.LibraryConfig</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.#ctor(Love.NativeLibraryUtil.LibraryConfig)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.AllInstances.Linux32Get">
            <summary>Sets the Shim of LibraryConfig.get_Linux32(LibraryConfig this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.AllInstances.Linux32SetNativeLibraryUtilLibraryContentArray">
            <summary>Sets the Shim of LibraryConfig.set_Linux32(LibraryConfig this, LibraryContent[] value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.AllInstances.Linux64Get">
            <summary>Sets the Shim of LibraryConfig.get_Linux64(LibraryConfig this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.AllInstances.Linux64SetNativeLibraryUtilLibraryContentArray">
            <summary>Sets the Shim of LibraryConfig.set_Linux64(LibraryConfig this, LibraryContent[] value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.AllInstances.Mac64Get">
            <summary>Sets the Shim of LibraryConfig.get_Mac64(LibraryConfig this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.AllInstances.Mac64SetNativeLibraryUtilLibraryContentArray">
            <summary>Sets the Shim of LibraryConfig.set_Mac64(LibraryConfig this, LibraryContent[] value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.AllInstances.Win32Get">
            <summary>Sets the Shim of LibraryConfig.get_Win32(LibraryConfig this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.AllInstances.Win32SetNativeLibraryUtilLibraryContentArray">
            <summary>Sets the Shim of LibraryConfig.set_Win32(LibraryConfig this, LibraryContent[] value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.AllInstances.Win64Get">
            <summary>Sets the Shim of LibraryConfig.get_Win64(LibraryConfig this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.AllInstances.Win64SetNativeLibraryUtilLibraryContentArray">
            <summary>Sets the Shim of LibraryConfig.set_Win64(LibraryConfig this, LibraryContent[] value)</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.Constructor">
            <summary>Sets the Shim of LibraryConfig.LibraryConfig(LibraryConfig this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.Linux32Get">
            <summary>Sets the Shim of LibraryConfig.get_Linux32(LibraryConfig this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.Linux32SetNativeLibraryUtilLibraryContentArray">
            <summary>Sets the Shim of LibraryConfig.set_Linux32(LibraryConfig this, LibraryContent[] value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.Linux64Get">
            <summary>Sets the Shim of LibraryConfig.get_Linux64(LibraryConfig this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.Linux64SetNativeLibraryUtilLibraryContentArray">
            <summary>Sets the Shim of LibraryConfig.set_Linux64(LibraryConfig this, LibraryContent[] value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.Mac64Get">
            <summary>Sets the Shim of LibraryConfig.get_Mac64(LibraryConfig this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.Mac64SetNativeLibraryUtilLibraryContentArray">
            <summary>Sets the Shim of LibraryConfig.set_Mac64(LibraryConfig this, LibraryContent[] value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.Win32Get">
            <summary>Sets the Shim of LibraryConfig.get_Win32(LibraryConfig this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.Win32SetNativeLibraryUtilLibraryContentArray">
            <summary>Sets the Shim of LibraryConfig.set_Win32(LibraryConfig this, LibraryContent[] value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.Win64Get">
            <summary>Sets the Shim of LibraryConfig.get_Win64(LibraryConfig this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryConfig.Win64SetNativeLibraryUtilLibraryContentArray">
            <summary>Sets the Shim of LibraryConfig.set_Win64(LibraryConfig this, LibraryContent[] value)</summary>
        </member>
        <member name="T:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryContent">
            <summary>Shim type of Love.NativeLibraryUtil.LibraryContent</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryContent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryContent.#ctor(Love.NativeLibraryUtil.LibraryContent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryContent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryContent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryContent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryContent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryContent.ConstructorStringFuncOfByteArray">
            <summary>Sets the Shim of LibraryContent.LibraryContent(LibraryContent this, String fullPath, Func`1 libraryContentGenerator)</summary>
        </member>
        <member name="T:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryLoader">
            <summary>Shim type of Love.NativeLibraryUtil.LibraryLoader</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryLoader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryLoader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryLoader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryLoader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryLoader.GetFunctionAddrLoaderNativeLibraryUtilLibraryContentArrayNativeLibraryUtilINativeLibraryLoader">
            <summary>Sets the Shim of LibraryLoader.GetFunctionAddrLoader(LibraryContent[] libToLoad, INativeLibraryLoader loader)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryLoader.GetPlatformNativeLibraryUtilINativeLibraryLoaderOut">
            <summary>Sets the Shim of LibraryLoader.GetPlatform(INativeLibraryLoader* loader)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryLoader.LoadNativeLibraryUtilLibraryConfig">
            <summary>Sets the Shim of LibraryLoader.Load(LibraryConfig config)</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimLibraryLoader.TempFolderPrefixGet">
            <summary>Sets the Shim of LibraryLoader.get_TempFolderPrefix()</summary>
        </member>
        <member name="T:Love.Fakes.ShimNativeLibraryUtil.ShimPlatformDetecter">
            <summary>Shim type of Love.NativeLibraryUtil.PlatformDetecter</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.ShimPlatformDetecter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.ShimPlatformDetecter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimNativeLibraryUtil.ShimPlatformDetecter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimPlatformDetecter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimPlatformDetecter.DetectPlatform">
            <summary>Sets the Shim of PlatformDetecter.DetectPlatform()</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimPlatformDetecter.IsLinuxGet">
            <summary>Sets the Shim of PlatformDetecter.get_IsLinux()</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimPlatformDetecter.IsMacOsXGet">
            <summary>Sets the Shim of PlatformDetecter.get_IsMacOsX()</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimPlatformDetecter.IsWindowsGet">
            <summary>Sets the Shim of PlatformDetecter.get_IsWindows()</summary>
        </member>
        <member name="P:Love.Fakes.ShimNativeLibraryUtil.ShimPlatformDetecter.StaticConstructor">
            <summary>Sets the Shim of PlatformDetecter.PlatformDetecter()</summary>
        </member>
        <member name="T:Love.Fakes.ShimParticleSystem">
            <summary>Shim type of Love.ParticleSystem</summary>
        </member>
        <member name="M:Love.Fakes.ShimParticleSystem.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimParticleSystem.#ctor(Love.ParticleSystem)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimParticleSystem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.Clone">
            <summary>Sets the Shim of ParticleSystem.Clone(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.EmitInt32">
            <summary>Sets the Shim of ParticleSystem.Emit(ParticleSystem this, Int32 num)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetAreaSpreadAreaSpreadDistributionOutSingleOutSingleOut">
            <summary>Sets the Shim of ParticleSystem.GetAreaSpread(ParticleSystem this, AreaSpreadDistribution* out_distribution_type, Single* out_x, Single* out_y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetBufferSize">
            <summary>Sets the Shim of ParticleSystem.GetBufferSize(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetColors">
            <summary>Sets the Shim of ParticleSystem.GetColors(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetCount">
            <summary>Sets the Shim of ParticleSystem.GetCount(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetDirection">
            <summary>Sets the Shim of ParticleSystem.GetDirection(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetEmissionRate">
            <summary>Sets the Shim of ParticleSystem.GetEmissionRate(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetEmitterLifetime">
            <summary>Sets the Shim of ParticleSystem.GetEmitterLifetime(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetInsertMode">
            <summary>Sets the Shim of ParticleSystem.GetInsertMode(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetLinearAccelerationSingleOutSingleOutSingleOutSingleOut">
            <summary>Sets the Shim of ParticleSystem.GetLinearAcceleration(ParticleSystem this, Single* out_xmin, Single* out_ymin, Single* out_xmax, Single* out_ymax)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetLinearDampingInt32OutInt32Out">
            <summary>Sets the Shim of ParticleSystem.GetLinearDamping(ParticleSystem this, Int32* out_min, Int32* out_max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetOffset">
            <summary>Sets the Shim of ParticleSystem.GetOffset(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetOffsetSingleOutSingleOut">
            <summary>Sets the Shim of ParticleSystem.GetOffset(ParticleSystem this, Single* out_x, Single* out_y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetParticleLifetimeInt32OutInt32Out">
            <summary>Sets the Shim of ParticleSystem.GetParticleLifetime(ParticleSystem this, Int32* out_min, Int32* out_max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetPosition">
            <summary>Sets the Shim of ParticleSystem.GetPosition(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetQuads">
            <summary>Sets the Shim of ParticleSystem.GetQuads(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetRadialAccelerationInt32OutInt32Out">
            <summary>Sets the Shim of ParticleSystem.GetRadialAcceleration(ParticleSystem this, Int32* out_min, Int32* out_max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetRotationInt32OutInt32Out">
            <summary>Sets the Shim of ParticleSystem.GetRotation(ParticleSystem this, Int32* out_min, Int32* out_max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetSizeVariation">
            <summary>Sets the Shim of ParticleSystem.GetSizeVariation(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetSizes">
            <summary>Sets the Shim of ParticleSystem.GetSizes(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetSpeedSingleOutSingleOut">
            <summary>Sets the Shim of ParticleSystem.GetSpeed(ParticleSystem this, Single* out_min, Single* out_max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetSpinSingleOutSingleOut">
            <summary>Sets the Shim of ParticleSystem.GetSpin(ParticleSystem this, Single* out_start, Single* out_end)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetSpinVariation">
            <summary>Sets the Shim of ParticleSystem.GetSpinVariation(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetSpread">
            <summary>Sets the Shim of ParticleSystem.GetSpread(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetTangentialAccelerationInt32OutInt32Out">
            <summary>Sets the Shim of ParticleSystem.GetTangentialAcceleration(ParticleSystem this, Int32* out_min, Int32* out_max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.GetTexture">
            <summary>Sets the Shim of ParticleSystem.GetTexture(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.HasRelativeRotation">
            <summary>Sets the Shim of ParticleSystem.HasRelativeRotation(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.IsActive">
            <summary>Sets the Shim of ParticleSystem.IsActive(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.IsPaused">
            <summary>Sets the Shim of ParticleSystem.IsPaused(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.IsStopped">
            <summary>Sets the Shim of ParticleSystem.IsStopped(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.MoveToSingleSingle">
            <summary>Sets the Shim of ParticleSystem.MoveTo(ParticleSystem this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.Pause">
            <summary>Sets the Shim of ParticleSystem.Pause(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.Reset">
            <summary>Sets the Shim of ParticleSystem.Reset(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.SetBufferSizeUInt32">
            <summary>Sets the Shim of ParticleSystem.SetBufferSize(ParticleSystem this, UInt32 buffersize)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.SetColorsVector4Array">
            <summary>Sets the Shim of ParticleSystem.SetColors(ParticleSystem this, Vector4[] colorArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.SetDirectionSingle">
            <summary>Sets the Shim of ParticleSystem.SetDirection(ParticleSystem this, Single direction)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.SetEmissionAreaAreaSpreadDistributionSingleSingleSingleBoolean">
            <summary>Sets the Shim of ParticleSystem.SetEmissionArea(ParticleSystem this, AreaSpreadDistribution distribution, Single dx, Single dy, Single angle, Boolean directionRelativeToCenter)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.SetEmissionRateSingle">
            <summary>Sets the Shim of ParticleSystem.SetEmissionRate(ParticleSystem this, Single rate)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.SetEmitterLifetimeSingle">
            <summary>Sets the Shim of ParticleSystem.SetEmitterLifetime(ParticleSystem this, Single lifetime)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.SetInsertModeParticleInsertMode">
            <summary>Sets the Shim of ParticleSystem.SetInsertMode(ParticleSystem this, ParticleInsertMode mode_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.SetLinearAccelerationSingleSingleSingleSingle">
            <summary>Sets the Shim of ParticleSystem.SetLinearAcceleration(ParticleSystem this, Single xmin, Single ymin, Single xmax, Single ymax)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.SetLinearDampingSingleSingle">
            <summary>Sets the Shim of ParticleSystem.SetLinearDamping(ParticleSystem this, Single min, Single max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.SetOffsetSingleSingle">
            <summary>Sets the Shim of ParticleSystem.SetOffset(ParticleSystem this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.SetParticleLifetimeSingleSingle">
            <summary>Sets the Shim of ParticleSystem.SetParticleLifetime(ParticleSystem this, Single min, Single max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.SetPositionSingleSingle">
            <summary>Sets the Shim of ParticleSystem.SetPosition(ParticleSystem this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.SetQuadsQuadArray">
            <summary>Sets the Shim of ParticleSystem.SetQuads(ParticleSystem this, Quad[] quads)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.SetRadialAccelerationSingleSingle">
            <summary>Sets the Shim of ParticleSystem.SetRadialAcceleration(ParticleSystem this, Single min, Single max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.SetRelativeRotationBoolean">
            <summary>Sets the Shim of ParticleSystem.SetRelativeRotation(ParticleSystem this, Boolean enable)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.SetRotationSingleSingle">
            <summary>Sets the Shim of ParticleSystem.SetRotation(ParticleSystem this, Single min, Single max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.SetSizeVariationSingle">
            <summary>Sets the Shim of ParticleSystem.SetSizeVariation(ParticleSystem this, Single variation)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.SetSizesSingleArray">
            <summary>Sets the Shim of ParticleSystem.SetSizes(ParticleSystem this, Single[] sizeArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.SetSpeedSingleSingle">
            <summary>Sets the Shim of ParticleSystem.SetSpeed(ParticleSystem this, Single min, Single max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.SetSpinSingleSingle">
            <summary>Sets the Shim of ParticleSystem.SetSpin(ParticleSystem this, Single start, Single end)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.SetSpinVariationSingle">
            <summary>Sets the Shim of ParticleSystem.SetSpinVariation(ParticleSystem this, Single variation)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.SetSpreadSingle">
            <summary>Sets the Shim of ParticleSystem.SetSpread(ParticleSystem this, Single spread)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.SetTangentialAccelerationSingleSingle">
            <summary>Sets the Shim of ParticleSystem.SetTangentialAcceleration(ParticleSystem this, Single min, Single max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.SetTextureTexture">
            <summary>Sets the Shim of ParticleSystem.SetTexture(ParticleSystem this, Texture texture)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.Start">
            <summary>Sets the Shim of ParticleSystem.Start(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.Stop">
            <summary>Sets the Shim of ParticleSystem.Stop(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.AllInstances.UpdateSingle">
            <summary>Sets the Shim of ParticleSystem.Update(ParticleSystem this, Single dt)</summary>
        </member>
        <member name="M:Love.Fakes.ShimParticleSystem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimParticleSystem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimParticleSystem.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.Clone">
            <summary>Sets the Shim of ParticleSystem.Clone(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.Constructor">
            <summary>Sets the Shim of ParticleSystem.ParticleSystem(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.EmitInt32">
            <summary>Sets the Shim of ParticleSystem.Emit(ParticleSystem this, Int32 num)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.GetBufferSize">
            <summary>Sets the Shim of ParticleSystem.GetBufferSize(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.GetColors">
            <summary>Sets the Shim of ParticleSystem.GetColors(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.GetCount">
            <summary>Sets the Shim of ParticleSystem.GetCount(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.GetDirection">
            <summary>Sets the Shim of ParticleSystem.GetDirection(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.GetEmissionRate">
            <summary>Sets the Shim of ParticleSystem.GetEmissionRate(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.GetEmitterLifetime">
            <summary>Sets the Shim of ParticleSystem.GetEmitterLifetime(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.GetInsertMode">
            <summary>Sets the Shim of ParticleSystem.GetInsertMode(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.GetLinearDampingInt32OutInt32Out">
            <summary>Sets the Shim of ParticleSystem.GetLinearDamping(ParticleSystem this, Int32* out_min, Int32* out_max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.GetOffset">
            <summary>Sets the Shim of ParticleSystem.GetOffset(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.GetOffsetSingleOutSingleOut">
            <summary>Sets the Shim of ParticleSystem.GetOffset(ParticleSystem this, Single* out_x, Single* out_y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.GetParticleLifetimeInt32OutInt32Out">
            <summary>Sets the Shim of ParticleSystem.GetParticleLifetime(ParticleSystem this, Int32* out_min, Int32* out_max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.GetPosition">
            <summary>Sets the Shim of ParticleSystem.GetPosition(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.GetQuads">
            <summary>Sets the Shim of ParticleSystem.GetQuads(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.GetRadialAccelerationInt32OutInt32Out">
            <summary>Sets the Shim of ParticleSystem.GetRadialAcceleration(ParticleSystem this, Int32* out_min, Int32* out_max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.GetRotationInt32OutInt32Out">
            <summary>Sets the Shim of ParticleSystem.GetRotation(ParticleSystem this, Int32* out_min, Int32* out_max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.GetSizeVariation">
            <summary>Sets the Shim of ParticleSystem.GetSizeVariation(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.GetSizes">
            <summary>Sets the Shim of ParticleSystem.GetSizes(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.GetSpeedSingleOutSingleOut">
            <summary>Sets the Shim of ParticleSystem.GetSpeed(ParticleSystem this, Single* out_min, Single* out_max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.GetSpinSingleOutSingleOut">
            <summary>Sets the Shim of ParticleSystem.GetSpin(ParticleSystem this, Single* out_start, Single* out_end)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.GetSpinVariation">
            <summary>Sets the Shim of ParticleSystem.GetSpinVariation(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.GetSpread">
            <summary>Sets the Shim of ParticleSystem.GetSpread(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.GetTangentialAccelerationInt32OutInt32Out">
            <summary>Sets the Shim of ParticleSystem.GetTangentialAcceleration(ParticleSystem this, Int32* out_min, Int32* out_max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.GetTexture">
            <summary>Sets the Shim of ParticleSystem.GetTexture(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.HasRelativeRotation">
            <summary>Sets the Shim of ParticleSystem.HasRelativeRotation(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.IsActive">
            <summary>Sets the Shim of ParticleSystem.IsActive(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.IsPaused">
            <summary>Sets the Shim of ParticleSystem.IsPaused(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.IsStopped">
            <summary>Sets the Shim of ParticleSystem.IsStopped(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.MoveToSingleSingle">
            <summary>Sets the Shim of ParticleSystem.MoveTo(ParticleSystem this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.Pause">
            <summary>Sets the Shim of ParticleSystem.Pause(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.Reset">
            <summary>Sets the Shim of ParticleSystem.Reset(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.SetBufferSizeUInt32">
            <summary>Sets the Shim of ParticleSystem.SetBufferSize(ParticleSystem this, UInt32 buffersize)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.SetColorsVector4Array">
            <summary>Sets the Shim of ParticleSystem.SetColors(ParticleSystem this, Vector4[] colorArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.SetDirectionSingle">
            <summary>Sets the Shim of ParticleSystem.SetDirection(ParticleSystem this, Single direction)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.SetEmissionAreaAreaSpreadDistributionSingleSingleSingleBoolean">
            <summary>Sets the Shim of ParticleSystem.SetEmissionArea(ParticleSystem this, AreaSpreadDistribution distribution, Single dx, Single dy, Single angle, Boolean directionRelativeToCenter)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.SetEmissionRateSingle">
            <summary>Sets the Shim of ParticleSystem.SetEmissionRate(ParticleSystem this, Single rate)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.SetEmitterLifetimeSingle">
            <summary>Sets the Shim of ParticleSystem.SetEmitterLifetime(ParticleSystem this, Single lifetime)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.SetInsertModeParticleInsertMode">
            <summary>Sets the Shim of ParticleSystem.SetInsertMode(ParticleSystem this, ParticleInsertMode mode_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.SetLinearAccelerationSingleSingleSingleSingle">
            <summary>Sets the Shim of ParticleSystem.SetLinearAcceleration(ParticleSystem this, Single xmin, Single ymin, Single xmax, Single ymax)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.SetLinearDampingSingleSingle">
            <summary>Sets the Shim of ParticleSystem.SetLinearDamping(ParticleSystem this, Single min, Single max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.SetOffsetSingleSingle">
            <summary>Sets the Shim of ParticleSystem.SetOffset(ParticleSystem this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.SetParticleLifetimeSingleSingle">
            <summary>Sets the Shim of ParticleSystem.SetParticleLifetime(ParticleSystem this, Single min, Single max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.SetPositionSingleSingle">
            <summary>Sets the Shim of ParticleSystem.SetPosition(ParticleSystem this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.SetQuadsQuadArray">
            <summary>Sets the Shim of ParticleSystem.SetQuads(ParticleSystem this, Quad[] quads)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.SetRadialAccelerationSingleSingle">
            <summary>Sets the Shim of ParticleSystem.SetRadialAcceleration(ParticleSystem this, Single min, Single max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.SetRelativeRotationBoolean">
            <summary>Sets the Shim of ParticleSystem.SetRelativeRotation(ParticleSystem this, Boolean enable)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.SetRotationSingleSingle">
            <summary>Sets the Shim of ParticleSystem.SetRotation(ParticleSystem this, Single min, Single max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.SetSizeVariationSingle">
            <summary>Sets the Shim of ParticleSystem.SetSizeVariation(ParticleSystem this, Single variation)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.SetSizesSingleArray">
            <summary>Sets the Shim of ParticleSystem.SetSizes(ParticleSystem this, Single[] sizeArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.SetSpeedSingleSingle">
            <summary>Sets the Shim of ParticleSystem.SetSpeed(ParticleSystem this, Single min, Single max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.SetSpinSingleSingle">
            <summary>Sets the Shim of ParticleSystem.SetSpin(ParticleSystem this, Single start, Single end)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.SetSpinVariationSingle">
            <summary>Sets the Shim of ParticleSystem.SetSpinVariation(ParticleSystem this, Single variation)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.SetSpreadSingle">
            <summary>Sets the Shim of ParticleSystem.SetSpread(ParticleSystem this, Single spread)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.SetTangentialAccelerationSingleSingle">
            <summary>Sets the Shim of ParticleSystem.SetTangentialAcceleration(ParticleSystem this, Single min, Single max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.SetTextureTexture">
            <summary>Sets the Shim of ParticleSystem.SetTexture(ParticleSystem this, Texture texture)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.Start">
            <summary>Sets the Shim of ParticleSystem.Start(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.Stop">
            <summary>Sets the Shim of ParticleSystem.Stop(ParticleSystem this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimParticleSystem.UpdateSingle">
            <summary>Sets the Shim of ParticleSystem.Update(ParticleSystem this, Single dt)</summary>
        </member>
        <member name="T:Love.Fakes.ShimPhysics">
            <summary>Shim type of Love.Physics</summary>
        </member>
        <member name="M:Love.Fakes.ShimPhysics.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimPhysics.#ctor(Love.Physics)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimPhysics.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimPhysics.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimPhysics.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimPhysics.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.Constructor">
            <summary>Sets the Shim of Physics.Physics(Physics this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.GetDistanceFixtureFixtureSingleOutVector2OutVector2Out">
            <summary>Sets the Shim of Physics.GetDistance(Fixture fa, Fixture fb, Single* distance, Vector2* pa, Vector2* pb)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.GetMeter">
            <summary>Sets the Shim of Physics.GetMeter()</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.Init">
            <summary>Sets the Shim of Physics.Init()</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewBodyWorldSingleSingleBodyType">
            <summary>Sets the Shim of Physics.NewBody(World world, Single x, Single y, BodyType bodyType)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewChainShapeBooleanVector2Array">
            <summary>Sets the Shim of Physics.NewChainShape(Boolean loop, Vector2[] pointList)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewCircleShapeSingle">
            <summary>Sets the Shim of Physics.NewCircleShape(Single radius)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewCircleShapeSingleSingleSingle">
            <summary>Sets the Shim of Physics.NewCircleShape(Single x, Single y, Single radius)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewDistanceJointBodyBodySingleSingleSingleSingleBoolean">
            <summary>Sets the Shim of Physics.NewDistanceJoint(Body body1, Body body2, Single x1, Single y1, Single x2, Single y2, Boolean collideConnected)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewEdgeShapeSingleSingleSingleSingle">
            <summary>Sets the Shim of Physics.NewEdgeShape(Single x1, Single y1, Single x2, Single y2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewEdgeShapeVector2Vector2">
            <summary>Sets the Shim of Physics.NewEdgeShape(Vector2 p1, Vector2 p2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewFixtureBodyShapeSingle">
            <summary>Sets the Shim of Physics.NewFixture(Body body, Shape shape, Single density)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewFrictionJointBodyBodyVector2Vector2Boolean">
            <summary>Sets the Shim of Physics.NewFrictionJoint(Body body1, Body body2, Vector2 pA, Vector2 pB, Boolean collideConnected)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewGearJointJointJointSingleBoolean">
            <summary>Sets the Shim of Physics.NewGearJoint(Joint joint1, Joint joint2, Single ratio, Boolean collideConnected)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewMotorJointBodyBodySingleBoolean">
            <summary>Sets the Shim of Physics.NewMotorJoint(Body body1, Body body2, Single correctionFactor, Boolean collideConnected)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewMouseJointBodySingleSingle">
            <summary>Sets the Shim of Physics.NewMouseJoint(Body body, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewMouseJointBodyVector2">
            <summary>Sets the Shim of Physics.NewMouseJoint(Body body, Vector2 pos)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewPolygonShapeVector2Array">
            <summary>Sets the Shim of Physics.NewPolygonShape(Vector2[] pointList)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewPrismaticJointBodyBodyVector2Vector2Vector2Boolean">
            <summary>Sets the Shim of Physics.NewPrismaticJoint(Body body1, Body body2, Vector2 pA, Vector2 pB, Vector2 angle, Boolean collideConnected)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewPrismaticJointBodyBodyVector2Vector2Vector2BooleanSingle">
            <summary>Sets the Shim of Physics.NewPrismaticJoint(Body body1, Body body2, Vector2 pA, Vector2 pB, Vector2 angle, Boolean collideConnected, Single referenceAngle)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewPulleyJointBodyBodyVector2Vector2Vector2Vector2SingleBoolean">
            <summary>Sets the Shim of Physics.NewPulleyJoint(Body body1, Body body2, Vector2 g1, Vector2 g2, Vector2 pA, Vector2 pB, Single ratio, Boolean collideConnected)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewRectangleShapeSingleSingle">
            <summary>Sets the Shim of Physics.NewRectangleShape(Single w, Single h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewRectangleShapeSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Physics.NewRectangleShape(Single x, Single y, Single w, Single h, Single angle)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewRevoluteJointBodyBodyVector2Boolean">
            <summary>Sets the Shim of Physics.NewRevoluteJoint(Body body1, Body body2, Vector2 pos, Boolean collideConnected)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewRevoluteJointBodyBodyVector2Vector2Boolean">
            <summary>Sets the Shim of Physics.NewRevoluteJoint(Body body1, Body body2, Vector2 pA, Vector2 pB, Boolean collideConnected)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewRevoluteJointBodyBodyVector2Vector2BooleanSingle">
            <summary>Sets the Shim of Physics.NewRevoluteJoint(Body body1, Body body2, Vector2 pA, Vector2 pB, Boolean collideConnected, Single referenceAngle)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewRopeJointBodyBodyVector2Vector2SingleBoolean">
            <summary>Sets the Shim of Physics.NewRopeJoint(Body body1, Body body2, Vector2 pA, Vector2 pB, Single maxLength, Boolean collideConnected)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewWeldJointBodyBodyVector2Vector2Boolean">
            <summary>Sets the Shim of Physics.NewWeldJoint(Body body1, Body body2, Vector2 pA, Vector2 pB, Boolean collideConnected)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewWeldJointBodyBodyVector2Vector2BooleanSingle">
            <summary>Sets the Shim of Physics.NewWeldJoint(Body body1, Body body2, Vector2 pA, Vector2 pB, Boolean collideConnected, Single referenceAngle)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewWheelJointBodyBodyVector2Vector2Vector2Boolean">
            <summary>Sets the Shim of Physics.NewWheelJoint(Body body1, Body body2, Vector2 pA, Vector2 pB, Vector2 angle, Boolean collideConnected)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.NewWorldSingleSingleBoolean">
            <summary>Sets the Shim of Physics.NewWorld(Single gx, Single gy, Boolean sleep)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPhysics.SetMeterSingle">
            <summary>Sets the Shim of Physics.SetMeter(Single meter)</summary>
        </member>
        <member name="T:Love.Fakes.ShimPoint">
            <summary>Shim type of Love.Point</summary>
        </member>
        <member name="M:Love.Fakes.ShimPoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:Love.Fakes.ShimPoint.AddPointSize">
            <summary>Sets the Shim of Point.Add(Point pt, Size sz)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPoint.AdditionOpPointSize">
            <summary>Sets the Shim of Point.op_Addition(Point pt, Size sz)</summary>
        </member>
        <member name="T:Love.Fakes.ShimPoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimPoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimPoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimPoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimPoint.CeilingVector2">
            <summary>Sets the Shim of Point.Ceiling(Vector2 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPoint.EqualityOpPointPoint">
            <summary>Sets the Shim of Point.op_Equality(Point left, Point right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPoint.ExplicitOpPointSize">
            <summary>Sets the Shim of Point.op_Explicit(Point p)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPoint.HighInt16Int32">
            <summary>Sets the Shim of Point.HighInt16(Int32 n)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPoint.ImplicitOpPointVector2">
            <summary>Sets the Shim of Point.op_Implicit(Point p)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPoint.InequalityOpPointPoint">
            <summary>Sets the Shim of Point.op_Inequality(Point left, Point right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPoint.LowInt16Int32">
            <summary>Sets the Shim of Point.LowInt16(Int32 n)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPoint.RoundVector2">
            <summary>Sets the Shim of Point.Round(Vector2 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPoint.StaticConstructor">
            <summary>Sets the Shim of Point.Point()</summary>
        </member>
        <member name="P:Love.Fakes.ShimPoint.SubtractPointSize">
            <summary>Sets the Shim of Point.Subtract(Point pt, Size sz)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPoint.SubtractionOpPointSize">
            <summary>Sets the Shim of Point.op_Subtraction(Point pt, Size sz)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPoint.TruncateVector2">
            <summary>Sets the Shim of Point.Truncate(Vector2 value)</summary>
        </member>
        <member name="T:Love.Fakes.ShimPolygonShape">
            <summary>Shim type of Love.PolygonShape</summary>
        </member>
        <member name="M:Love.Fakes.ShimPolygonShape.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimPolygonShape.#ctor(Love.PolygonShape)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimPolygonShape.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimPolygonShape.AllInstances.GetPoints">
            <summary>Sets the Shim of PolygonShape.GetPoints(PolygonShape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPolygonShape.AllInstances.Validate">
            <summary>Sets the Shim of PolygonShape.Validate(PolygonShape this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimPolygonShape.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimPolygonShape.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimPolygonShape.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimPolygonShape.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimPolygonShape.Constructor">
            <summary>Sets the Shim of PolygonShape.PolygonShape(PolygonShape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPolygonShape.GetPoints">
            <summary>Sets the Shim of PolygonShape.GetPoints(PolygonShape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPolygonShape.Validate">
            <summary>Sets the Shim of PolygonShape.Validate(PolygonShape this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimPrismaticJoint">
            <summary>Shim type of Love.PrismaticJoint</summary>
        </member>
        <member name="M:Love.Fakes.ShimPrismaticJoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimPrismaticJoint.#ctor(Love.PrismaticJoint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimPrismaticJoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.AllInstances.AreLimitsEnabled">
            <summary>Sets the Shim of PrismaticJoint.AreLimitsEnabled(PrismaticJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.AllInstances.GetAxisSingleOutSingleOut">
            <summary>Sets the Shim of PrismaticJoint.GetAxis(PrismaticJoint this, Single* axisX, Single* axisY)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.AllInstances.GetJointSpeed">
            <summary>Sets the Shim of PrismaticJoint.GetJointSpeed(PrismaticJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.AllInstances.GetJointTranslation">
            <summary>Sets the Shim of PrismaticJoint.GetJointTranslation(PrismaticJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.AllInstances.GetLimitsSingleOutSingleOut">
            <summary>Sets the Shim of PrismaticJoint.GetLimits(PrismaticJoint this, Single* lowerLimit, Single* upperLimit)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.AllInstances.GetLowerLimit">
            <summary>Sets the Shim of PrismaticJoint.GetLowerLimit(PrismaticJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.AllInstances.GetMaxMotorForce">
            <summary>Sets the Shim of PrismaticJoint.GetMaxMotorForce(PrismaticJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.AllInstances.GetMotorForceSingle">
            <summary>Sets the Shim of PrismaticJoint.GetMotorForce(PrismaticJoint this, Single inv_dt)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.AllInstances.GetMotorSpeed">
            <summary>Sets the Shim of PrismaticJoint.GetMotorSpeed(PrismaticJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.AllInstances.GetReferenceAngle">
            <summary>Sets the Shim of PrismaticJoint.GetReferenceAngle(PrismaticJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.AllInstances.GetUpperLimit">
            <summary>Sets the Shim of PrismaticJoint.GetUpperLimit(PrismaticJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.AllInstances.IsMotorEnabled">
            <summary>Sets the Shim of PrismaticJoint.IsMotorEnabled(PrismaticJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.AllInstances.SetLimitsEnabledBoolean">
            <summary>Sets the Shim of PrismaticJoint.SetLimitsEnabled(PrismaticJoint this, Boolean enabled)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.AllInstances.SetLimitsSingleSingle">
            <summary>Sets the Shim of PrismaticJoint.SetLimits(PrismaticJoint this, Single lowerLimit, Single upperLimit)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.AllInstances.SetLowerLimitSingle">
            <summary>Sets the Shim of PrismaticJoint.SetLowerLimit(PrismaticJoint this, Single limit)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.AllInstances.SetMaxMotorForceSingle">
            <summary>Sets the Shim of PrismaticJoint.SetMaxMotorForce(PrismaticJoint this, Single force)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.AllInstances.SetMotorEnabledBoolean">
            <summary>Sets the Shim of PrismaticJoint.SetMotorEnabled(PrismaticJoint this, Boolean ebabled)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.AllInstances.SetMotorSpeedSingle">
            <summary>Sets the Shim of PrismaticJoint.SetMotorSpeed(PrismaticJoint this, Single speed)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.AllInstances.SetUpperLimitSingle">
            <summary>Sets the Shim of PrismaticJoint.SetUpperLimit(PrismaticJoint this, Single limit)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.AreLimitsEnabled">
            <summary>Sets the Shim of PrismaticJoint.AreLimitsEnabled(PrismaticJoint this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimPrismaticJoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimPrismaticJoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimPrismaticJoint.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.Constructor">
            <summary>Sets the Shim of PrismaticJoint.PrismaticJoint(PrismaticJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.GetAxisSingleOutSingleOut">
            <summary>Sets the Shim of PrismaticJoint.GetAxis(PrismaticJoint this, Single* axisX, Single* axisY)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.GetJointSpeed">
            <summary>Sets the Shim of PrismaticJoint.GetJointSpeed(PrismaticJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.GetJointTranslation">
            <summary>Sets the Shim of PrismaticJoint.GetJointTranslation(PrismaticJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.GetLimitsSingleOutSingleOut">
            <summary>Sets the Shim of PrismaticJoint.GetLimits(PrismaticJoint this, Single* lowerLimit, Single* upperLimit)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.GetLowerLimit">
            <summary>Sets the Shim of PrismaticJoint.GetLowerLimit(PrismaticJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.GetMaxMotorForce">
            <summary>Sets the Shim of PrismaticJoint.GetMaxMotorForce(PrismaticJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.GetMotorForceSingle">
            <summary>Sets the Shim of PrismaticJoint.GetMotorForce(PrismaticJoint this, Single inv_dt)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.GetMotorSpeed">
            <summary>Sets the Shim of PrismaticJoint.GetMotorSpeed(PrismaticJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.GetReferenceAngle">
            <summary>Sets the Shim of PrismaticJoint.GetReferenceAngle(PrismaticJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.GetUpperLimit">
            <summary>Sets the Shim of PrismaticJoint.GetUpperLimit(PrismaticJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.IsMotorEnabled">
            <summary>Sets the Shim of PrismaticJoint.IsMotorEnabled(PrismaticJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.SetLimitsEnabledBoolean">
            <summary>Sets the Shim of PrismaticJoint.SetLimitsEnabled(PrismaticJoint this, Boolean enabled)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.SetLimitsSingleSingle">
            <summary>Sets the Shim of PrismaticJoint.SetLimits(PrismaticJoint this, Single lowerLimit, Single upperLimit)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.SetLowerLimitSingle">
            <summary>Sets the Shim of PrismaticJoint.SetLowerLimit(PrismaticJoint this, Single limit)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.SetMaxMotorForceSingle">
            <summary>Sets the Shim of PrismaticJoint.SetMaxMotorForce(PrismaticJoint this, Single force)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.SetMotorEnabledBoolean">
            <summary>Sets the Shim of PrismaticJoint.SetMotorEnabled(PrismaticJoint this, Boolean ebabled)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.SetMotorSpeedSingle">
            <summary>Sets the Shim of PrismaticJoint.SetMotorSpeed(PrismaticJoint this, Single speed)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPrismaticJoint.SetUpperLimitSingle">
            <summary>Sets the Shim of PrismaticJoint.SetUpperLimit(PrismaticJoint this, Single limit)</summary>
        </member>
        <member name="T:Love.Fakes.ShimPulleyJoint">
            <summary>Shim type of Love.PulleyJoint</summary>
        </member>
        <member name="M:Love.Fakes.ShimPulleyJoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimPulleyJoint.#ctor(Love.PulleyJoint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimPulleyJoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimPulleyJoint.AllInstances.GetGroundAnchorsSingleOutSingleOutSingleOutSingleOut">
            <summary>Sets the Shim of PulleyJoint.GetGroundAnchors(PulleyJoint this, Single* x1, Single* y1, Single* x2, Single* y2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPulleyJoint.AllInstances.GetGroundAnchorsVector2OutVector2Out">
            <summary>Sets the Shim of PulleyJoint.GetGroundAnchors(PulleyJoint this, Vector2* p1, Vector2* p2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPulleyJoint.AllInstances.GetLengthA">
            <summary>Sets the Shim of PulleyJoint.GetLengthA(PulleyJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPulleyJoint.AllInstances.GetLengthB">
            <summary>Sets the Shim of PulleyJoint.GetLengthB(PulleyJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPulleyJoint.AllInstances.GetRatio">
            <summary>Sets the Shim of PulleyJoint.GetRatio(PulleyJoint this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimPulleyJoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimPulleyJoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimPulleyJoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimPulleyJoint.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimPulleyJoint.Constructor">
            <summary>Sets the Shim of PulleyJoint.PulleyJoint(PulleyJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPulleyJoint.GetGroundAnchorsVector2OutVector2Out">
            <summary>Sets the Shim of PulleyJoint.GetGroundAnchors(PulleyJoint this, Vector2* p1, Vector2* p2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPulleyJoint.GetLengthA">
            <summary>Sets the Shim of PulleyJoint.GetLengthA(PulleyJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPulleyJoint.GetLengthB">
            <summary>Sets the Shim of PulleyJoint.GetLengthB(PulleyJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimPulleyJoint.GetRatio">
            <summary>Sets the Shim of PulleyJoint.GetRatio(PulleyJoint this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimQuad">
            <summary>Shim type of Love.Quad</summary>
        </member>
        <member name="M:Love.Fakes.ShimQuad.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimQuad.#ctor(Love.Quad)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimQuad.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuad.AllInstances.GetTextureDimensions">
            <summary>Sets the Shim of Quad.GetTextureDimensions(Quad this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuad.AllInstances.GetTextureDimensionsSingleOutSingleOut">
            <summary>Sets the Shim of Quad.GetTextureDimensions(Quad this, Single* out_sw, Single* out_sh)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuad.AllInstances.GetViewport">
            <summary>Sets the Shim of Quad.GetViewport(Quad this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuad.AllInstances.GetViewportSingleOutSingleOutSingleOutSingleOut">
            <summary>Sets the Shim of Quad.GetViewport(Quad this, Single* out_x, Single* out_y, Single* out_w, Single* out_h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuad.AllInstances.SetViewportRectangleF">
            <summary>Sets the Shim of Quad.SetViewport(Quad this, RectangleF r)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuad.AllInstances.SetViewportSingleSingleSingleSingle">
            <summary>Sets the Shim of Quad.SetViewport(Quad this, Single x, Single y, Single w, Single h)</summary>
        </member>
        <member name="M:Love.Fakes.ShimQuad.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimQuad.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuad.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimQuad.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuad.Constructor">
            <summary>Sets the Shim of Quad.Quad(Quad this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuad.GetTextureDimensions">
            <summary>Sets the Shim of Quad.GetTextureDimensions(Quad this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuad.GetTextureDimensionsSingleOutSingleOut">
            <summary>Sets the Shim of Quad.GetTextureDimensions(Quad this, Single* out_sw, Single* out_sh)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuad.GetViewport">
            <summary>Sets the Shim of Quad.GetViewport(Quad this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuad.SetViewportRectangleF">
            <summary>Sets the Shim of Quad.SetViewport(Quad this, RectangleF r)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuad.SetViewportSingleSingleSingleSingle">
            <summary>Sets the Shim of Quad.SetViewport(Quad this, Single x, Single y, Single w, Single h)</summary>
        </member>
        <member name="T:Love.Fakes.ShimQuaternion">
            <summary>Shim type of Love.Quaternion</summary>
        </member>
        <member name="M:Love.Fakes.ShimQuaternion.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.AddQuaternionQuaternion">
            <summary>Sets the Shim of Quaternion.Add(Quaternion left, Quaternion right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.AddQuaternionRefQuaternionRefQuaternionOut">
            <summary>Sets the Shim of Quaternion.Add(Quaternion* left, Quaternion* right, Quaternion* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.AdditionOpQuaternionQuaternion">
            <summary>Sets the Shim of Quaternion.op_Addition(Quaternion left, Quaternion right)</summary>
        </member>
        <member name="T:Love.Fakes.ShimQuaternion.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.BarycentricQuaternionQuaternionQuaternionSingleSingle">
            <summary>Sets the Shim of Quaternion.Barycentric(Quaternion value1, Quaternion value2, Quaternion value3, Single amount1, Single amount2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.BarycentricQuaternionRefQuaternionRefQuaternionRefSingleSingleQuaternionOut">
            <summary>Sets the Shim of Quaternion.Barycentric(Quaternion* value1, Quaternion* value2, Quaternion* value3, Single amount1, Single amount2, Quaternion* result)</summary>
        </member>
        <member name="M:Love.Fakes.ShimQuaternion.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimQuaternion.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.BillboardLHVector3RefVector3RefVector3RefVector3RefQuaternionOut">
            <summary>Sets the Shim of Quaternion.BillboardLH(Vector3* objectPosition, Vector3* cameraPosition, Vector3* cameraUpVector, Vector3* cameraForwardVector, Quaternion* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.BillboardLHVector3Vector3Vector3Vector3">
            <summary>Sets the Shim of Quaternion.BillboardLH(Vector3 objectPosition, Vector3 cameraPosition, Vector3 cameraUpVector, Vector3 cameraForwardVector)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.BillboardRHVector3RefVector3RefVector3RefVector3RefQuaternionOut">
            <summary>Sets the Shim of Quaternion.BillboardRH(Vector3* objectPosition, Vector3* cameraPosition, Vector3* cameraUpVector, Vector3* cameraForwardVector, Quaternion* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.BillboardRHVector3Vector3Vector3Vector3">
            <summary>Sets the Shim of Quaternion.BillboardRH(Vector3 objectPosition, Vector3 cameraPosition, Vector3 cameraUpVector, Vector3 cameraForwardVector)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.ConjugateQuaternion">
            <summary>Sets the Shim of Quaternion.Conjugate(Quaternion value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.ConjugateQuaternionRefQuaternionOut">
            <summary>Sets the Shim of Quaternion.Conjugate(Quaternion* value, Quaternion* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.DotQuaternionQuaternion">
            <summary>Sets the Shim of Quaternion.Dot(Quaternion left, Quaternion right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.DotQuaternionRefQuaternionRefSingleOut">
            <summary>Sets the Shim of Quaternion.Dot(Quaternion* left, Quaternion* right, Single* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.EqualityOpQuaternionQuaternion">
            <summary>Sets the Shim of Quaternion.op_Equality(Quaternion left, Quaternion right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.ExponentialQuaternion">
            <summary>Sets the Shim of Quaternion.Exponential(Quaternion value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.ExponentialQuaternionRefQuaternionOut">
            <summary>Sets the Shim of Quaternion.Exponential(Quaternion* value, Quaternion* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.InequalityOpQuaternionQuaternion">
            <summary>Sets the Shim of Quaternion.op_Inequality(Quaternion left, Quaternion right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.InvertQuaternion">
            <summary>Sets the Shim of Quaternion.Invert(Quaternion value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.InvertQuaternionRefQuaternionOut">
            <summary>Sets the Shim of Quaternion.Invert(Quaternion* value, Quaternion* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.LerpQuaternionQuaternionSingle">
            <summary>Sets the Shim of Quaternion.Lerp(Quaternion start, Quaternion end, Single amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.LerpQuaternionRefQuaternionRefSingleQuaternionOut">
            <summary>Sets the Shim of Quaternion.Lerp(Quaternion* start, Quaternion* end, Single amount, Quaternion* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.LogarithmQuaternion">
            <summary>Sets the Shim of Quaternion.Logarithm(Quaternion value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.LogarithmQuaternionRefQuaternionOut">
            <summary>Sets the Shim of Quaternion.Logarithm(Quaternion* value, Quaternion* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.LookAtLHVector3RefVector3RefVector3RefQuaternionOut">
            <summary>Sets the Shim of Quaternion.LookAtLH(Vector3* eye, Vector3* target, Vector3* up, Quaternion* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.LookAtLHVector3Vector3Vector3">
            <summary>Sets the Shim of Quaternion.LookAtLH(Vector3 eye, Vector3 target, Vector3 up)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.LookAtRHVector3RefVector3RefVector3RefQuaternionOut">
            <summary>Sets the Shim of Quaternion.LookAtRH(Vector3* eye, Vector3* target, Vector3* up, Quaternion* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.LookAtRHVector3Vector3Vector3">
            <summary>Sets the Shim of Quaternion.LookAtRH(Vector3 eye, Vector3 target, Vector3 up)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.MultiplyOpQuaternionQuaternion">
            <summary>Sets the Shim of Quaternion.op_Multiply(Quaternion left, Quaternion right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.MultiplyOpQuaternionSingle">
            <summary>Sets the Shim of Quaternion.op_Multiply(Quaternion value, Single scale)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.MultiplyOpSingleQuaternion">
            <summary>Sets the Shim of Quaternion.op_Multiply(Single scale, Quaternion value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.MultiplyQuaternionQuaternion">
            <summary>Sets the Shim of Quaternion.Multiply(Quaternion left, Quaternion right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.MultiplyQuaternionRefQuaternionRefQuaternionOut">
            <summary>Sets the Shim of Quaternion.Multiply(Quaternion* left, Quaternion* right, Quaternion* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.MultiplyQuaternionRefSingleQuaternionOut">
            <summary>Sets the Shim of Quaternion.Multiply(Quaternion* value, Single scale, Quaternion* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.MultiplyQuaternionSingle">
            <summary>Sets the Shim of Quaternion.Multiply(Quaternion value, Single scale)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.NegateQuaternion">
            <summary>Sets the Shim of Quaternion.Negate(Quaternion value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.NegateQuaternionRefQuaternionOut">
            <summary>Sets the Shim of Quaternion.Negate(Quaternion* value, Quaternion* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.NormalizeQuaternion">
            <summary>Sets the Shim of Quaternion.Normalize(Quaternion value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.NormalizeQuaternionRefQuaternionOut">
            <summary>Sets the Shim of Quaternion.Normalize(Quaternion* value, Quaternion* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.RotationAxisVector3RefSingleQuaternionOut">
            <summary>Sets the Shim of Quaternion.RotationAxis(Vector3* axis, Single angle, Quaternion* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.RotationAxisVector3Single">
            <summary>Sets the Shim of Quaternion.RotationAxis(Vector3 axis, Single angle)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.RotationLookAtLHVector3RefVector3RefQuaternionOut">
            <summary>Sets the Shim of Quaternion.RotationLookAtLH(Vector3* forward, Vector3* up, Quaternion* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.RotationLookAtLHVector3Vector3">
            <summary>Sets the Shim of Quaternion.RotationLookAtLH(Vector3 forward, Vector3 up)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.RotationLookAtRHVector3RefVector3RefQuaternionOut">
            <summary>Sets the Shim of Quaternion.RotationLookAtRH(Vector3* forward, Vector3* up, Quaternion* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.RotationLookAtRHVector3Vector3">
            <summary>Sets the Shim of Quaternion.RotationLookAtRH(Vector3 forward, Vector3 up)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.RotationMatrixMatrix33RefQuaternionOut">
            <summary>Sets the Shim of Quaternion.RotationMatrix(Matrix33* matrix, Quaternion* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.RotationMatrixMatrix44">
            <summary>Sets the Shim of Quaternion.RotationMatrix(Matrix44 matrix)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.RotationMatrixMatrix44RefQuaternionOut">
            <summary>Sets the Shim of Quaternion.RotationMatrix(Matrix44* matrix, Quaternion* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.RotationYawPitchRollSingleSingleSingle">
            <summary>Sets the Shim of Quaternion.RotationYawPitchRoll(Single yaw, Single pitch, Single roll)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.RotationYawPitchRollSingleSingleSingleQuaternionOut">
            <summary>Sets the Shim of Quaternion.RotationYawPitchRoll(Single yaw, Single pitch, Single roll, Quaternion* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.SlerpQuaternionQuaternionSingle">
            <summary>Sets the Shim of Quaternion.Slerp(Quaternion start, Quaternion end, Single amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.SlerpQuaternionRefQuaternionRefSingleQuaternionOut">
            <summary>Sets the Shim of Quaternion.Slerp(Quaternion* start, Quaternion* end, Single amount, Quaternion* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.SquadQuaternionQuaternionQuaternionQuaternionSingle">
            <summary>Sets the Shim of Quaternion.Squad(Quaternion value1, Quaternion value2, Quaternion value3, Quaternion value4, Single amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.SquadQuaternionRefQuaternionRefQuaternionRefQuaternionRefSingleQuaternionOut">
            <summary>Sets the Shim of Quaternion.Squad(Quaternion* value1, Quaternion* value2, Quaternion* value3, Quaternion* value4, Single amount, Quaternion* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.SquadSetupQuaternionQuaternionQuaternionQuaternion">
            <summary>Sets the Shim of Quaternion.SquadSetup(Quaternion value1, Quaternion value2, Quaternion value3, Quaternion value4)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.StaticConstructor">
            <summary>Sets the Shim of Quaternion.Quaternion()</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.SubtractQuaternionQuaternion">
            <summary>Sets the Shim of Quaternion.Subtract(Quaternion left, Quaternion right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.SubtractQuaternionRefQuaternionRefQuaternionOut">
            <summary>Sets the Shim of Quaternion.Subtract(Quaternion* left, Quaternion* right, Quaternion* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.SubtractionOpQuaternionQuaternion">
            <summary>Sets the Shim of Quaternion.op_Subtraction(Quaternion left, Quaternion right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.ToMatrixQuaternion">
            <summary>Sets the Shim of Quaternion.ToMatrix(Quaternion q)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.ToMatrixQuaternionRef">
            <summary>Sets the Shim of Quaternion.ToMatrix(Quaternion* q)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.ToMatrixQuaternionRefMatrix44Out">
            <summary>Sets the Shim of Quaternion.ToMatrix(Quaternion* q, Matrix44* m)</summary>
        </member>
        <member name="P:Love.Fakes.ShimQuaternion.UnaryNegationOpQuaternion">
            <summary>Sets the Shim of Quaternion.op_UnaryNegation(Quaternion value)</summary>
        </member>
        <member name="T:Love.Fakes.ShimRGBA16F">
            <summary>Shim type of Love.RGBA16F</summary>
        </member>
        <member name="M:Love.Fakes.ShimRGBA16F.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimRGBA16F.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimRGBA16F.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimRGBA16F.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimRGBA16F.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Love.Fakes.ShimRGBA16I">
            <summary>Shim type of Love.RGBA16I</summary>
        </member>
        <member name="M:Love.Fakes.ShimRGBA16I.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimRGBA16I.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimRGBA16I.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimRGBA16I.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimRGBA16I.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Love.Fakes.ShimRGBA32F">
            <summary>Shim type of Love.RGBA32F</summary>
        </member>
        <member name="M:Love.Fakes.ShimRGBA32F.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimRGBA32F.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimRGBA32F.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimRGBA32F.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimRGBA32F.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Love.Fakes.ShimRGBA8I">
            <summary>Shim type of Love.RGBA8I</summary>
        </member>
        <member name="M:Love.Fakes.ShimRGBA8I.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimRGBA8I.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimRGBA8I.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimRGBA8I.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimRGBA8I.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Love.Fakes.ShimRandomGenerator">
            <summary>Shim type of Love.RandomGenerator</summary>
        </member>
        <member name="M:Love.Fakes.ShimRandomGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimRandomGenerator.#ctor(Love.RandomGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimRandomGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimRandomGenerator.AllInstances.GetSeed">
            <summary>Sets the Shim of RandomGenerator.GetSeed(RandomGenerator this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRandomGenerator.AllInstances.GetSeedUInt32OutUInt32Out">
            <summary>Sets the Shim of RandomGenerator.GetSeed(RandomGenerator this, UInt32* out_low, UInt32* out_high)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRandomGenerator.AllInstances.GetState">
            <summary>Sets the Shim of RandomGenerator.GetState(RandomGenerator this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRandomGenerator.AllInstances.Random">
            <summary>Sets the Shim of RandomGenerator.Random(RandomGenerator this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRandomGenerator.AllInstances.RandomInt32Int32">
            <summary>Sets the Shim of RandomGenerator.Random(RandomGenerator this, Int32 min, Int32 max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRandomGenerator.AllInstances.RandomNormalDoubleDouble">
            <summary>Sets the Shim of RandomGenerator.RandomNormal(RandomGenerator this, Double stddev, Double mean)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRandomGenerator.AllInstances.RandomSingleSingle">
            <summary>Sets the Shim of RandomGenerator.Random(RandomGenerator this, Single min, Single max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRandomGenerator.AllInstances.SetSeedInt64">
            <summary>Sets the Shim of RandomGenerator.SetSeed(RandomGenerator this, Int64 seed)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRandomGenerator.AllInstances.SetSeedUInt32UInt32">
            <summary>Sets the Shim of RandomGenerator.SetSeed(RandomGenerator this, UInt32 low, UInt32 high)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRandomGenerator.AllInstances.SetStateString">
            <summary>Sets the Shim of RandomGenerator.SetState(RandomGenerator this, String state)</summary>
        </member>
        <member name="M:Love.Fakes.ShimRandomGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimRandomGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimRandomGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimRandomGenerator.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimRandomGenerator.Constructor">
            <summary>Sets the Shim of RandomGenerator.RandomGenerator(RandomGenerator this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRandomGenerator.GetSeed">
            <summary>Sets the Shim of RandomGenerator.GetSeed(RandomGenerator this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRandomGenerator.GetSeedUInt32OutUInt32Out">
            <summary>Sets the Shim of RandomGenerator.GetSeed(RandomGenerator this, UInt32* out_low, UInt32* out_high)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRandomGenerator.GetState">
            <summary>Sets the Shim of RandomGenerator.GetState(RandomGenerator this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRandomGenerator.Random">
            <summary>Sets the Shim of RandomGenerator.Random(RandomGenerator this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRandomGenerator.RandomInt32Int32">
            <summary>Sets the Shim of RandomGenerator.Random(RandomGenerator this, Int32 min, Int32 max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRandomGenerator.RandomNormalDoubleDouble">
            <summary>Sets the Shim of RandomGenerator.RandomNormal(RandomGenerator this, Double stddev, Double mean)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRandomGenerator.RandomSingleSingle">
            <summary>Sets the Shim of RandomGenerator.Random(RandomGenerator this, Single min, Single max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRandomGenerator.SetSeedInt64">
            <summary>Sets the Shim of RandomGenerator.SetSeed(RandomGenerator this, Int64 seed)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRandomGenerator.SetSeedUInt32UInt32">
            <summary>Sets the Shim of RandomGenerator.SetSeed(RandomGenerator this, UInt32 low, UInt32 high)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRandomGenerator.SetStateString">
            <summary>Sets the Shim of RandomGenerator.SetState(RandomGenerator this, String state)</summary>
        </member>
        <member name="T:Love.Fakes.ShimRasterizer">
            <summary>Shim type of Love.Rasterizer</summary>
        </member>
        <member name="M:Love.Fakes.ShimRasterizer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimRasterizer.#ctor(Love.Rasterizer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimRasterizer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.AllInstances.GetAdvance">
            <summary>Sets the Shim of Rasterizer.GetAdvance(Rasterizer this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.AllInstances.GetAscent">
            <summary>Sets the Shim of Rasterizer.GetAscent(Rasterizer this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.AllInstances.GetDescent">
            <summary>Sets the Shim of Rasterizer.GetDescent(Rasterizer this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.AllInstances.GetGlyphCount">
            <summary>Sets the Shim of Rasterizer.GetGlyphCount(Rasterizer this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.AllInstances.GetGlyphDataByteArray">
            <summary>Sets the Shim of Rasterizer.GetGlyphData(Rasterizer this, Byte[] str)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.AllInstances.GetGlyphDataString">
            <summary>Sets the Shim of Rasterizer.GetGlyphData(Rasterizer this, String str)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.AllInstances.GetGlyphDataUInt32">
            <summary>Sets the Shim of Rasterizer.GetGlyphData(Rasterizer this, UInt32 glyph)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.AllInstances.GetHeight">
            <summary>Sets the Shim of Rasterizer.GetHeight(Rasterizer this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.AllInstances.GetLineHeight">
            <summary>Sets the Shim of Rasterizer.GetLineHeight(Rasterizer this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.AllInstances.HasGlyphsByteArray">
            <summary>Sets the Shim of Rasterizer.HasGlyphs(Rasterizer this, Byte[] str)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.AllInstances.HasGlyphsString">
            <summary>Sets the Shim of Rasterizer.HasGlyphs(Rasterizer this, String str)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.AllInstances.HasGlyphsUInt32">
            <summary>Sets the Shim of Rasterizer.HasGlyphs(Rasterizer this, UInt32 glyph)</summary>
        </member>
        <member name="M:Love.Fakes.ShimRasterizer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimRasterizer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimRasterizer.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.Constructor">
            <summary>Sets the Shim of Rasterizer.Rasterizer(Rasterizer this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.GetAdvance">
            <summary>Sets the Shim of Rasterizer.GetAdvance(Rasterizer this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.GetAscent">
            <summary>Sets the Shim of Rasterizer.GetAscent(Rasterizer this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.GetDescent">
            <summary>Sets the Shim of Rasterizer.GetDescent(Rasterizer this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.GetGlyphCount">
            <summary>Sets the Shim of Rasterizer.GetGlyphCount(Rasterizer this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.GetGlyphDataByteArray">
            <summary>Sets the Shim of Rasterizer.GetGlyphData(Rasterizer this, Byte[] str)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.GetGlyphDataString">
            <summary>Sets the Shim of Rasterizer.GetGlyphData(Rasterizer this, String str)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.GetGlyphDataUInt32">
            <summary>Sets the Shim of Rasterizer.GetGlyphData(Rasterizer this, UInt32 glyph)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.GetHeight">
            <summary>Sets the Shim of Rasterizer.GetHeight(Rasterizer this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.GetLineHeight">
            <summary>Sets the Shim of Rasterizer.GetLineHeight(Rasterizer this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.HasGlyphsByteArray">
            <summary>Sets the Shim of Rasterizer.HasGlyphs(Rasterizer this, Byte[] str)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.HasGlyphsString">
            <summary>Sets the Shim of Rasterizer.HasGlyphs(Rasterizer this, String str)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRasterizer.HasGlyphsUInt32">
            <summary>Sets the Shim of Rasterizer.HasGlyphs(Rasterizer this, UInt32 glyph)</summary>
        </member>
        <member name="T:Love.Fakes.ShimRay2D">
            <summary>Shim type of Love.Ray2D</summary>
        </member>
        <member name="M:Love.Fakes.ShimRay2D.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimRay2D.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimRay2D.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimRay2D.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimRay2D.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimRay2D.IntersectsRay2DRectangleFVector2Out">
            <summary>Sets the Shim of Ray2D.Intersects(Ray2D ray, RectangleF rect, Vector2* result)</summary>
        </member>
        <member name="T:Love.Fakes.ShimRectangBoost">
            <summary>Shim type of Love.RectangBoost</summary>
        </member>
        <member name="M:Love.Fakes.ShimRectangBoost.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimRectangBoost.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimRectangBoost.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.BottomRectangleFSingle">
            <summary>Sets the Shim of RectangBoost.Bottom(RectangleF r, Single precent)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.CeilToRectangleRectangleF">
            <summary>Sets the Shim of RectangBoost.CeilToRectangle(RectangleF r)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.CenterRectangleF">
            <summary>Sets the Shim of RectangBoost.Center(RectangleF r)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.DefBottomRectangleFSingle">
            <summary>Sets the Shim of RectangBoost.DefBottom(RectangleF r, Single bottom)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.DefCenterRectangleFSingleSingle">
            <summary>Sets the Shim of RectangBoost.DefCenter(RectangleF r, Single vertical, Single horizontal)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.DefCenterRectangleFVector2">
            <summary>Sets the Shim of RectangBoost.DefCenter(RectangleF r, Vector2 pos)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.DefHeightBottomRectangleFSingle">
            <summary>Sets the Shim of RectangBoost.DefHeightBottom(RectangleF r, Single height)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.DefHeightTopRectangleFSingle">
            <summary>Sets the Shim of RectangBoost.DefHeightTop(RectangleF r, Single height)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.DefHorizontalCenterRectangleFSingle">
            <summary>Sets the Shim of RectangBoost.DefHorizontalCenter(RectangleF r, Single horizontalCenter)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.DefLeftRectangleFSingle">
            <summary>Sets the Shim of RectangBoost.DefLeft(RectangleF r, Single left)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.DefLocationRectangleFSingleSingle">
            <summary>Sets the Shim of RectangBoost.DefLocation(RectangleF r, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.DefLocationRectangleFVector2">
            <summary>Sets the Shim of RectangBoost.DefLocation(RectangleF r, Vector2 pos)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.DefPaddingRectangleFSingle">
            <summary>Sets the Shim of RectangBoost.DefPadding(RectangleF r, Single padding)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.DefRightRectangleFSingle">
            <summary>Sets the Shim of RectangBoost.DefRight(RectangleF r, Single right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.DefTopRectangleFSingle">
            <summary>Sets the Shim of RectangBoost.DefTop(RectangleF r, Single top)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.DefVerticalCenterRectangleFSingle">
            <summary>Sets the Shim of RectangBoost.DefVerticalCenter(RectangleF r, Single verticalCenter)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.DefWidthLeftRectangleFSingle">
            <summary>Sets the Shim of RectangBoost.DefWidthLeft(RectangleF r, Single width)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.DefWidthRightRectangleFSingle">
            <summary>Sets the Shim of RectangBoost.DefWidthRight(RectangleF r, Single width)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.DiagonalLengthRectangleF">
            <summary>Sets the Shim of RectangBoost.DiagonalLength(RectangleF r)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.ExtendBottomRectangleFSingle">
            <summary>Sets the Shim of RectangBoost.ExtendBottom(RectangleF r, Single scale)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.ExtendHorizontalRectangleFSingle">
            <summary>Sets the Shim of RectangBoost.ExtendHorizontal(RectangleF r, Single scale)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.ExtendLeftRectangleFSingle">
            <summary>Sets the Shim of RectangBoost.ExtendLeft(RectangleF r, Single scale)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.ExtendRightRectangleFSingle">
            <summary>Sets the Shim of RectangBoost.ExtendRight(RectangleF r, Single scale)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.ExtendTopRectangleFSingle">
            <summary>Sets the Shim of RectangBoost.ExtendTop(RectangleF r, Single scale)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.ExtendVerticalRectangleFSingle">
            <summary>Sets the Shim of RectangBoost.ExtendVertical(RectangleF r, Single scale)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.FloorToRectangleRectangleF">
            <summary>Sets the Shim of RectangBoost.FloorToRectangle(RectangleF r)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.GridRectangleFInt32Int32Int32Int32">
            <summary>Sets the Shim of RectangBoost.Grid(RectangleF r, Int32 widthCount, Int32 heightCount, Int32 column, Int32 row)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.LeftRectangleFSingle">
            <summary>Sets the Shim of RectangBoost.Left(RectangleF r, Single precent)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.PaddingHorizontalRectangleFSingle">
            <summary>Sets the Shim of RectangBoost.PaddingHorizontal(RectangleF r, Single scale)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.PaddingRectangleFSingle">
            <summary>Sets the Shim of RectangBoost.Padding(RectangleF r, Single paddingScale)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.PaddingRectangleFSingleSingle">
            <summary>Sets the Shim of RectangBoost.Padding(RectangleF r, Single paddingScaleX, Single paddingScaleY)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.PaddingVerticalRectangleFSingle">
            <summary>Sets the Shim of RectangBoost.PaddingVertical(RectangleF r, Single scale)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.RightRectangleFSingle">
            <summary>Sets the Shim of RectangBoost.Right(RectangleF r, Single precent)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.RoundToRectangleRectangleF">
            <summary>Sets the Shim of RectangBoost.RoundToRectangle(RectangleF r)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.SplitCenterRectangleFSingleSingle">
            <summary>Sets the Shim of RectangBoost.SplitCenter(RectangleF r, Single horizontal, Single vertical)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.SplitXRectangleFInt32Int32">
            <summary>Sets the Shim of RectangBoost.SplitX(RectangleF r, Int32 count, Int32 index)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.SplitYRectangleFInt32Int32">
            <summary>Sets the Shim of RectangBoost.SplitY(RectangleF r, Int32 count, Int32 index)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangBoost.TopRectangleFSingle">
            <summary>Sets the Shim of RectangBoost.Top(RectangleF r, Single precent)</summary>
        </member>
        <member name="T:Love.Fakes.ShimRectangle">
            <summary>Shim type of Love.Rectangle</summary>
        </member>
        <member name="M:Love.Fakes.ShimRectangle.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimRectangle.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimRectangle.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimRectangle.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangle.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangle.CeilingRectangleF">
            <summary>Sets the Shim of Rectangle.Ceiling(RectangleF value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangle.EqualityOpRectangleRectangle">
            <summary>Sets the Shim of Rectangle.op_Equality(Rectangle left, Rectangle right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangle.FromLTRBInt32Int32Int32Int32">
            <summary>Sets the Shim of Rectangle.FromLTRB(Int32 left, Int32 top, Int32 right, Int32 bottom)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangle.InequalityOpRectangleRectangle">
            <summary>Sets the Shim of Rectangle.op_Inequality(Rectangle left, Rectangle right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangle.InflateRectangleInt32Int32">
            <summary>Sets the Shim of Rectangle.Inflate(Rectangle rect, Int32 x, Int32 y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangle.IntersectRectangleRectangle">
            <summary>Sets the Shim of Rectangle.Intersect(Rectangle a, Rectangle b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangle.RoundRectangleF">
            <summary>Sets the Shim of Rectangle.Round(RectangleF value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangle.StaticConstructor">
            <summary>Sets the Shim of Rectangle.Rectangle()</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangle.TruncateRectangleF">
            <summary>Sets the Shim of Rectangle.Truncate(RectangleF value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangle.UnionRectangleRectangle">
            <summary>Sets the Shim of Rectangle.Union(Rectangle a, Rectangle b)</summary>
        </member>
        <member name="T:Love.Fakes.ShimRectangleF">
            <summary>Shim type of Love.RectangleF</summary>
        </member>
        <member name="M:Love.Fakes.ShimRectangleF.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimRectangleF.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimRectangleF.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimRectangleF.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangleF.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangleF.EqualityOpRectangleFRectangleF">
            <summary>Sets the Shim of RectangleF.op_Equality(RectangleF left, RectangleF right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangleF.FromLTRBSingleSingleSingleSingle">
            <summary>Sets the Shim of RectangleF.FromLTRB(Single left, Single top, Single right, Single bottom)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangleF.ImplicitOpRectangleRectangleF">
            <summary>Sets the Shim of RectangleF.op_Implicit(Rectangle r)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangleF.InequalityOpRectangleFRectangleF">
            <summary>Sets the Shim of RectangleF.op_Inequality(RectangleF left, RectangleF right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangleF.InflateRectangleFSingleSingle">
            <summary>Sets the Shim of RectangleF.Inflate(RectangleF rect, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangleF.IntersectRectangleFRectangleF">
            <summary>Sets the Shim of RectangleF.Intersect(RectangleF a, RectangleF b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangleF.StaticConstructor">
            <summary>Sets the Shim of RectangleF.RectangleF()</summary>
        </member>
        <member name="P:Love.Fakes.ShimRectangleF.UnionRectangleFRectangleF">
            <summary>Sets the Shim of RectangleF.Union(RectangleF a, RectangleF b)</summary>
        </member>
        <member name="T:Love.Fakes.ShimRenderTarget">
            <summary>Shim type of Love.RenderTarget</summary>
        </member>
        <member name="M:Love.Fakes.ShimRenderTarget.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimRenderTarget.#ctor(Love.RenderTarget)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimRenderTarget.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimRenderTarget.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimRenderTarget.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimRenderTarget.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimRenderTarget.ConstructorCanvasInt32Int32">
            <summary>Sets the Shim of RenderTarget.RenderTarget(RenderTarget this, Canvas canvas, Int32 slice, Int32 mipmap)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRenderTarget.FromCanvasCanvasInt32Int32">
            <summary>Sets the Shim of RenderTarget.FromCanvas(Canvas canvas, Int32 slice, Int32 mipmap)</summary>
        </member>
        <member name="T:Love.Fakes.ShimRenderTargetInfo">
            <summary>Shim type of Love.RenderTargetInfo</summary>
        </member>
        <member name="M:Love.Fakes.ShimRenderTargetInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimRenderTargetInfo.#ctor(Love.RenderTargetInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimRenderTargetInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimRenderTargetInfo.AllInstances.CanvasListGet">
            <summary>Sets the Shim of RenderTargetInfo.get_CanvasList(RenderTargetInfo this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRenderTargetInfo.AllInstances.DepthStencilGet">
            <summary>Sets the Shim of RenderTargetInfo.get_DepthStencil(RenderTargetInfo this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRenderTargetInfo.AllInstances.RenderTargetListGet">
            <summary>Sets the Shim of RenderTargetInfo.get_RenderTargetList(RenderTargetInfo this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRenderTargetInfo.AllInstances.SetRenderTagetsIEnumerableOfRenderTarget">
            <summary>Sets the Shim of RenderTargetInfo.SetRenderTagets(RenderTargetInfo this, IEnumerable`1 rts)</summary>
        </member>
        <member name="M:Love.Fakes.ShimRenderTargetInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimRenderTargetInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimRenderTargetInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimRenderTargetInfo.CanvasListGet">
            <summary>Sets the Shim of RenderTargetInfo.get_CanvasList(RenderTargetInfo this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRenderTargetInfo.ConstructorListOfRenderTargetRenderTargetBooleanBoolean">
            <summary>Sets the Shim of RenderTargetInfo.RenderTargetInfo(RenderTargetInfo this, List`1 list, RenderTarget depthStencil, Boolean tempDepthFlag, Boolean tempStencilFlag)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRenderTargetInfo.CreateRenderTargetArray">
            <summary>Sets the Shim of RenderTargetInfo.Create(RenderTarget[] renderTagets)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRenderTargetInfo.CreateWithDepthStencilCanvasCanvasArray">
            <summary>Sets the Shim of RenderTargetInfo.CreateWithDepthStencil(Canvas depthStencil, Canvas[] renderTagets)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRenderTargetInfo.CreateWithDepthStencilRenderTargetRenderTargetArray">
            <summary>Sets the Shim of RenderTargetInfo.CreateWithDepthStencil(RenderTarget depthStencil, RenderTarget[] renderTagets)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRenderTargetInfo.DepthStencilGet">
            <summary>Sets the Shim of RenderTargetInfo.get_DepthStencil(RenderTargetInfo this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRenderTargetInfo.RenderTargetListGet">
            <summary>Sets the Shim of RenderTargetInfo.get_RenderTargetList(RenderTargetInfo this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRenderTargetInfo.SetRenderTagetsIEnumerableOfRenderTarget">
            <summary>Sets the Shim of RenderTargetInfo.SetRenderTagets(RenderTargetInfo this, IEnumerable`1 rts)</summary>
        </member>
        <member name="T:Love.Fakes.ShimResource">
            <summary>Shim type of Love.Resource</summary>
        </member>
        <member name="M:Love.Fakes.ShimResource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimResource.#ctor(Love.Resource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimResource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimResource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimResource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimResource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimResource.Constructor">
            <summary>Sets the Shim of Resource.Resource(Resource this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimResource.EncodeToFileStringCanvasImageFormat">
            <summary>Sets the Shim of Resource.EncodeToFile(String path, Canvas canvas, ImageFormat format)</summary>
        </member>
        <member name="P:Love.Fakes.ShimResource.EncodeToFileStringImageDataImageFormat">
            <summary>Sets the Shim of Resource.EncodeToFile(String path, ImageData imageData, ImageFormat format)</summary>
        </member>
        <member name="M:Love.Fakes.ShimResource.LoadDataOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets the Shim of Resource.LoadData(String path)</summary>
        </member>
        <member name="P:Love.Fakes.ShimResource.SaveDataStringObject">
            <summary>Sets the Shim of Resource.SaveData(String path, Object obj)</summary>
        </member>
        <member name="P:Love.Fakes.ShimResource.ToImageDataCanvas">
            <summary>Sets the Shim of Resource.ToImageData(Canvas cas)</summary>
        </member>
        <member name="P:Love.Fakes.ShimResource.ToImageDataImage">
            <summary>Sets the Shim of Resource.ToImageData(Image img)</summary>
        </member>
        <member name="T:Love.Fakes.ShimRevoluteJoint">
            <summary>Shim type of Love.RevoluteJoint</summary>
        </member>
        <member name="M:Love.Fakes.ShimRevoluteJoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimRevoluteJoint.#ctor(Love.RevoluteJoint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimRevoluteJoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.AllInstances.AreLimitsEnabled">
            <summary>Sets the Shim of RevoluteJoint.AreLimitsEnabled(RevoluteJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.AllInstances.GetJointAngle">
            <summary>Sets the Shim of RevoluteJoint.GetJointAngle(RevoluteJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.AllInstances.GetJointSpeed">
            <summary>Sets the Shim of RevoluteJoint.GetJointSpeed(RevoluteJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.AllInstances.GetLimitsSingleOutSingleOut">
            <summary>Sets the Shim of RevoluteJoint.GetLimits(RevoluteJoint this, Single* lowerLimit, Single* upperLimit)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.AllInstances.GetLowerLimit">
            <summary>Sets the Shim of RevoluteJoint.GetLowerLimit(RevoluteJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.AllInstances.GetMaxMotorTorque">
            <summary>Sets the Shim of RevoluteJoint.GetMaxMotorTorque(RevoluteJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.AllInstances.GetMotorSpeed">
            <summary>Sets the Shim of RevoluteJoint.GetMotorSpeed(RevoluteJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.AllInstances.GetMotorTorqueSingle">
            <summary>Sets the Shim of RevoluteJoint.GetMotorTorque(RevoluteJoint this, Single inv_dt)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.AllInstances.GetReferenceAngle">
            <summary>Sets the Shim of RevoluteJoint.GetReferenceAngle(RevoluteJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.AllInstances.GetUpperLimit">
            <summary>Sets the Shim of RevoluteJoint.GetUpperLimit(RevoluteJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.AllInstances.IsMotorEnabled">
            <summary>Sets the Shim of RevoluteJoint.IsMotorEnabled(RevoluteJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.AllInstances.SetLimitsEnabledBoolean">
            <summary>Sets the Shim of RevoluteJoint.SetLimitsEnabled(RevoluteJoint this, Boolean enabled)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.AllInstances.SetLimitsSingleSingle">
            <summary>Sets the Shim of RevoluteJoint.SetLimits(RevoluteJoint this, Single lowerLimit, Single upperLimit)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.AllInstances.SetLowerLimitSingle">
            <summary>Sets the Shim of RevoluteJoint.SetLowerLimit(RevoluteJoint this, Single limit)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.AllInstances.SetMaxMotorTorqueSingle">
            <summary>Sets the Shim of RevoluteJoint.SetMaxMotorTorque(RevoluteJoint this, Single torque)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.AllInstances.SetMotorEnabledBoolean">
            <summary>Sets the Shim of RevoluteJoint.SetMotorEnabled(RevoluteJoint this, Boolean enabled)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.AllInstances.SetMotorSpeedSingle">
            <summary>Sets the Shim of RevoluteJoint.SetMotorSpeed(RevoluteJoint this, Single speed)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.AllInstances.SetUpperLimitSingle">
            <summary>Sets the Shim of RevoluteJoint.SetUpperLimit(RevoluteJoint this, Single limit)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.AreLimitsEnabled">
            <summary>Sets the Shim of RevoluteJoint.AreLimitsEnabled(RevoluteJoint this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimRevoluteJoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimRevoluteJoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimRevoluteJoint.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.Constructor">
            <summary>Sets the Shim of RevoluteJoint.RevoluteJoint(RevoluteJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.GetJointAngle">
            <summary>Sets the Shim of RevoluteJoint.GetJointAngle(RevoluteJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.GetJointSpeed">
            <summary>Sets the Shim of RevoluteJoint.GetJointSpeed(RevoluteJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.GetLimitsSingleOutSingleOut">
            <summary>Sets the Shim of RevoluteJoint.GetLimits(RevoluteJoint this, Single* lowerLimit, Single* upperLimit)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.GetLowerLimit">
            <summary>Sets the Shim of RevoluteJoint.GetLowerLimit(RevoluteJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.GetMaxMotorTorque">
            <summary>Sets the Shim of RevoluteJoint.GetMaxMotorTorque(RevoluteJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.GetMotorSpeed">
            <summary>Sets the Shim of RevoluteJoint.GetMotorSpeed(RevoluteJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.GetMotorTorqueSingle">
            <summary>Sets the Shim of RevoluteJoint.GetMotorTorque(RevoluteJoint this, Single inv_dt)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.GetReferenceAngle">
            <summary>Sets the Shim of RevoluteJoint.GetReferenceAngle(RevoluteJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.GetUpperLimit">
            <summary>Sets the Shim of RevoluteJoint.GetUpperLimit(RevoluteJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.IsMotorEnabled">
            <summary>Sets the Shim of RevoluteJoint.IsMotorEnabled(RevoluteJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.SetLimitsEnabledBoolean">
            <summary>Sets the Shim of RevoluteJoint.SetLimitsEnabled(RevoluteJoint this, Boolean enabled)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.SetLimitsSingleSingle">
            <summary>Sets the Shim of RevoluteJoint.SetLimits(RevoluteJoint this, Single lowerLimit, Single upperLimit)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.SetLowerLimitSingle">
            <summary>Sets the Shim of RevoluteJoint.SetLowerLimit(RevoluteJoint this, Single limit)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.SetMaxMotorTorqueSingle">
            <summary>Sets the Shim of RevoluteJoint.SetMaxMotorTorque(RevoluteJoint this, Single torque)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.SetMotorEnabledBoolean">
            <summary>Sets the Shim of RevoluteJoint.SetMotorEnabled(RevoluteJoint this, Boolean enabled)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.SetMotorSpeedSingle">
            <summary>Sets the Shim of RevoluteJoint.SetMotorSpeed(RevoluteJoint this, Single speed)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRevoluteJoint.SetUpperLimitSingle">
            <summary>Sets the Shim of RevoluteJoint.SetUpperLimit(RevoluteJoint this, Single limit)</summary>
        </member>
        <member name="T:Love.Fakes.ShimRopeJoint">
            <summary>Shim type of Love.RopeJoint</summary>
        </member>
        <member name="M:Love.Fakes.ShimRopeJoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimRopeJoint.#ctor(Love.RopeJoint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimRopeJoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimRopeJoint.AllInstances.GetMaxLength">
            <summary>Sets the Shim of RopeJoint.GetMaxLength(RopeJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRopeJoint.AllInstances.SetMaxLengthSingle">
            <summary>Sets the Shim of RopeJoint.SetMaxLength(RopeJoint this, Single maxLength)</summary>
        </member>
        <member name="M:Love.Fakes.ShimRopeJoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimRopeJoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimRopeJoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimRopeJoint.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimRopeJoint.Constructor">
            <summary>Sets the Shim of RopeJoint.RopeJoint(RopeJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRopeJoint.GetMaxLength">
            <summary>Sets the Shim of RopeJoint.GetMaxLength(RopeJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimRopeJoint.SetMaxLengthSingle">
            <summary>Sets the Shim of RopeJoint.SetMaxLength(RopeJoint this, Single maxLength)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene">
            <summary>Shim type of Love.Scene</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.#ctor(Love.Scene)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.DirectoryDroppedString">
            <summary>Sets the Shim of Scene.DirectoryDropped(Scene this, String path)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.Draw">
            <summary>Sets the Shim of Scene.Draw(Scene this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.ErrorHandlerException">
            <summary>Sets the Shim of Scene.ErrorHandler(Scene this, Exception e)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.FileDroppedString">
            <summary>Sets the Shim of Scene.FileDropped(Scene this, String fileFilePath)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeDirectoryDroppedString">
            <summary>Sets the Shim of Scene.InvokeDirectoryDropped(Scene this, String path)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeDraw">
            <summary>Sets the Shim of Scene.InvokeDraw(Scene this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeFileDroppedString">
            <summary>Sets the Shim of Scene.InvokeFileDropped(Scene this, String fileFilePath)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeJoystickAddedJoystick">
            <summary>Sets the Shim of Scene.InvokeJoystickAdded(Scene this, Joystick joystick)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeJoystickAxisJoystickSingleSingle">
            <summary>Sets the Shim of Scene.InvokeJoystickAxis(Scene this, Joystick joystick, Single axis, Single value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeJoystickGamepadAxisJoystickGamepadAxisSingle">
            <summary>Sets the Shim of Scene.InvokeJoystickGamepadAxis(Scene this, Joystick joystick, GamepadAxis axis, Single value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeJoystickGamepadPressedJoystickGamepadButton">
            <summary>Sets the Shim of Scene.InvokeJoystickGamepadPressed(Scene this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeJoystickGamepadReleasedJoystickGamepadButton">
            <summary>Sets the Shim of Scene.InvokeJoystickGamepadReleased(Scene this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeJoystickHatJoystickInt32JoystickHat">
            <summary>Sets the Shim of Scene.InvokeJoystickHat(Scene this, Joystick joystick, Int32 hat, JoystickHat direction)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeJoystickPressedJoystickInt32">
            <summary>Sets the Shim of Scene.InvokeJoystickPressed(Scene this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeJoystickReleasedJoystickInt32">
            <summary>Sets the Shim of Scene.InvokeJoystickReleased(Scene this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeJoystickRemovedJoystick">
            <summary>Sets the Shim of Scene.InvokeJoystickRemoved(Scene this, Joystick joystick)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeKeyPressedKeyConstantScancodeBoolean">
            <summary>Sets the Shim of Scene.InvokeKeyPressed(Scene this, KeyConstant key, Scancode scancode, Boolean isRepeat)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeKeyReleasedKeyConstantScancode">
            <summary>Sets the Shim of Scene.InvokeKeyReleased(Scene this, KeyConstant key, Scancode scancode)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeLoad">
            <summary>Sets the Shim of Scene.InvokeLoad(Scene this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeLowMemory">
            <summary>Sets the Shim of Scene.InvokeLowMemory(Scene this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeMouseFocusBoolean">
            <summary>Sets the Shim of Scene.InvokeMouseFocus(Scene this, Boolean focus)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeMouseMovedSingleSingleSingleSingleBoolean">
            <summary>Sets the Shim of Scene.InvokeMouseMoved(Scene this, Single x, Single y, Single dx, Single dy, Boolean isTouch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeMousePressedSingleSingleInt32Boolean">
            <summary>Sets the Shim of Scene.InvokeMousePressed(Scene this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeMouseReleasedSingleSingleInt32Boolean">
            <summary>Sets the Shim of Scene.InvokeMouseReleased(Scene this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeQuit">
            <summary>Sets the Shim of Scene.InvokeQuit(Scene this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeTextEditingStringInt32Int32">
            <summary>Sets the Shim of Scene.InvokeTextEditing(Scene this, String text, Int32 start, Int32 end)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeTextInputString">
            <summary>Sets the Shim of Scene.InvokeTextInput(Scene this, String text)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeTouchMovedInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Scene.InvokeTouchMoved(Scene this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeTouchPressedInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Scene.InvokeTouchPressed(Scene this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeTouchReleasedInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Scene.InvokeTouchReleased(Scene this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeUpdateSingle">
            <summary>Sets the Shim of Scene.InvokeUpdate(Scene this, Single dt)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeWheelMovedInt32Int32">
            <summary>Sets the Shim of Scene.InvokeWheelMoved(Scene this, Int32 x, Int32 y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeWindowFocusBoolean">
            <summary>Sets the Shim of Scene.InvokeWindowFocus(Scene this, Boolean focus)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeWindowResizeInt32Int32">
            <summary>Sets the Shim of Scene.InvokeWindowResize(Scene this, Int32 w, Int32 h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.InvokeWindowVisibleBoolean">
            <summary>Sets the Shim of Scene.InvokeWindowVisible(Scene this, Boolean visible)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.JoystickAddedJoystick">
            <summary>Sets the Shim of Scene.JoystickAdded(Scene this, Joystick joystick)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.JoystickAxisJoystickSingleSingle">
            <summary>Sets the Shim of Scene.JoystickAxis(Scene this, Joystick joystick, Single axis, Single value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.JoystickGamepadAxisJoystickGamepadAxisSingle">
            <summary>Sets the Shim of Scene.JoystickGamepadAxis(Scene this, Joystick joystick, GamepadAxis axis, Single value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.JoystickGamepadPressedJoystickGamepadButton">
            <summary>Sets the Shim of Scene.JoystickGamepadPressed(Scene this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.JoystickGamepadReleasedJoystickGamepadButton">
            <summary>Sets the Shim of Scene.JoystickGamepadReleased(Scene this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.JoystickHatJoystickInt32JoystickHat">
            <summary>Sets the Shim of Scene.JoystickHat(Scene this, Joystick joystick, Int32 hat, JoystickHat direction)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.JoystickPressedJoystickInt32">
            <summary>Sets the Shim of Scene.JoystickPressed(Scene this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.JoystickReleasedJoystickInt32">
            <summary>Sets the Shim of Scene.JoystickReleased(Scene this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.JoystickRemovedJoystick">
            <summary>Sets the Shim of Scene.JoystickRemoved(Scene this, Joystick joystick)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.KeyPressedKeyConstantScancodeBoolean">
            <summary>Sets the Shim of Scene.KeyPressed(Scene this, KeyConstant key, Scancode scancode, Boolean isRepeat)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.KeyReleasedKeyConstantScancode">
            <summary>Sets the Shim of Scene.KeyReleased(Scene this, KeyConstant key, Scancode scancode)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.Load">
            <summary>Sets the Shim of Scene.Load(Scene this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.LowMemory">
            <summary>Sets the Shim of Scene.LowMemory(Scene this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.MouseFocusBoolean">
            <summary>Sets the Shim of Scene.MouseFocus(Scene this, Boolean focus)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.MouseMovedSingleSingleSingleSingleBoolean">
            <summary>Sets the Shim of Scene.MouseMoved(Scene this, Single x, Single y, Single dx, Single dy, Boolean isTouch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.MousePressedSingleSingleInt32Boolean">
            <summary>Sets the Shim of Scene.MousePressed(Scene this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.MouseReleasedSingleSingleInt32Boolean">
            <summary>Sets the Shim of Scene.MouseReleased(Scene this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnDirectoryDroppedAddSceneDirectoryDroppedDelegate">
            <summary>Sets the Shim of Scene.add_OnDirectoryDropped(Scene this, DirectoryDroppedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnDirectoryDroppedRemoveSceneDirectoryDroppedDelegate">
            <summary>Sets the Shim of Scene.remove_OnDirectoryDropped(Scene this, DirectoryDroppedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnDrawAddSceneDrawDelegate">
            <summary>Sets the Shim of Scene.add_OnDraw(Scene this, DrawDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnDrawRemoveSceneDrawDelegate">
            <summary>Sets the Shim of Scene.remove_OnDraw(Scene this, DrawDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnFileDroppedAddSceneFileDroppedDelegate">
            <summary>Sets the Shim of Scene.add_OnFileDropped(Scene this, FileDroppedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnFileDroppedRemoveSceneFileDroppedDelegate">
            <summary>Sets the Shim of Scene.remove_OnFileDropped(Scene this, FileDroppedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnJoystickAddedAddSceneJoystickAddedDelegate">
            <summary>Sets the Shim of Scene.add_OnJoystickAdded(Scene this, JoystickAddedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnJoystickAddedRemoveSceneJoystickAddedDelegate">
            <summary>Sets the Shim of Scene.remove_OnJoystickAdded(Scene this, JoystickAddedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnJoystickAxisAddSceneJoystickAxisDelegate">
            <summary>Sets the Shim of Scene.add_OnJoystickAxis(Scene this, JoystickAxisDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnJoystickAxisRemoveSceneJoystickAxisDelegate">
            <summary>Sets the Shim of Scene.remove_OnJoystickAxis(Scene this, JoystickAxisDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnJoystickGamepadAxisAddSceneJoystickGamepadAxisDelegate">
            <summary>Sets the Shim of Scene.add_OnJoystickGamepadAxis(Scene this, JoystickGamepadAxisDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnJoystickGamepadAxisRemoveSceneJoystickGamepadAxisDelegate">
            <summary>Sets the Shim of Scene.remove_OnJoystickGamepadAxis(Scene this, JoystickGamepadAxisDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnJoystickGamepadPressedAddSceneJoystickGamepadPressedDelegate">
            <summary>Sets the Shim of Scene.add_OnJoystickGamepadPressed(Scene this, JoystickGamepadPressedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnJoystickGamepadPressedRemoveSceneJoystickGamepadPressedDelegate">
            <summary>Sets the Shim of Scene.remove_OnJoystickGamepadPressed(Scene this, JoystickGamepadPressedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnJoystickGamepadReleasedAddSceneJoystickGamepadReleasedDelegate">
            <summary>Sets the Shim of Scene.add_OnJoystickGamepadReleased(Scene this, JoystickGamepadReleasedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnJoystickGamepadReleasedRemoveSceneJoystickGamepadReleasedDelegate">
            <summary>Sets the Shim of Scene.remove_OnJoystickGamepadReleased(Scene this, JoystickGamepadReleasedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnJoystickHatAddSceneJoystickHatDelegate">
            <summary>Sets the Shim of Scene.add_OnJoystickHat(Scene this, JoystickHatDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnJoystickHatRemoveSceneJoystickHatDelegate">
            <summary>Sets the Shim of Scene.remove_OnJoystickHat(Scene this, JoystickHatDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnJoystickPressedAddSceneJoystickPressedDelegate">
            <summary>Sets the Shim of Scene.add_OnJoystickPressed(Scene this, JoystickPressedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnJoystickPressedRemoveSceneJoystickPressedDelegate">
            <summary>Sets the Shim of Scene.remove_OnJoystickPressed(Scene this, JoystickPressedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnJoystickReleasedAddSceneJoystickReleasedDelegate">
            <summary>Sets the Shim of Scene.add_OnJoystickReleased(Scene this, JoystickReleasedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnJoystickReleasedRemoveSceneJoystickReleasedDelegate">
            <summary>Sets the Shim of Scene.remove_OnJoystickReleased(Scene this, JoystickReleasedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnJoystickRemovedAddSceneJoystickRemovedDelegate">
            <summary>Sets the Shim of Scene.add_OnJoystickRemoved(Scene this, JoystickRemovedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnJoystickRemovedRemoveSceneJoystickRemovedDelegate">
            <summary>Sets the Shim of Scene.remove_OnJoystickRemoved(Scene this, JoystickRemovedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnKeyPressedAddSceneKeyPressedDelegate">
            <summary>Sets the Shim of Scene.add_OnKeyPressed(Scene this, KeyPressedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnKeyPressedRemoveSceneKeyPressedDelegate">
            <summary>Sets the Shim of Scene.remove_OnKeyPressed(Scene this, KeyPressedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnKeyReleasedAddSceneKeyReleasedDelegate">
            <summary>Sets the Shim of Scene.add_OnKeyReleased(Scene this, KeyReleasedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnKeyReleasedRemoveSceneKeyReleasedDelegate">
            <summary>Sets the Shim of Scene.remove_OnKeyReleased(Scene this, KeyReleasedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnLoadAddSceneLoadDelegate">
            <summary>Sets the Shim of Scene.add_OnLoad(Scene this, LoadDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnLoadRemoveSceneLoadDelegate">
            <summary>Sets the Shim of Scene.remove_OnLoad(Scene this, LoadDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnLowMemoryAddSceneLowMemoryDelegate">
            <summary>Sets the Shim of Scene.add_OnLowMemory(Scene this, LowMemoryDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnLowMemoryRemoveSceneLowMemoryDelegate">
            <summary>Sets the Shim of Scene.remove_OnLowMemory(Scene this, LowMemoryDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnMouseFocusAddSceneMouseFocusDelegate">
            <summary>Sets the Shim of Scene.add_OnMouseFocus(Scene this, MouseFocusDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnMouseFocusRemoveSceneMouseFocusDelegate">
            <summary>Sets the Shim of Scene.remove_OnMouseFocus(Scene this, MouseFocusDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnMouseMovedAddSceneMouseMovedDelegate">
            <summary>Sets the Shim of Scene.add_OnMouseMoved(Scene this, MouseMovedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnMouseMovedRemoveSceneMouseMovedDelegate">
            <summary>Sets the Shim of Scene.remove_OnMouseMoved(Scene this, MouseMovedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnMousePressedAddSceneMousePressedDelegate">
            <summary>Sets the Shim of Scene.add_OnMousePressed(Scene this, MousePressedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnMousePressedRemoveSceneMousePressedDelegate">
            <summary>Sets the Shim of Scene.remove_OnMousePressed(Scene this, MousePressedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnMouseReleasedAddSceneMouseReleasedDelegate">
            <summary>Sets the Shim of Scene.add_OnMouseReleased(Scene this, MouseReleasedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnMouseReleasedRemoveSceneMouseReleasedDelegate">
            <summary>Sets the Shim of Scene.remove_OnMouseReleased(Scene this, MouseReleasedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnQuitAddSceneQuitDelegate">
            <summary>Sets the Shim of Scene.add_OnQuit(Scene this, QuitDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnQuitRemoveSceneQuitDelegate">
            <summary>Sets the Shim of Scene.remove_OnQuit(Scene this, QuitDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnTextEditingAddSceneTextEditingDelegate">
            <summary>Sets the Shim of Scene.add_OnTextEditing(Scene this, TextEditingDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnTextEditingRemoveSceneTextEditingDelegate">
            <summary>Sets the Shim of Scene.remove_OnTextEditing(Scene this, TextEditingDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnTextInputAddSceneTextInputDelegate">
            <summary>Sets the Shim of Scene.add_OnTextInput(Scene this, TextInputDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnTextInputRemoveSceneTextInputDelegate">
            <summary>Sets the Shim of Scene.remove_OnTextInput(Scene this, TextInputDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnTouchMovedAddSceneTouchMovedDelegate">
            <summary>Sets the Shim of Scene.add_OnTouchMoved(Scene this, TouchMovedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnTouchMovedRemoveSceneTouchMovedDelegate">
            <summary>Sets the Shim of Scene.remove_OnTouchMoved(Scene this, TouchMovedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnTouchPressedAddSceneTouchPressedDelegate">
            <summary>Sets the Shim of Scene.add_OnTouchPressed(Scene this, TouchPressedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnTouchPressedRemoveSceneTouchPressedDelegate">
            <summary>Sets the Shim of Scene.remove_OnTouchPressed(Scene this, TouchPressedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnTouchReleasedAddSceneTouchReleasedDelegate">
            <summary>Sets the Shim of Scene.add_OnTouchReleased(Scene this, TouchReleasedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnTouchReleasedRemoveSceneTouchReleasedDelegate">
            <summary>Sets the Shim of Scene.remove_OnTouchReleased(Scene this, TouchReleasedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnUpdateAddSceneUpdateDelegate">
            <summary>Sets the Shim of Scene.add_OnUpdate(Scene this, UpdateDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnUpdateRemoveSceneUpdateDelegate">
            <summary>Sets the Shim of Scene.remove_OnUpdate(Scene this, UpdateDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnWheelMovedAddSceneWheelMovedDelegate">
            <summary>Sets the Shim of Scene.add_OnWheelMoved(Scene this, WheelMovedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnWheelMovedRemoveSceneWheelMovedDelegate">
            <summary>Sets the Shim of Scene.remove_OnWheelMoved(Scene this, WheelMovedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnWindowFocusAddSceneWindowFocusDelegate">
            <summary>Sets the Shim of Scene.add_OnWindowFocus(Scene this, WindowFocusDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnWindowFocusRemoveSceneWindowFocusDelegate">
            <summary>Sets the Shim of Scene.remove_OnWindowFocus(Scene this, WindowFocusDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnWindowResizeAddSceneWindowResizeDelegate">
            <summary>Sets the Shim of Scene.add_OnWindowResize(Scene this, WindowResizeDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnWindowResizeRemoveSceneWindowResizeDelegate">
            <summary>Sets the Shim of Scene.remove_OnWindowResize(Scene this, WindowResizeDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnWindowVisibleAddSceneWindowVisibleDelegate">
            <summary>Sets the Shim of Scene.add_OnWindowVisible(Scene this, WindowVisibleDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.OnWindowVisibleRemoveSceneWindowVisibleDelegate">
            <summary>Sets the Shim of Scene.remove_OnWindowVisible(Scene this, WindowVisibleDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.Quit">
            <summary>Sets the Shim of Scene.Quit(Scene this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.TextEditingStringInt32Int32">
            <summary>Sets the Shim of Scene.TextEditing(Scene this, String text, Int32 start, Int32 end)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.TextInputString">
            <summary>Sets the Shim of Scene.TextInput(Scene this, String text)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.TouchMovedInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Scene.TouchMoved(Scene this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.TouchPressedInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Scene.TouchPressed(Scene this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.TouchReleasedInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Scene.TouchReleased(Scene this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.UpdateSingle">
            <summary>Sets the Shim of Scene.Update(Scene this, Single dt)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.WheelMovedInt32Int32">
            <summary>Sets the Shim of Scene.WheelMoved(Scene this, Int32 x, Int32 y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.WindowFocusBoolean">
            <summary>Sets the Shim of Scene.WindowFocus(Scene this, Boolean focus)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.WindowResizeInt32Int32">
            <summary>Sets the Shim of Scene.WindowResize(Scene this, Int32 w, Int32 h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.AllInstances.WindowVisibleBoolean">
            <summary>Sets the Shim of Scene.WindowVisible(Scene this, Boolean visible)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.Constructor">
            <summary>Sets the Shim of Scene.Scene(Scene this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.DirectoryDroppedString">
            <summary>Sets the Shim of Scene.DirectoryDropped(Scene this, String path)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.Draw">
            <summary>Sets the Shim of Scene.Draw(Scene this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ErrorHandlerException">
            <summary>Sets the Shim of Scene.ErrorHandler(Scene this, Exception e)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.FileDroppedString">
            <summary>Sets the Shim of Scene.FileDropped(Scene this, String fileFilePath)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeDirectoryDroppedString">
            <summary>Sets the Shim of Scene.InvokeDirectoryDropped(Scene this, String path)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeDraw">
            <summary>Sets the Shim of Scene.InvokeDraw(Scene this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeFileDroppedString">
            <summary>Sets the Shim of Scene.InvokeFileDropped(Scene this, String fileFilePath)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeJoystickAddedJoystick">
            <summary>Sets the Shim of Scene.InvokeJoystickAdded(Scene this, Joystick joystick)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeJoystickAxisJoystickSingleSingle">
            <summary>Sets the Shim of Scene.InvokeJoystickAxis(Scene this, Joystick joystick, Single axis, Single value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeJoystickGamepadAxisJoystickGamepadAxisSingle">
            <summary>Sets the Shim of Scene.InvokeJoystickGamepadAxis(Scene this, Joystick joystick, GamepadAxis axis, Single value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeJoystickGamepadPressedJoystickGamepadButton">
            <summary>Sets the Shim of Scene.InvokeJoystickGamepadPressed(Scene this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeJoystickGamepadReleasedJoystickGamepadButton">
            <summary>Sets the Shim of Scene.InvokeJoystickGamepadReleased(Scene this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeJoystickHatJoystickInt32JoystickHat">
            <summary>Sets the Shim of Scene.InvokeJoystickHat(Scene this, Joystick joystick, Int32 hat, JoystickHat direction)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeJoystickPressedJoystickInt32">
            <summary>Sets the Shim of Scene.InvokeJoystickPressed(Scene this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeJoystickReleasedJoystickInt32">
            <summary>Sets the Shim of Scene.InvokeJoystickReleased(Scene this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeJoystickRemovedJoystick">
            <summary>Sets the Shim of Scene.InvokeJoystickRemoved(Scene this, Joystick joystick)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeKeyPressedKeyConstantScancodeBoolean">
            <summary>Sets the Shim of Scene.InvokeKeyPressed(Scene this, KeyConstant key, Scancode scancode, Boolean isRepeat)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeKeyReleasedKeyConstantScancode">
            <summary>Sets the Shim of Scene.InvokeKeyReleased(Scene this, KeyConstant key, Scancode scancode)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeLoad">
            <summary>Sets the Shim of Scene.InvokeLoad(Scene this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeLowMemory">
            <summary>Sets the Shim of Scene.InvokeLowMemory(Scene this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeMouseFocusBoolean">
            <summary>Sets the Shim of Scene.InvokeMouseFocus(Scene this, Boolean focus)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeMouseMovedSingleSingleSingleSingleBoolean">
            <summary>Sets the Shim of Scene.InvokeMouseMoved(Scene this, Single x, Single y, Single dx, Single dy, Boolean isTouch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeMousePressedSingleSingleInt32Boolean">
            <summary>Sets the Shim of Scene.InvokeMousePressed(Scene this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeMouseReleasedSingleSingleInt32Boolean">
            <summary>Sets the Shim of Scene.InvokeMouseReleased(Scene this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeQuit">
            <summary>Sets the Shim of Scene.InvokeQuit(Scene this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeTextEditingStringInt32Int32">
            <summary>Sets the Shim of Scene.InvokeTextEditing(Scene this, String text, Int32 start, Int32 end)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeTextInputString">
            <summary>Sets the Shim of Scene.InvokeTextInput(Scene this, String text)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeTouchMovedInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Scene.InvokeTouchMoved(Scene this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeTouchPressedInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Scene.InvokeTouchPressed(Scene this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeTouchReleasedInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Scene.InvokeTouchReleased(Scene this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeUpdateSingle">
            <summary>Sets the Shim of Scene.InvokeUpdate(Scene this, Single dt)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeWheelMovedInt32Int32">
            <summary>Sets the Shim of Scene.InvokeWheelMoved(Scene this, Int32 x, Int32 y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeWindowFocusBoolean">
            <summary>Sets the Shim of Scene.InvokeWindowFocus(Scene this, Boolean focus)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeWindowResizeInt32Int32">
            <summary>Sets the Shim of Scene.InvokeWindowResize(Scene this, Int32 w, Int32 h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.InvokeWindowVisibleBoolean">
            <summary>Sets the Shim of Scene.InvokeWindowVisible(Scene this, Boolean visible)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.JoystickAddedJoystick">
            <summary>Sets the Shim of Scene.JoystickAdded(Scene this, Joystick joystick)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.JoystickAxisJoystickSingleSingle">
            <summary>Sets the Shim of Scene.JoystickAxis(Scene this, Joystick joystick, Single axis, Single value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.JoystickGamepadAxisJoystickGamepadAxisSingle">
            <summary>Sets the Shim of Scene.JoystickGamepadAxis(Scene this, Joystick joystick, GamepadAxis axis, Single value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.JoystickGamepadPressedJoystickGamepadButton">
            <summary>Sets the Shim of Scene.JoystickGamepadPressed(Scene this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.JoystickGamepadReleasedJoystickGamepadButton">
            <summary>Sets the Shim of Scene.JoystickGamepadReleased(Scene this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.JoystickHatJoystickInt32JoystickHat">
            <summary>Sets the Shim of Scene.JoystickHat(Scene this, Joystick joystick, Int32 hat, JoystickHat direction)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.JoystickPressedJoystickInt32">
            <summary>Sets the Shim of Scene.JoystickPressed(Scene this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.JoystickReleasedJoystickInt32">
            <summary>Sets the Shim of Scene.JoystickReleased(Scene this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.JoystickRemovedJoystick">
            <summary>Sets the Shim of Scene.JoystickRemoved(Scene this, Joystick joystick)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.KeyPressedKeyConstantScancodeBoolean">
            <summary>Sets the Shim of Scene.KeyPressed(Scene this, KeyConstant key, Scancode scancode, Boolean isRepeat)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.KeyReleasedKeyConstantScancode">
            <summary>Sets the Shim of Scene.KeyReleased(Scene this, KeyConstant key, Scancode scancode)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.Load">
            <summary>Sets the Shim of Scene.Load(Scene this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.LowMemory">
            <summary>Sets the Shim of Scene.LowMemory(Scene this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.MouseFocusBoolean">
            <summary>Sets the Shim of Scene.MouseFocus(Scene this, Boolean focus)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.MouseMovedSingleSingleSingleSingleBoolean">
            <summary>Sets the Shim of Scene.MouseMoved(Scene this, Single x, Single y, Single dx, Single dy, Boolean isTouch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.MousePressedSingleSingleInt32Boolean">
            <summary>Sets the Shim of Scene.MousePressed(Scene this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.MouseReleasedSingleSingleInt32Boolean">
            <summary>Sets the Shim of Scene.MouseReleased(Scene this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnDirectoryDroppedAddSceneDirectoryDroppedDelegate">
            <summary>Sets the Shim of Scene.add_OnDirectoryDropped(Scene this, DirectoryDroppedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnDirectoryDroppedRemoveSceneDirectoryDroppedDelegate">
            <summary>Sets the Shim of Scene.remove_OnDirectoryDropped(Scene this, DirectoryDroppedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnDrawAddSceneDrawDelegate">
            <summary>Sets the Shim of Scene.add_OnDraw(Scene this, DrawDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnDrawRemoveSceneDrawDelegate">
            <summary>Sets the Shim of Scene.remove_OnDraw(Scene this, DrawDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnFileDroppedAddSceneFileDroppedDelegate">
            <summary>Sets the Shim of Scene.add_OnFileDropped(Scene this, FileDroppedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnFileDroppedRemoveSceneFileDroppedDelegate">
            <summary>Sets the Shim of Scene.remove_OnFileDropped(Scene this, FileDroppedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnJoystickAddedAddSceneJoystickAddedDelegate">
            <summary>Sets the Shim of Scene.add_OnJoystickAdded(Scene this, JoystickAddedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnJoystickAddedRemoveSceneJoystickAddedDelegate">
            <summary>Sets the Shim of Scene.remove_OnJoystickAdded(Scene this, JoystickAddedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnJoystickAxisAddSceneJoystickAxisDelegate">
            <summary>Sets the Shim of Scene.add_OnJoystickAxis(Scene this, JoystickAxisDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnJoystickAxisRemoveSceneJoystickAxisDelegate">
            <summary>Sets the Shim of Scene.remove_OnJoystickAxis(Scene this, JoystickAxisDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnJoystickGamepadAxisAddSceneJoystickGamepadAxisDelegate">
            <summary>Sets the Shim of Scene.add_OnJoystickGamepadAxis(Scene this, JoystickGamepadAxisDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnJoystickGamepadAxisRemoveSceneJoystickGamepadAxisDelegate">
            <summary>Sets the Shim of Scene.remove_OnJoystickGamepadAxis(Scene this, JoystickGamepadAxisDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnJoystickGamepadPressedAddSceneJoystickGamepadPressedDelegate">
            <summary>Sets the Shim of Scene.add_OnJoystickGamepadPressed(Scene this, JoystickGamepadPressedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnJoystickGamepadPressedRemoveSceneJoystickGamepadPressedDelegate">
            <summary>Sets the Shim of Scene.remove_OnJoystickGamepadPressed(Scene this, JoystickGamepadPressedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnJoystickGamepadReleasedAddSceneJoystickGamepadReleasedDelegate">
            <summary>Sets the Shim of Scene.add_OnJoystickGamepadReleased(Scene this, JoystickGamepadReleasedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnJoystickGamepadReleasedRemoveSceneJoystickGamepadReleasedDelegate">
            <summary>Sets the Shim of Scene.remove_OnJoystickGamepadReleased(Scene this, JoystickGamepadReleasedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnJoystickHatAddSceneJoystickHatDelegate">
            <summary>Sets the Shim of Scene.add_OnJoystickHat(Scene this, JoystickHatDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnJoystickHatRemoveSceneJoystickHatDelegate">
            <summary>Sets the Shim of Scene.remove_OnJoystickHat(Scene this, JoystickHatDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnJoystickPressedAddSceneJoystickPressedDelegate">
            <summary>Sets the Shim of Scene.add_OnJoystickPressed(Scene this, JoystickPressedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnJoystickPressedRemoveSceneJoystickPressedDelegate">
            <summary>Sets the Shim of Scene.remove_OnJoystickPressed(Scene this, JoystickPressedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnJoystickReleasedAddSceneJoystickReleasedDelegate">
            <summary>Sets the Shim of Scene.add_OnJoystickReleased(Scene this, JoystickReleasedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnJoystickReleasedRemoveSceneJoystickReleasedDelegate">
            <summary>Sets the Shim of Scene.remove_OnJoystickReleased(Scene this, JoystickReleasedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnJoystickRemovedAddSceneJoystickRemovedDelegate">
            <summary>Sets the Shim of Scene.add_OnJoystickRemoved(Scene this, JoystickRemovedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnJoystickRemovedRemoveSceneJoystickRemovedDelegate">
            <summary>Sets the Shim of Scene.remove_OnJoystickRemoved(Scene this, JoystickRemovedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnKeyPressedAddSceneKeyPressedDelegate">
            <summary>Sets the Shim of Scene.add_OnKeyPressed(Scene this, KeyPressedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnKeyPressedRemoveSceneKeyPressedDelegate">
            <summary>Sets the Shim of Scene.remove_OnKeyPressed(Scene this, KeyPressedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnKeyReleasedAddSceneKeyReleasedDelegate">
            <summary>Sets the Shim of Scene.add_OnKeyReleased(Scene this, KeyReleasedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnKeyReleasedRemoveSceneKeyReleasedDelegate">
            <summary>Sets the Shim of Scene.remove_OnKeyReleased(Scene this, KeyReleasedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnLoadAddSceneLoadDelegate">
            <summary>Sets the Shim of Scene.add_OnLoad(Scene this, LoadDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnLoadRemoveSceneLoadDelegate">
            <summary>Sets the Shim of Scene.remove_OnLoad(Scene this, LoadDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnLowMemoryAddSceneLowMemoryDelegate">
            <summary>Sets the Shim of Scene.add_OnLowMemory(Scene this, LowMemoryDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnLowMemoryRemoveSceneLowMemoryDelegate">
            <summary>Sets the Shim of Scene.remove_OnLowMemory(Scene this, LowMemoryDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnMouseFocusAddSceneMouseFocusDelegate">
            <summary>Sets the Shim of Scene.add_OnMouseFocus(Scene this, MouseFocusDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnMouseFocusRemoveSceneMouseFocusDelegate">
            <summary>Sets the Shim of Scene.remove_OnMouseFocus(Scene this, MouseFocusDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnMouseMovedAddSceneMouseMovedDelegate">
            <summary>Sets the Shim of Scene.add_OnMouseMoved(Scene this, MouseMovedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnMouseMovedRemoveSceneMouseMovedDelegate">
            <summary>Sets the Shim of Scene.remove_OnMouseMoved(Scene this, MouseMovedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnMousePressedAddSceneMousePressedDelegate">
            <summary>Sets the Shim of Scene.add_OnMousePressed(Scene this, MousePressedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnMousePressedRemoveSceneMousePressedDelegate">
            <summary>Sets the Shim of Scene.remove_OnMousePressed(Scene this, MousePressedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnMouseReleasedAddSceneMouseReleasedDelegate">
            <summary>Sets the Shim of Scene.add_OnMouseReleased(Scene this, MouseReleasedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnMouseReleasedRemoveSceneMouseReleasedDelegate">
            <summary>Sets the Shim of Scene.remove_OnMouseReleased(Scene this, MouseReleasedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnQuitAddSceneQuitDelegate">
            <summary>Sets the Shim of Scene.add_OnQuit(Scene this, QuitDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnQuitRemoveSceneQuitDelegate">
            <summary>Sets the Shim of Scene.remove_OnQuit(Scene this, QuitDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnTextEditingAddSceneTextEditingDelegate">
            <summary>Sets the Shim of Scene.add_OnTextEditing(Scene this, TextEditingDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnTextEditingRemoveSceneTextEditingDelegate">
            <summary>Sets the Shim of Scene.remove_OnTextEditing(Scene this, TextEditingDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnTextInputAddSceneTextInputDelegate">
            <summary>Sets the Shim of Scene.add_OnTextInput(Scene this, TextInputDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnTextInputRemoveSceneTextInputDelegate">
            <summary>Sets the Shim of Scene.remove_OnTextInput(Scene this, TextInputDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnTouchMovedAddSceneTouchMovedDelegate">
            <summary>Sets the Shim of Scene.add_OnTouchMoved(Scene this, TouchMovedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnTouchMovedRemoveSceneTouchMovedDelegate">
            <summary>Sets the Shim of Scene.remove_OnTouchMoved(Scene this, TouchMovedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnTouchPressedAddSceneTouchPressedDelegate">
            <summary>Sets the Shim of Scene.add_OnTouchPressed(Scene this, TouchPressedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnTouchPressedRemoveSceneTouchPressedDelegate">
            <summary>Sets the Shim of Scene.remove_OnTouchPressed(Scene this, TouchPressedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnTouchReleasedAddSceneTouchReleasedDelegate">
            <summary>Sets the Shim of Scene.add_OnTouchReleased(Scene this, TouchReleasedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnTouchReleasedRemoveSceneTouchReleasedDelegate">
            <summary>Sets the Shim of Scene.remove_OnTouchReleased(Scene this, TouchReleasedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnUpdateAddSceneUpdateDelegate">
            <summary>Sets the Shim of Scene.add_OnUpdate(Scene this, UpdateDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnUpdateRemoveSceneUpdateDelegate">
            <summary>Sets the Shim of Scene.remove_OnUpdate(Scene this, UpdateDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnWheelMovedAddSceneWheelMovedDelegate">
            <summary>Sets the Shim of Scene.add_OnWheelMoved(Scene this, WheelMovedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnWheelMovedRemoveSceneWheelMovedDelegate">
            <summary>Sets the Shim of Scene.remove_OnWheelMoved(Scene this, WheelMovedDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnWindowFocusAddSceneWindowFocusDelegate">
            <summary>Sets the Shim of Scene.add_OnWindowFocus(Scene this, WindowFocusDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnWindowFocusRemoveSceneWindowFocusDelegate">
            <summary>Sets the Shim of Scene.remove_OnWindowFocus(Scene this, WindowFocusDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnWindowResizeAddSceneWindowResizeDelegate">
            <summary>Sets the Shim of Scene.add_OnWindowResize(Scene this, WindowResizeDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnWindowResizeRemoveSceneWindowResizeDelegate">
            <summary>Sets the Shim of Scene.remove_OnWindowResize(Scene this, WindowResizeDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnWindowVisibleAddSceneWindowVisibleDelegate">
            <summary>Sets the Shim of Scene.add_OnWindowVisible(Scene this, WindowVisibleDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.OnWindowVisibleRemoveSceneWindowVisibleDelegate">
            <summary>Sets the Shim of Scene.remove_OnWindowVisible(Scene this, WindowVisibleDelegate value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.Quit">
            <summary>Sets the Shim of Scene.Quit(Scene this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimDirectoryDroppedDelegate">
            <summary>Shim type of Love.Scene.DirectoryDroppedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimDirectoryDroppedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimDirectoryDroppedDelegate.#ctor(Love.Scene.DirectoryDroppedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimDirectoryDroppedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimDirectoryDroppedDelegate.AllInstances.BeginInvokeStringAsyncCallbackObject">
            <summary>Sets the Shim of DirectoryDroppedDelegate.BeginInvoke(DirectoryDroppedDelegate this, String path, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimDirectoryDroppedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of DirectoryDroppedDelegate.EndInvoke(DirectoryDroppedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimDirectoryDroppedDelegate.AllInstances.InvokeString">
            <summary>Sets the Shim of DirectoryDroppedDelegate.Invoke(DirectoryDroppedDelegate this, String path)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimDirectoryDroppedDelegate.BeginInvokeStringAsyncCallbackObject">
            <summary>Sets the Shim of DirectoryDroppedDelegate.BeginInvoke(DirectoryDroppedDelegate this, String path, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimDirectoryDroppedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimDirectoryDroppedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimDirectoryDroppedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimDirectoryDroppedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimDirectoryDroppedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimDirectoryDroppedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of DirectoryDroppedDelegate.DirectoryDroppedDelegate(DirectoryDroppedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimDirectoryDroppedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of DirectoryDroppedDelegate.EndInvoke(DirectoryDroppedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimDirectoryDroppedDelegate.InvokeString">
            <summary>Sets the Shim of DirectoryDroppedDelegate.Invoke(DirectoryDroppedDelegate this, String path)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimDrawDelegate">
            <summary>Shim type of Love.Scene.DrawDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimDrawDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimDrawDelegate.#ctor(Love.Scene.DrawDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimDrawDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimDrawDelegate.AllInstances.BeginInvokeAsyncCallbackObject">
            <summary>Sets the Shim of DrawDelegate.BeginInvoke(DrawDelegate this, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimDrawDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of DrawDelegate.EndInvoke(DrawDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimDrawDelegate.AllInstances.Invoke">
            <summary>Sets the Shim of DrawDelegate.Invoke(DrawDelegate this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimDrawDelegate.BeginInvokeAsyncCallbackObject">
            <summary>Sets the Shim of DrawDelegate.BeginInvoke(DrawDelegate this, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimDrawDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimDrawDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimDrawDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimDrawDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimDrawDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimDrawDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of DrawDelegate.DrawDelegate(DrawDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimDrawDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of DrawDelegate.EndInvoke(DrawDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimDrawDelegate.Invoke">
            <summary>Sets the Shim of DrawDelegate.Invoke(DrawDelegate this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimFileDroppedDelegate">
            <summary>Shim type of Love.Scene.FileDroppedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimFileDroppedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimFileDroppedDelegate.#ctor(Love.Scene.FileDroppedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimFileDroppedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimFileDroppedDelegate.AllInstances.BeginInvokeStringAsyncCallbackObject">
            <summary>Sets the Shim of FileDroppedDelegate.BeginInvoke(FileDroppedDelegate this, String fileFilePath, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimFileDroppedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of FileDroppedDelegate.EndInvoke(FileDroppedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimFileDroppedDelegate.AllInstances.InvokeString">
            <summary>Sets the Shim of FileDroppedDelegate.Invoke(FileDroppedDelegate this, String fileFilePath)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimFileDroppedDelegate.BeginInvokeStringAsyncCallbackObject">
            <summary>Sets the Shim of FileDroppedDelegate.BeginInvoke(FileDroppedDelegate this, String fileFilePath, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimFileDroppedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimFileDroppedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimFileDroppedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimFileDroppedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimFileDroppedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimFileDroppedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of FileDroppedDelegate.FileDroppedDelegate(FileDroppedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimFileDroppedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of FileDroppedDelegate.EndInvoke(FileDroppedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimFileDroppedDelegate.InvokeString">
            <summary>Sets the Shim of FileDroppedDelegate.Invoke(FileDroppedDelegate this, String fileFilePath)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimJoystickAddedDelegate">
            <summary>Shim type of Love.Scene.JoystickAddedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickAddedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickAddedDelegate.#ctor(Love.Scene.JoystickAddedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimJoystickAddedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickAddedDelegate.AllInstances.BeginInvokeJoystickAsyncCallbackObject">
            <summary>Sets the Shim of JoystickAddedDelegate.BeginInvoke(JoystickAddedDelegate this, Joystick joystick, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickAddedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickAddedDelegate.EndInvoke(JoystickAddedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickAddedDelegate.AllInstances.InvokeJoystick">
            <summary>Sets the Shim of JoystickAddedDelegate.Invoke(JoystickAddedDelegate this, Joystick joystick)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickAddedDelegate.BeginInvokeJoystickAsyncCallbackObject">
            <summary>Sets the Shim of JoystickAddedDelegate.BeginInvoke(JoystickAddedDelegate this, Joystick joystick, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickAddedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickAddedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickAddedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickAddedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickAddedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickAddedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of JoystickAddedDelegate.JoystickAddedDelegate(JoystickAddedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickAddedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickAddedDelegate.EndInvoke(JoystickAddedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickAddedDelegate.InvokeJoystick">
            <summary>Sets the Shim of JoystickAddedDelegate.Invoke(JoystickAddedDelegate this, Joystick joystick)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimJoystickAxisDelegate">
            <summary>Shim type of Love.Scene.JoystickAxisDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickAxisDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickAxisDelegate.#ctor(Love.Scene.JoystickAxisDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimJoystickAxisDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickAxisDelegate.AllInstances.BeginInvokeJoystickSingleSingleAsyncCallbackObject">
            <summary>Sets the Shim of JoystickAxisDelegate.BeginInvoke(JoystickAxisDelegate this, Joystick joystick, Single axis, Single value, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickAxisDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickAxisDelegate.EndInvoke(JoystickAxisDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickAxisDelegate.AllInstances.InvokeJoystickSingleSingle">
            <summary>Sets the Shim of JoystickAxisDelegate.Invoke(JoystickAxisDelegate this, Joystick joystick, Single axis, Single value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickAxisDelegate.BeginInvokeJoystickSingleSingleAsyncCallbackObject">
            <summary>Sets the Shim of JoystickAxisDelegate.BeginInvoke(JoystickAxisDelegate this, Joystick joystick, Single axis, Single value, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickAxisDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickAxisDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickAxisDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickAxisDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickAxisDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickAxisDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of JoystickAxisDelegate.JoystickAxisDelegate(JoystickAxisDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickAxisDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickAxisDelegate.EndInvoke(JoystickAxisDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickAxisDelegate.InvokeJoystickSingleSingle">
            <summary>Sets the Shim of JoystickAxisDelegate.Invoke(JoystickAxisDelegate this, Joystick joystick, Single axis, Single value)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimJoystickGamepadAxisDelegate">
            <summary>Shim type of Love.Scene.JoystickGamepadAxisDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickGamepadAxisDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickGamepadAxisDelegate.#ctor(Love.Scene.JoystickGamepadAxisDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimJoystickGamepadAxisDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickGamepadAxisDelegate.AllInstances.BeginInvokeJoystickGamepadAxisSingleAsyncCallbackObject">
            <summary>Sets the Shim of JoystickGamepadAxisDelegate.BeginInvoke(JoystickGamepadAxisDelegate this, Joystick joystick, GamepadAxis axis, Single value, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickGamepadAxisDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickGamepadAxisDelegate.EndInvoke(JoystickGamepadAxisDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickGamepadAxisDelegate.AllInstances.InvokeJoystickGamepadAxisSingle">
            <summary>Sets the Shim of JoystickGamepadAxisDelegate.Invoke(JoystickGamepadAxisDelegate this, Joystick joystick, GamepadAxis axis, Single value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickGamepadAxisDelegate.BeginInvokeJoystickGamepadAxisSingleAsyncCallbackObject">
            <summary>Sets the Shim of JoystickGamepadAxisDelegate.BeginInvoke(JoystickGamepadAxisDelegate this, Joystick joystick, GamepadAxis axis, Single value, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickGamepadAxisDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickGamepadAxisDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickGamepadAxisDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickGamepadAxisDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickGamepadAxisDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickGamepadAxisDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of JoystickGamepadAxisDelegate.JoystickGamepadAxisDelegate(JoystickGamepadAxisDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickGamepadAxisDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickGamepadAxisDelegate.EndInvoke(JoystickGamepadAxisDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickGamepadAxisDelegate.InvokeJoystickGamepadAxisSingle">
            <summary>Sets the Shim of JoystickGamepadAxisDelegate.Invoke(JoystickGamepadAxisDelegate this, Joystick joystick, GamepadAxis axis, Single value)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimJoystickGamepadPressedDelegate">
            <summary>Shim type of Love.Scene.JoystickGamepadPressedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickGamepadPressedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickGamepadPressedDelegate.#ctor(Love.Scene.JoystickGamepadPressedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimJoystickGamepadPressedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickGamepadPressedDelegate.AllInstances.BeginInvokeJoystickGamepadButtonAsyncCallbackObject">
            <summary>Sets the Shim of JoystickGamepadPressedDelegate.BeginInvoke(JoystickGamepadPressedDelegate this, Joystick joystick, GamepadButton button, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickGamepadPressedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickGamepadPressedDelegate.EndInvoke(JoystickGamepadPressedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickGamepadPressedDelegate.AllInstances.InvokeJoystickGamepadButton">
            <summary>Sets the Shim of JoystickGamepadPressedDelegate.Invoke(JoystickGamepadPressedDelegate this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickGamepadPressedDelegate.BeginInvokeJoystickGamepadButtonAsyncCallbackObject">
            <summary>Sets the Shim of JoystickGamepadPressedDelegate.BeginInvoke(JoystickGamepadPressedDelegate this, Joystick joystick, GamepadButton button, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickGamepadPressedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickGamepadPressedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickGamepadPressedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickGamepadPressedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickGamepadPressedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickGamepadPressedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of JoystickGamepadPressedDelegate.JoystickGamepadPressedDelegate(JoystickGamepadPressedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickGamepadPressedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickGamepadPressedDelegate.EndInvoke(JoystickGamepadPressedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickGamepadPressedDelegate.InvokeJoystickGamepadButton">
            <summary>Sets the Shim of JoystickGamepadPressedDelegate.Invoke(JoystickGamepadPressedDelegate this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimJoystickGamepadReleasedDelegate">
            <summary>Shim type of Love.Scene.JoystickGamepadReleasedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickGamepadReleasedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickGamepadReleasedDelegate.#ctor(Love.Scene.JoystickGamepadReleasedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimJoystickGamepadReleasedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickGamepadReleasedDelegate.AllInstances.BeginInvokeJoystickGamepadButtonAsyncCallbackObject">
            <summary>Sets the Shim of JoystickGamepadReleasedDelegate.BeginInvoke(JoystickGamepadReleasedDelegate this, Joystick joystick, GamepadButton button, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickGamepadReleasedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickGamepadReleasedDelegate.EndInvoke(JoystickGamepadReleasedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickGamepadReleasedDelegate.AllInstances.InvokeJoystickGamepadButton">
            <summary>Sets the Shim of JoystickGamepadReleasedDelegate.Invoke(JoystickGamepadReleasedDelegate this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickGamepadReleasedDelegate.BeginInvokeJoystickGamepadButtonAsyncCallbackObject">
            <summary>Sets the Shim of JoystickGamepadReleasedDelegate.BeginInvoke(JoystickGamepadReleasedDelegate this, Joystick joystick, GamepadButton button, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickGamepadReleasedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickGamepadReleasedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickGamepadReleasedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickGamepadReleasedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickGamepadReleasedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickGamepadReleasedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of JoystickGamepadReleasedDelegate.JoystickGamepadReleasedDelegate(JoystickGamepadReleasedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickGamepadReleasedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickGamepadReleasedDelegate.EndInvoke(JoystickGamepadReleasedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickGamepadReleasedDelegate.InvokeJoystickGamepadButton">
            <summary>Sets the Shim of JoystickGamepadReleasedDelegate.Invoke(JoystickGamepadReleasedDelegate this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimJoystickHatDelegate">
            <summary>Shim type of Love.Scene.JoystickHatDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickHatDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickHatDelegate.#ctor(Love.Scene.JoystickHatDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimJoystickHatDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickHatDelegate.AllInstances.BeginInvokeJoystickInt32JoystickHatAsyncCallbackObject">
            <summary>Sets the Shim of JoystickHatDelegate.BeginInvoke(JoystickHatDelegate this, Joystick joystick, Int32 hat, JoystickHat direction, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickHatDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickHatDelegate.EndInvoke(JoystickHatDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickHatDelegate.AllInstances.InvokeJoystickInt32JoystickHat">
            <summary>Sets the Shim of JoystickHatDelegate.Invoke(JoystickHatDelegate this, Joystick joystick, Int32 hat, JoystickHat direction)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickHatDelegate.BeginInvokeJoystickInt32JoystickHatAsyncCallbackObject">
            <summary>Sets the Shim of JoystickHatDelegate.BeginInvoke(JoystickHatDelegate this, Joystick joystick, Int32 hat, JoystickHat direction, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickHatDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickHatDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickHatDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickHatDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickHatDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickHatDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of JoystickHatDelegate.JoystickHatDelegate(JoystickHatDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickHatDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickHatDelegate.EndInvoke(JoystickHatDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickHatDelegate.InvokeJoystickInt32JoystickHat">
            <summary>Sets the Shim of JoystickHatDelegate.Invoke(JoystickHatDelegate this, Joystick joystick, Int32 hat, JoystickHat direction)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimJoystickPressedDelegate">
            <summary>Shim type of Love.Scene.JoystickPressedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickPressedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickPressedDelegate.#ctor(Love.Scene.JoystickPressedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimJoystickPressedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickPressedDelegate.AllInstances.BeginInvokeJoystickInt32AsyncCallbackObject">
            <summary>Sets the Shim of JoystickPressedDelegate.BeginInvoke(JoystickPressedDelegate this, Joystick joystick, Int32 button, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickPressedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickPressedDelegate.EndInvoke(JoystickPressedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickPressedDelegate.AllInstances.InvokeJoystickInt32">
            <summary>Sets the Shim of JoystickPressedDelegate.Invoke(JoystickPressedDelegate this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickPressedDelegate.BeginInvokeJoystickInt32AsyncCallbackObject">
            <summary>Sets the Shim of JoystickPressedDelegate.BeginInvoke(JoystickPressedDelegate this, Joystick joystick, Int32 button, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickPressedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickPressedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickPressedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickPressedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickPressedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickPressedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of JoystickPressedDelegate.JoystickPressedDelegate(JoystickPressedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickPressedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickPressedDelegate.EndInvoke(JoystickPressedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickPressedDelegate.InvokeJoystickInt32">
            <summary>Sets the Shim of JoystickPressedDelegate.Invoke(JoystickPressedDelegate this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimJoystickReleasedDelegate">
            <summary>Shim type of Love.Scene.JoystickReleasedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickReleasedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickReleasedDelegate.#ctor(Love.Scene.JoystickReleasedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimJoystickReleasedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickReleasedDelegate.AllInstances.BeginInvokeJoystickInt32AsyncCallbackObject">
            <summary>Sets the Shim of JoystickReleasedDelegate.BeginInvoke(JoystickReleasedDelegate this, Joystick joystick, Int32 button, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickReleasedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickReleasedDelegate.EndInvoke(JoystickReleasedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickReleasedDelegate.AllInstances.InvokeJoystickInt32">
            <summary>Sets the Shim of JoystickReleasedDelegate.Invoke(JoystickReleasedDelegate this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickReleasedDelegate.BeginInvokeJoystickInt32AsyncCallbackObject">
            <summary>Sets the Shim of JoystickReleasedDelegate.BeginInvoke(JoystickReleasedDelegate this, Joystick joystick, Int32 button, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickReleasedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickReleasedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickReleasedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickReleasedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickReleasedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickReleasedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of JoystickReleasedDelegate.JoystickReleasedDelegate(JoystickReleasedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickReleasedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickReleasedDelegate.EndInvoke(JoystickReleasedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickReleasedDelegate.InvokeJoystickInt32">
            <summary>Sets the Shim of JoystickReleasedDelegate.Invoke(JoystickReleasedDelegate this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimJoystickRemovedDelegate">
            <summary>Shim type of Love.Scene.JoystickRemovedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickRemovedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickRemovedDelegate.#ctor(Love.Scene.JoystickRemovedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimJoystickRemovedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickRemovedDelegate.AllInstances.BeginInvokeJoystickAsyncCallbackObject">
            <summary>Sets the Shim of JoystickRemovedDelegate.BeginInvoke(JoystickRemovedDelegate this, Joystick joystick, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickRemovedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickRemovedDelegate.EndInvoke(JoystickRemovedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickRemovedDelegate.AllInstances.InvokeJoystick">
            <summary>Sets the Shim of JoystickRemovedDelegate.Invoke(JoystickRemovedDelegate this, Joystick joystick)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickRemovedDelegate.BeginInvokeJoystickAsyncCallbackObject">
            <summary>Sets the Shim of JoystickRemovedDelegate.BeginInvoke(JoystickRemovedDelegate this, Joystick joystick, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickRemovedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickRemovedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickRemovedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickRemovedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimJoystickRemovedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickRemovedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of JoystickRemovedDelegate.JoystickRemovedDelegate(JoystickRemovedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickRemovedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of JoystickRemovedDelegate.EndInvoke(JoystickRemovedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimJoystickRemovedDelegate.InvokeJoystick">
            <summary>Sets the Shim of JoystickRemovedDelegate.Invoke(JoystickRemovedDelegate this, Joystick joystick)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimKeyPressedDelegate">
            <summary>Shim type of Love.Scene.KeyPressedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimKeyPressedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimKeyPressedDelegate.#ctor(Love.Scene.KeyPressedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimKeyPressedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimKeyPressedDelegate.AllInstances.BeginInvokeKeyConstantScancodeBooleanAsyncCallbackObject">
            <summary>Sets the Shim of KeyPressedDelegate.BeginInvoke(KeyPressedDelegate this, KeyConstant key, Scancode scancode, Boolean isRepeat, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimKeyPressedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of KeyPressedDelegate.EndInvoke(KeyPressedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimKeyPressedDelegate.AllInstances.InvokeKeyConstantScancodeBoolean">
            <summary>Sets the Shim of KeyPressedDelegate.Invoke(KeyPressedDelegate this, KeyConstant key, Scancode scancode, Boolean isRepeat)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimKeyPressedDelegate.BeginInvokeKeyConstantScancodeBooleanAsyncCallbackObject">
            <summary>Sets the Shim of KeyPressedDelegate.BeginInvoke(KeyPressedDelegate this, KeyConstant key, Scancode scancode, Boolean isRepeat, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimKeyPressedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimKeyPressedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimKeyPressedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimKeyPressedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimKeyPressedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimKeyPressedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of KeyPressedDelegate.KeyPressedDelegate(KeyPressedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimKeyPressedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of KeyPressedDelegate.EndInvoke(KeyPressedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimKeyPressedDelegate.InvokeKeyConstantScancodeBoolean">
            <summary>Sets the Shim of KeyPressedDelegate.Invoke(KeyPressedDelegate this, KeyConstant key, Scancode scancode, Boolean isRepeat)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimKeyReleasedDelegate">
            <summary>Shim type of Love.Scene.KeyReleasedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimKeyReleasedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimKeyReleasedDelegate.#ctor(Love.Scene.KeyReleasedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimKeyReleasedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimKeyReleasedDelegate.AllInstances.BeginInvokeKeyConstantScancodeAsyncCallbackObject">
            <summary>Sets the Shim of KeyReleasedDelegate.BeginInvoke(KeyReleasedDelegate this, KeyConstant key, Scancode scancode, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimKeyReleasedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of KeyReleasedDelegate.EndInvoke(KeyReleasedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimKeyReleasedDelegate.AllInstances.InvokeKeyConstantScancode">
            <summary>Sets the Shim of KeyReleasedDelegate.Invoke(KeyReleasedDelegate this, KeyConstant key, Scancode scancode)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimKeyReleasedDelegate.BeginInvokeKeyConstantScancodeAsyncCallbackObject">
            <summary>Sets the Shim of KeyReleasedDelegate.BeginInvoke(KeyReleasedDelegate this, KeyConstant key, Scancode scancode, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimKeyReleasedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimKeyReleasedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimKeyReleasedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimKeyReleasedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimKeyReleasedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimKeyReleasedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of KeyReleasedDelegate.KeyReleasedDelegate(KeyReleasedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimKeyReleasedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of KeyReleasedDelegate.EndInvoke(KeyReleasedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimKeyReleasedDelegate.InvokeKeyConstantScancode">
            <summary>Sets the Shim of KeyReleasedDelegate.Invoke(KeyReleasedDelegate this, KeyConstant key, Scancode scancode)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimLoadDelegate">
            <summary>Shim type of Love.Scene.LoadDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimLoadDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimLoadDelegate.#ctor(Love.Scene.LoadDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimLoadDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimLoadDelegate.AllInstances.BeginInvokeAsyncCallbackObject">
            <summary>Sets the Shim of LoadDelegate.BeginInvoke(LoadDelegate this, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimLoadDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of LoadDelegate.EndInvoke(LoadDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimLoadDelegate.AllInstances.Invoke">
            <summary>Sets the Shim of LoadDelegate.Invoke(LoadDelegate this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimLoadDelegate.BeginInvokeAsyncCallbackObject">
            <summary>Sets the Shim of LoadDelegate.BeginInvoke(LoadDelegate this, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimLoadDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimLoadDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimLoadDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimLoadDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimLoadDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimLoadDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of LoadDelegate.LoadDelegate(LoadDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimLoadDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of LoadDelegate.EndInvoke(LoadDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimLoadDelegate.Invoke">
            <summary>Sets the Shim of LoadDelegate.Invoke(LoadDelegate this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimLowMemoryDelegate">
            <summary>Shim type of Love.Scene.LowMemoryDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimLowMemoryDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimLowMemoryDelegate.#ctor(Love.Scene.LowMemoryDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimLowMemoryDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimLowMemoryDelegate.AllInstances.BeginInvokeAsyncCallbackObject">
            <summary>Sets the Shim of LowMemoryDelegate.BeginInvoke(LowMemoryDelegate this, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimLowMemoryDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of LowMemoryDelegate.EndInvoke(LowMemoryDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimLowMemoryDelegate.AllInstances.Invoke">
            <summary>Sets the Shim of LowMemoryDelegate.Invoke(LowMemoryDelegate this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimLowMemoryDelegate.BeginInvokeAsyncCallbackObject">
            <summary>Sets the Shim of LowMemoryDelegate.BeginInvoke(LowMemoryDelegate this, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimLowMemoryDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimLowMemoryDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimLowMemoryDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimLowMemoryDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimLowMemoryDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimLowMemoryDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of LowMemoryDelegate.LowMemoryDelegate(LowMemoryDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimLowMemoryDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of LowMemoryDelegate.EndInvoke(LowMemoryDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimLowMemoryDelegate.Invoke">
            <summary>Sets the Shim of LowMemoryDelegate.Invoke(LowMemoryDelegate this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimMouseFocusDelegate">
            <summary>Shim type of Love.Scene.MouseFocusDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimMouseFocusDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimMouseFocusDelegate.#ctor(Love.Scene.MouseFocusDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimMouseFocusDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMouseFocusDelegate.AllInstances.BeginInvokeBooleanAsyncCallbackObject">
            <summary>Sets the Shim of MouseFocusDelegate.BeginInvoke(MouseFocusDelegate this, Boolean focus, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMouseFocusDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of MouseFocusDelegate.EndInvoke(MouseFocusDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMouseFocusDelegate.AllInstances.InvokeBoolean">
            <summary>Sets the Shim of MouseFocusDelegate.Invoke(MouseFocusDelegate this, Boolean focus)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMouseFocusDelegate.BeginInvokeBooleanAsyncCallbackObject">
            <summary>Sets the Shim of MouseFocusDelegate.BeginInvoke(MouseFocusDelegate this, Boolean focus, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimMouseFocusDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimMouseFocusDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMouseFocusDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimMouseFocusDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimMouseFocusDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMouseFocusDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of MouseFocusDelegate.MouseFocusDelegate(MouseFocusDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMouseFocusDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of MouseFocusDelegate.EndInvoke(MouseFocusDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMouseFocusDelegate.InvokeBoolean">
            <summary>Sets the Shim of MouseFocusDelegate.Invoke(MouseFocusDelegate this, Boolean focus)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimMouseMovedDelegate">
            <summary>Shim type of Love.Scene.MouseMovedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimMouseMovedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimMouseMovedDelegate.#ctor(Love.Scene.MouseMovedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimMouseMovedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMouseMovedDelegate.AllInstances.BeginInvokeSingleSingleSingleSingleBooleanAsyncCallbackObject">
            <summary>Sets the Shim of MouseMovedDelegate.BeginInvoke(MouseMovedDelegate this, Single x, Single y, Single dx, Single dy, Boolean isTouch, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMouseMovedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of MouseMovedDelegate.EndInvoke(MouseMovedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMouseMovedDelegate.AllInstances.InvokeSingleSingleSingleSingleBoolean">
            <summary>Sets the Shim of MouseMovedDelegate.Invoke(MouseMovedDelegate this, Single x, Single y, Single dx, Single dy, Boolean isTouch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMouseMovedDelegate.BeginInvokeSingleSingleSingleSingleBooleanAsyncCallbackObject">
            <summary>Sets the Shim of MouseMovedDelegate.BeginInvoke(MouseMovedDelegate this, Single x, Single y, Single dx, Single dy, Boolean isTouch, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimMouseMovedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimMouseMovedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMouseMovedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimMouseMovedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimMouseMovedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMouseMovedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of MouseMovedDelegate.MouseMovedDelegate(MouseMovedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMouseMovedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of MouseMovedDelegate.EndInvoke(MouseMovedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMouseMovedDelegate.InvokeSingleSingleSingleSingleBoolean">
            <summary>Sets the Shim of MouseMovedDelegate.Invoke(MouseMovedDelegate this, Single x, Single y, Single dx, Single dy, Boolean isTouch)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimMousePressedDelegate">
            <summary>Shim type of Love.Scene.MousePressedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimMousePressedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimMousePressedDelegate.#ctor(Love.Scene.MousePressedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimMousePressedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMousePressedDelegate.AllInstances.BeginInvokeSingleSingleInt32BooleanAsyncCallbackObject">
            <summary>Sets the Shim of MousePressedDelegate.BeginInvoke(MousePressedDelegate this, Single x, Single y, Int32 button, Boolean isTouch, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMousePressedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of MousePressedDelegate.EndInvoke(MousePressedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMousePressedDelegate.AllInstances.InvokeSingleSingleInt32Boolean">
            <summary>Sets the Shim of MousePressedDelegate.Invoke(MousePressedDelegate this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMousePressedDelegate.BeginInvokeSingleSingleInt32BooleanAsyncCallbackObject">
            <summary>Sets the Shim of MousePressedDelegate.BeginInvoke(MousePressedDelegate this, Single x, Single y, Int32 button, Boolean isTouch, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimMousePressedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimMousePressedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMousePressedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimMousePressedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimMousePressedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMousePressedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of MousePressedDelegate.MousePressedDelegate(MousePressedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMousePressedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of MousePressedDelegate.EndInvoke(MousePressedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMousePressedDelegate.InvokeSingleSingleInt32Boolean">
            <summary>Sets the Shim of MousePressedDelegate.Invoke(MousePressedDelegate this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimMouseReleasedDelegate">
            <summary>Shim type of Love.Scene.MouseReleasedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimMouseReleasedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimMouseReleasedDelegate.#ctor(Love.Scene.MouseReleasedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimMouseReleasedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMouseReleasedDelegate.AllInstances.BeginInvokeSingleSingleInt32BooleanAsyncCallbackObject">
            <summary>Sets the Shim of MouseReleasedDelegate.BeginInvoke(MouseReleasedDelegate this, Single x, Single y, Int32 button, Boolean isTouch, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMouseReleasedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of MouseReleasedDelegate.EndInvoke(MouseReleasedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMouseReleasedDelegate.AllInstances.InvokeSingleSingleInt32Boolean">
            <summary>Sets the Shim of MouseReleasedDelegate.Invoke(MouseReleasedDelegate this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMouseReleasedDelegate.BeginInvokeSingleSingleInt32BooleanAsyncCallbackObject">
            <summary>Sets the Shim of MouseReleasedDelegate.BeginInvoke(MouseReleasedDelegate this, Single x, Single y, Int32 button, Boolean isTouch, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimMouseReleasedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimMouseReleasedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMouseReleasedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimMouseReleasedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimMouseReleasedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMouseReleasedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of MouseReleasedDelegate.MouseReleasedDelegate(MouseReleasedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMouseReleasedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of MouseReleasedDelegate.EndInvoke(MouseReleasedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimMouseReleasedDelegate.InvokeSingleSingleInt32Boolean">
            <summary>Sets the Shim of MouseReleasedDelegate.Invoke(MouseReleasedDelegate this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimQuitDelegate">
            <summary>Shim type of Love.Scene.QuitDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimQuitDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimQuitDelegate.#ctor(Love.Scene.QuitDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimQuitDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimQuitDelegate.AllInstances.BeginInvokeAsyncCallbackObject">
            <summary>Sets the Shim of QuitDelegate.BeginInvoke(QuitDelegate this, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimQuitDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of QuitDelegate.EndInvoke(QuitDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimQuitDelegate.AllInstances.Invoke">
            <summary>Sets the Shim of QuitDelegate.Invoke(QuitDelegate this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimQuitDelegate.BeginInvokeAsyncCallbackObject">
            <summary>Sets the Shim of QuitDelegate.BeginInvoke(QuitDelegate this, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimQuitDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimQuitDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimQuitDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimQuitDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimQuitDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimQuitDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of QuitDelegate.QuitDelegate(QuitDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimQuitDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of QuitDelegate.EndInvoke(QuitDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimQuitDelegate.Invoke">
            <summary>Sets the Shim of QuitDelegate.Invoke(QuitDelegate this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimTextEditingDelegate">
            <summary>Shim type of Love.Scene.TextEditingDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTextEditingDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTextEditingDelegate.#ctor(Love.Scene.TextEditingDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimTextEditingDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTextEditingDelegate.AllInstances.BeginInvokeStringInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of TextEditingDelegate.BeginInvoke(TextEditingDelegate this, String text, Int32 start, Int32 end, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTextEditingDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of TextEditingDelegate.EndInvoke(TextEditingDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTextEditingDelegate.AllInstances.InvokeStringInt32Int32">
            <summary>Sets the Shim of TextEditingDelegate.Invoke(TextEditingDelegate this, String text, Int32 start, Int32 end)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTextEditingDelegate.BeginInvokeStringInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of TextEditingDelegate.BeginInvoke(TextEditingDelegate this, String text, Int32 start, Int32 end, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTextEditingDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTextEditingDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTextEditingDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTextEditingDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTextEditingDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTextEditingDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of TextEditingDelegate.TextEditingDelegate(TextEditingDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTextEditingDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of TextEditingDelegate.EndInvoke(TextEditingDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTextEditingDelegate.InvokeStringInt32Int32">
            <summary>Sets the Shim of TextEditingDelegate.Invoke(TextEditingDelegate this, String text, Int32 start, Int32 end)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimTextInputDelegate">
            <summary>Shim type of Love.Scene.TextInputDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTextInputDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTextInputDelegate.#ctor(Love.Scene.TextInputDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimTextInputDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTextInputDelegate.AllInstances.BeginInvokeStringAsyncCallbackObject">
            <summary>Sets the Shim of TextInputDelegate.BeginInvoke(TextInputDelegate this, String text, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTextInputDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of TextInputDelegate.EndInvoke(TextInputDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTextInputDelegate.AllInstances.InvokeString">
            <summary>Sets the Shim of TextInputDelegate.Invoke(TextInputDelegate this, String text)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTextInputDelegate.BeginInvokeStringAsyncCallbackObject">
            <summary>Sets the Shim of TextInputDelegate.BeginInvoke(TextInputDelegate this, String text, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTextInputDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTextInputDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTextInputDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTextInputDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTextInputDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTextInputDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of TextInputDelegate.TextInputDelegate(TextInputDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTextInputDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of TextInputDelegate.EndInvoke(TextInputDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTextInputDelegate.InvokeString">
            <summary>Sets the Shim of TextInputDelegate.Invoke(TextInputDelegate this, String text)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimTouchMovedDelegate">
            <summary>Shim type of Love.Scene.TouchMovedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTouchMovedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTouchMovedDelegate.#ctor(Love.Scene.TouchMovedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimTouchMovedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTouchMovedDelegate.AllInstances.BeginInvokeInt64SingleSingleSingleSingleSingleAsyncCallbackObject">
            <summary>Sets the Shim of TouchMovedDelegate.BeginInvoke(TouchMovedDelegate this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTouchMovedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of TouchMovedDelegate.EndInvoke(TouchMovedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTouchMovedDelegate.AllInstances.InvokeInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of TouchMovedDelegate.Invoke(TouchMovedDelegate this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTouchMovedDelegate.BeginInvokeInt64SingleSingleSingleSingleSingleAsyncCallbackObject">
            <summary>Sets the Shim of TouchMovedDelegate.BeginInvoke(TouchMovedDelegate this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTouchMovedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTouchMovedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTouchMovedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTouchMovedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTouchMovedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTouchMovedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of TouchMovedDelegate.TouchMovedDelegate(TouchMovedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTouchMovedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of TouchMovedDelegate.EndInvoke(TouchMovedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTouchMovedDelegate.InvokeInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of TouchMovedDelegate.Invoke(TouchMovedDelegate this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimTouchPressedDelegate">
            <summary>Shim type of Love.Scene.TouchPressedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTouchPressedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTouchPressedDelegate.#ctor(Love.Scene.TouchPressedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimTouchPressedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTouchPressedDelegate.AllInstances.BeginInvokeInt64SingleSingleSingleSingleSingleAsyncCallbackObject">
            <summary>Sets the Shim of TouchPressedDelegate.BeginInvoke(TouchPressedDelegate this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTouchPressedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of TouchPressedDelegate.EndInvoke(TouchPressedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTouchPressedDelegate.AllInstances.InvokeInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of TouchPressedDelegate.Invoke(TouchPressedDelegate this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTouchPressedDelegate.BeginInvokeInt64SingleSingleSingleSingleSingleAsyncCallbackObject">
            <summary>Sets the Shim of TouchPressedDelegate.BeginInvoke(TouchPressedDelegate this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTouchPressedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTouchPressedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTouchPressedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTouchPressedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTouchPressedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTouchPressedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of TouchPressedDelegate.TouchPressedDelegate(TouchPressedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTouchPressedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of TouchPressedDelegate.EndInvoke(TouchPressedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTouchPressedDelegate.InvokeInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of TouchPressedDelegate.Invoke(TouchPressedDelegate this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimTouchReleasedDelegate">
            <summary>Shim type of Love.Scene.TouchReleasedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTouchReleasedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTouchReleasedDelegate.#ctor(Love.Scene.TouchReleasedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimTouchReleasedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTouchReleasedDelegate.AllInstances.BeginInvokeInt64SingleSingleSingleSingleSingleAsyncCallbackObject">
            <summary>Sets the Shim of TouchReleasedDelegate.BeginInvoke(TouchReleasedDelegate this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTouchReleasedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of TouchReleasedDelegate.EndInvoke(TouchReleasedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTouchReleasedDelegate.AllInstances.InvokeInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of TouchReleasedDelegate.Invoke(TouchReleasedDelegate this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTouchReleasedDelegate.BeginInvokeInt64SingleSingleSingleSingleSingleAsyncCallbackObject">
            <summary>Sets the Shim of TouchReleasedDelegate.BeginInvoke(TouchReleasedDelegate this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTouchReleasedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTouchReleasedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTouchReleasedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTouchReleasedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimTouchReleasedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTouchReleasedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of TouchReleasedDelegate.TouchReleasedDelegate(TouchReleasedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTouchReleasedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of TouchReleasedDelegate.EndInvoke(TouchReleasedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimTouchReleasedDelegate.InvokeInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of TouchReleasedDelegate.Invoke(TouchReleasedDelegate this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimUpdateDelegate">
            <summary>Shim type of Love.Scene.UpdateDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimUpdateDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimUpdateDelegate.#ctor(Love.Scene.UpdateDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimUpdateDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimUpdateDelegate.AllInstances.BeginInvokeSingleAsyncCallbackObject">
            <summary>Sets the Shim of UpdateDelegate.BeginInvoke(UpdateDelegate this, Single dt, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimUpdateDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of UpdateDelegate.EndInvoke(UpdateDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimUpdateDelegate.AllInstances.InvokeSingle">
            <summary>Sets the Shim of UpdateDelegate.Invoke(UpdateDelegate this, Single dt)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimUpdateDelegate.BeginInvokeSingleAsyncCallbackObject">
            <summary>Sets the Shim of UpdateDelegate.BeginInvoke(UpdateDelegate this, Single dt, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimUpdateDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimUpdateDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimUpdateDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimUpdateDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimUpdateDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimUpdateDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of UpdateDelegate.UpdateDelegate(UpdateDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimUpdateDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of UpdateDelegate.EndInvoke(UpdateDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimUpdateDelegate.InvokeSingle">
            <summary>Sets the Shim of UpdateDelegate.Invoke(UpdateDelegate this, Single dt)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimWheelMovedDelegate">
            <summary>Shim type of Love.Scene.WheelMovedDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimWheelMovedDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimWheelMovedDelegate.#ctor(Love.Scene.WheelMovedDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimWheelMovedDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWheelMovedDelegate.AllInstances.BeginInvokeInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of WheelMovedDelegate.BeginInvoke(WheelMovedDelegate this, Int32 x, Int32 y, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWheelMovedDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of WheelMovedDelegate.EndInvoke(WheelMovedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWheelMovedDelegate.AllInstances.InvokeInt32Int32">
            <summary>Sets the Shim of WheelMovedDelegate.Invoke(WheelMovedDelegate this, Int32 x, Int32 y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWheelMovedDelegate.BeginInvokeInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of WheelMovedDelegate.BeginInvoke(WheelMovedDelegate this, Int32 x, Int32 y, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimWheelMovedDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimWheelMovedDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWheelMovedDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimWheelMovedDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimWheelMovedDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWheelMovedDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of WheelMovedDelegate.WheelMovedDelegate(WheelMovedDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWheelMovedDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of WheelMovedDelegate.EndInvoke(WheelMovedDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWheelMovedDelegate.InvokeInt32Int32">
            <summary>Sets the Shim of WheelMovedDelegate.Invoke(WheelMovedDelegate this, Int32 x, Int32 y)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimWindowFocusDelegate">
            <summary>Shim type of Love.Scene.WindowFocusDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimWindowFocusDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimWindowFocusDelegate.#ctor(Love.Scene.WindowFocusDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimWindowFocusDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWindowFocusDelegate.AllInstances.BeginInvokeBooleanAsyncCallbackObject">
            <summary>Sets the Shim of WindowFocusDelegate.BeginInvoke(WindowFocusDelegate this, Boolean focus, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWindowFocusDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of WindowFocusDelegate.EndInvoke(WindowFocusDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWindowFocusDelegate.AllInstances.InvokeBoolean">
            <summary>Sets the Shim of WindowFocusDelegate.Invoke(WindowFocusDelegate this, Boolean focus)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWindowFocusDelegate.BeginInvokeBooleanAsyncCallbackObject">
            <summary>Sets the Shim of WindowFocusDelegate.BeginInvoke(WindowFocusDelegate this, Boolean focus, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimWindowFocusDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimWindowFocusDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWindowFocusDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimWindowFocusDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimWindowFocusDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWindowFocusDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of WindowFocusDelegate.WindowFocusDelegate(WindowFocusDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWindowFocusDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of WindowFocusDelegate.EndInvoke(WindowFocusDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWindowFocusDelegate.InvokeBoolean">
            <summary>Sets the Shim of WindowFocusDelegate.Invoke(WindowFocusDelegate this, Boolean focus)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimWindowResizeDelegate">
            <summary>Shim type of Love.Scene.WindowResizeDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimWindowResizeDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimWindowResizeDelegate.#ctor(Love.Scene.WindowResizeDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimWindowResizeDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWindowResizeDelegate.AllInstances.BeginInvokeInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of WindowResizeDelegate.BeginInvoke(WindowResizeDelegate this, Int32 w, Int32 h, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWindowResizeDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of WindowResizeDelegate.EndInvoke(WindowResizeDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWindowResizeDelegate.AllInstances.InvokeInt32Int32">
            <summary>Sets the Shim of WindowResizeDelegate.Invoke(WindowResizeDelegate this, Int32 w, Int32 h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWindowResizeDelegate.BeginInvokeInt32Int32AsyncCallbackObject">
            <summary>Sets the Shim of WindowResizeDelegate.BeginInvoke(WindowResizeDelegate this, Int32 w, Int32 h, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimWindowResizeDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimWindowResizeDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWindowResizeDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimWindowResizeDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimWindowResizeDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWindowResizeDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of WindowResizeDelegate.WindowResizeDelegate(WindowResizeDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWindowResizeDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of WindowResizeDelegate.EndInvoke(WindowResizeDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWindowResizeDelegate.InvokeInt32Int32">
            <summary>Sets the Shim of WindowResizeDelegate.Invoke(WindowResizeDelegate this, Int32 w, Int32 h)</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimWindowVisibleDelegate">
            <summary>Shim type of Love.Scene.WindowVisibleDelegate</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimWindowVisibleDelegate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimWindowVisibleDelegate.#ctor(Love.Scene.WindowVisibleDelegate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimScene.ShimWindowVisibleDelegate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWindowVisibleDelegate.AllInstances.BeginInvokeBooleanAsyncCallbackObject">
            <summary>Sets the Shim of WindowVisibleDelegate.BeginInvoke(WindowVisibleDelegate this, Boolean visible, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWindowVisibleDelegate.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of WindowVisibleDelegate.EndInvoke(WindowVisibleDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWindowVisibleDelegate.AllInstances.InvokeBoolean">
            <summary>Sets the Shim of WindowVisibleDelegate.Invoke(WindowVisibleDelegate this, Boolean visible)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWindowVisibleDelegate.BeginInvokeBooleanAsyncCallbackObject">
            <summary>Sets the Shim of WindowVisibleDelegate.BeginInvoke(WindowVisibleDelegate this, Boolean visible, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimWindowVisibleDelegate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimWindowVisibleDelegate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWindowVisibleDelegate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimWindowVisibleDelegate.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimScene.ShimWindowVisibleDelegate.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWindowVisibleDelegate.ConstructorObjectIntPtr">
            <summary>Sets the Shim of WindowVisibleDelegate.WindowVisibleDelegate(WindowVisibleDelegate this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWindowVisibleDelegate.EndInvokeIAsyncResult">
            <summary>Sets the Shim of WindowVisibleDelegate.EndInvoke(WindowVisibleDelegate this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.ShimWindowVisibleDelegate.InvokeBoolean">
            <summary>Sets the Shim of WindowVisibleDelegate.Invoke(WindowVisibleDelegate this, Boolean visible)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.TextEditingStringInt32Int32">
            <summary>Sets the Shim of Scene.TextEditing(Scene this, String text, Int32 start, Int32 end)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.TextInputString">
            <summary>Sets the Shim of Scene.TextInput(Scene this, String text)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.TouchMovedInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Scene.TouchMoved(Scene this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.TouchPressedInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Scene.TouchPressed(Scene this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.TouchReleasedInt64SingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Scene.TouchReleased(Scene this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.UpdateSingle">
            <summary>Sets the Shim of Scene.Update(Scene this, Single dt)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.WheelMovedInt32Int32">
            <summary>Sets the Shim of Scene.WheelMoved(Scene this, Int32 x, Int32 y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.WindowFocusBoolean">
            <summary>Sets the Shim of Scene.WindowFocus(Scene this, Boolean focus)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.WindowResizeInt32Int32">
            <summary>Sets the Shim of Scene.WindowResize(Scene this, Int32 w, Int32 h)</summary>
        </member>
        <member name="P:Love.Fakes.ShimScene.WindowVisibleBoolean">
            <summary>Sets the Shim of Scene.WindowVisible(Scene this, Boolean visible)</summary>
        </member>
        <member name="T:Love.Fakes.ShimShader">
            <summary>Shim type of Love.Shader</summary>
        </member>
        <member name="M:Love.Fakes.ShimShader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimShader.#ctor(Love.Shader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimShader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.GetWarnings">
            <summary>Sets the Shim of Shader.GetWarnings(Shader this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendBooleansStringBooleanArray">
            <summary>Sets the Shim of Shader.SendBooleans(Shader this, String name, Boolean[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendColorsStringColorArray">
            <summary>Sets the Shim of Shader.SendColors(Shader this, String name, Color[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendColorsStringVector4Array">
            <summary>Sets the Shim of Shader.SendColors(Shader this, String name, Vector4[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendFloatsStringSingleArray">
            <summary>Sets the Shim of Shader.SendFloats(Shader this, String name, Single[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendIntsStringInt32Array">
            <summary>Sets the Shim of Shader.SendInts(Shader this, String name, Int32[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendMatrixStringMatrix22Array">
            <summary>Sets the Shim of Shader.SendMatrix(Shader this, String name, Matrix22[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendMatrixStringMatrix33Array">
            <summary>Sets the Shim of Shader.SendMatrix(Shader this, String name, Matrix33[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendMatrixStringMatrix44Array">
            <summary>Sets the Shim of Shader.SendMatrix(Shader this, String name, Matrix44[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendMatrixStringSingleArrayInt32Int32Int32">
            <summary>Sets the Shim of Shader.SendMatrix(Shader this, String name, Single[] valueArray, Int32 columns, Int32 rows, Int32 count)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendStringBooleanArray">
            <summary>Sets the Shim of Shader.Send(Shader this, String name, Boolean[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendStringInt32Array">
            <summary>Sets the Shim of Shader.Send(Shader this, String name, Int32[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendStringMatrix22Array">
            <summary>Sets the Shim of Shader.Send(Shader this, String name, Matrix22[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendStringMatrix33Array">
            <summary>Sets the Shim of Shader.Send(Shader this, String name, Matrix33[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendStringMatrix44Array">
            <summary>Sets the Shim of Shader.Send(Shader this, String name, Matrix44[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendStringSingleArray">
            <summary>Sets the Shim of Shader.Send(Shader this, String name, Single[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendStringTexture">
            <summary>Sets the Shim of Shader.Send(Shader this, String name, Texture texture)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendStringUInt32Array">
            <summary>Sets the Shim of Shader.Send(Shader this, String name, UInt32[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendStringVector2Array">
            <summary>Sets the Shim of Shader.Send(Shader this, String name, Vector2[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendStringVector3Array">
            <summary>Sets the Shim of Shader.Send(Shader this, String name, Vector3[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendStringVector4Array">
            <summary>Sets the Shim of Shader.Send(Shader this, String name, Vector4[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendTextureStringTextureArray">
            <summary>Sets the Shim of Shader.SendTexture(Shader this, String name, Texture[] texture)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendUintsStringUInt32Array">
            <summary>Sets the Shim of Shader.SendUints(Shader this, String name, UInt32[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendVector2StringVector2Array">
            <summary>Sets the Shim of Shader.SendVector2(Shader this, String name, Vector2[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendVector3StringVector3Array">
            <summary>Sets the Shim of Shader.SendVector3(Shader this, String name, Vector3[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.AllInstances.SendVector4StringVector4Array">
            <summary>Sets the Shim of Shader.SendVector4(Shader this, String name, Vector4[] valueArray)</summary>
        </member>
        <member name="M:Love.Fakes.ShimShader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimShader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimShader.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.Constructor">
            <summary>Sets the Shim of Shader.Shader(Shader this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.GetWarnings">
            <summary>Sets the Shim of Shader.GetWarnings(Shader this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendBooleansStringBooleanArray">
            <summary>Sets the Shim of Shader.SendBooleans(Shader this, String name, Boolean[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendColorsStringColorArray">
            <summary>Sets the Shim of Shader.SendColors(Shader this, String name, Color[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendColorsStringVector4Array">
            <summary>Sets the Shim of Shader.SendColors(Shader this, String name, Vector4[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendFloatsStringSingleArray">
            <summary>Sets the Shim of Shader.SendFloats(Shader this, String name, Single[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendIntsStringInt32Array">
            <summary>Sets the Shim of Shader.SendInts(Shader this, String name, Int32[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendMatrixStringMatrix22Array">
            <summary>Sets the Shim of Shader.SendMatrix(Shader this, String name, Matrix22[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendMatrixStringMatrix33Array">
            <summary>Sets the Shim of Shader.SendMatrix(Shader this, String name, Matrix33[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendMatrixStringMatrix44Array">
            <summary>Sets the Shim of Shader.SendMatrix(Shader this, String name, Matrix44[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendMatrixStringSingleArrayInt32Int32Int32">
            <summary>Sets the Shim of Shader.SendMatrix(Shader this, String name, Single[] valueArray, Int32 columns, Int32 rows, Int32 count)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendStringBooleanArray">
            <summary>Sets the Shim of Shader.Send(Shader this, String name, Boolean[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendStringInt32Array">
            <summary>Sets the Shim of Shader.Send(Shader this, String name, Int32[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendStringMatrix22Array">
            <summary>Sets the Shim of Shader.Send(Shader this, String name, Matrix22[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendStringMatrix33Array">
            <summary>Sets the Shim of Shader.Send(Shader this, String name, Matrix33[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendStringMatrix44Array">
            <summary>Sets the Shim of Shader.Send(Shader this, String name, Matrix44[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendStringSingleArray">
            <summary>Sets the Shim of Shader.Send(Shader this, String name, Single[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendStringTexture">
            <summary>Sets the Shim of Shader.Send(Shader this, String name, Texture texture)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendStringUInt32Array">
            <summary>Sets the Shim of Shader.Send(Shader this, String name, UInt32[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendStringVector2Array">
            <summary>Sets the Shim of Shader.Send(Shader this, String name, Vector2[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendStringVector3Array">
            <summary>Sets the Shim of Shader.Send(Shader this, String name, Vector3[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendStringVector4Array">
            <summary>Sets the Shim of Shader.Send(Shader this, String name, Vector4[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendTextureStringTextureArray">
            <summary>Sets the Shim of Shader.SendTexture(Shader this, String name, Texture[] texture)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendUintsStringUInt32Array">
            <summary>Sets the Shim of Shader.SendUints(Shader this, String name, UInt32[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendVector2StringVector2Array">
            <summary>Sets the Shim of Shader.SendVector2(Shader this, String name, Vector2[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendVector3StringVector3Array">
            <summary>Sets the Shim of Shader.SendVector3(Shader this, String name, Vector3[] valueArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShader.SendVector4StringVector4Array">
            <summary>Sets the Shim of Shader.SendVector4(Shader this, String name, Vector4[] valueArray)</summary>
        </member>
        <member name="T:Love.Fakes.ShimShape">
            <summary>Shim type of Love.Shape</summary>
        </member>
        <member name="M:Love.Fakes.ShimShape.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimShape.#ctor(Love.Shape)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimShape.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.AllInstances.ComputeAABBSingleSingleSingleInt32ShapeComputeAABBCallback">
            <summary>Sets the Shim of Shape.ComputeAABB(Shape this, Single x, Single y, Single r, Int32 childIndex, ComputeAABBCallback callback)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.AllInstances.ComputeMassSingleShapeComputeMassCallback">
            <summary>Sets the Shim of Shape.ComputeMass(Shape this, Single density, ComputeMassCallback callback)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.AllInstances.GetChildCount">
            <summary>Sets the Shim of Shape.GetChildCount(Shape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.AllInstances.GetRadius">
            <summary>Sets the Shim of Shape.GetRadius(Shape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.AllInstances.GetShapeType">
            <summary>Sets the Shim of Shape.GetShapeType(Shape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.AllInstances.RayCastVector2Vector2SingleVector2SingleInt32ShapeRayCastCallBack">
            <summary>Sets the Shim of Shape.RayCast(Shape this, Vector2 p1, Vector2 p2, Single maxFraction, Vector2 trans, Single tr, Int32 childIndex, RayCastCallBack callback)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.AllInstances.TestPointSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Shape.TestPoint(Shape this, Single tx, Single ty, Single tr, Single px, Single py)</summary>
        </member>
        <member name="M:Love.Fakes.ShimShape.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimShape.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimShape.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ComputeAABBSingleSingleSingleInt32ShapeComputeAABBCallback">
            <summary>Sets the Shim of Shape.ComputeAABB(Shape this, Single x, Single y, Single r, Int32 childIndex, ComputeAABBCallback callback)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ComputeMassSingleShapeComputeMassCallback">
            <summary>Sets the Shim of Shape.ComputeMass(Shape this, Single density, ComputeMassCallback callback)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.Constructor">
            <summary>Sets the Shim of Shape.Shape(Shape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.GetChildCount">
            <summary>Sets the Shim of Shape.GetChildCount(Shape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.GetRadius">
            <summary>Sets the Shim of Shape.GetRadius(Shape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.GetShapeType">
            <summary>Sets the Shim of Shape.GetShapeType(Shape this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.RayCastVector2Vector2SingleVector2SingleInt32ShapeRayCastCallBack">
            <summary>Sets the Shim of Shape.RayCast(Shape this, Vector2 p1, Vector2 p2, Single maxFraction, Vector2 trans, Single tr, Int32 childIndex, RayCastCallBack callback)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShapeRetainToRegularShapeShape">
            <summary>Sets the Shim of Shape.ShapeRetainToRegularShape(Shape shape)</summary>
        </member>
        <member name="T:Love.Fakes.ShimShape.ShimComputeAABBCallback">
            <summary>Shim type of Love.Shape.ComputeAABBCallback</summary>
        </member>
        <member name="M:Love.Fakes.ShimShape.ShimComputeAABBCallback.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimShape.ShimComputeAABBCallback.#ctor(Love.Shape.ComputeAABBCallback)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimShape.ShimComputeAABBCallback.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShimComputeAABBCallback.AllInstances.BeginInvokeSingleSingleSingleSingleAsyncCallbackObject">
            <summary>Sets the Shim of ComputeAABBCallback.BeginInvoke(ComputeAABBCallback this, Single lx, Single ly, Single ux, Single uy, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShimComputeAABBCallback.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of ComputeAABBCallback.EndInvoke(ComputeAABBCallback this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShimComputeAABBCallback.AllInstances.InvokeSingleSingleSingleSingle">
            <summary>Sets the Shim of ComputeAABBCallback.Invoke(ComputeAABBCallback this, Single lx, Single ly, Single ux, Single uy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShimComputeAABBCallback.BeginInvokeSingleSingleSingleSingleAsyncCallbackObject">
            <summary>Sets the Shim of ComputeAABBCallback.BeginInvoke(ComputeAABBCallback this, Single lx, Single ly, Single ux, Single uy, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimShape.ShimComputeAABBCallback.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimShape.ShimComputeAABBCallback.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShimComputeAABBCallback.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimShape.ShimComputeAABBCallback.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimShape.ShimComputeAABBCallback.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShimComputeAABBCallback.ConstructorObjectIntPtr">
            <summary>Sets the Shim of ComputeAABBCallback.ComputeAABBCallback(ComputeAABBCallback this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShimComputeAABBCallback.EndInvokeIAsyncResult">
            <summary>Sets the Shim of ComputeAABBCallback.EndInvoke(ComputeAABBCallback this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShimComputeAABBCallback.InvokeSingleSingleSingleSingle">
            <summary>Sets the Shim of ComputeAABBCallback.Invoke(ComputeAABBCallback this, Single lx, Single ly, Single ux, Single uy)</summary>
        </member>
        <member name="T:Love.Fakes.ShimShape.ShimComputeMassCallback">
            <summary>Shim type of Love.Shape.ComputeMassCallback</summary>
        </member>
        <member name="M:Love.Fakes.ShimShape.ShimComputeMassCallback.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimShape.ShimComputeMassCallback.#ctor(Love.Shape.ComputeMassCallback)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimShape.ShimComputeMassCallback.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShimComputeMassCallback.AllInstances.BeginInvokeSingleSingleSingleSingleAsyncCallbackObject">
            <summary>Sets the Shim of ComputeMassCallback.BeginInvoke(ComputeMassCallback this, Single x, Single y, Single mass, Single inertia, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShimComputeMassCallback.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of ComputeMassCallback.EndInvoke(ComputeMassCallback this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShimComputeMassCallback.AllInstances.InvokeSingleSingleSingleSingle">
            <summary>Sets the Shim of ComputeMassCallback.Invoke(ComputeMassCallback this, Single x, Single y, Single mass, Single inertia)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShimComputeMassCallback.BeginInvokeSingleSingleSingleSingleAsyncCallbackObject">
            <summary>Sets the Shim of ComputeMassCallback.BeginInvoke(ComputeMassCallback this, Single x, Single y, Single mass, Single inertia, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimShape.ShimComputeMassCallback.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimShape.ShimComputeMassCallback.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShimComputeMassCallback.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimShape.ShimComputeMassCallback.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimShape.ShimComputeMassCallback.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShimComputeMassCallback.ConstructorObjectIntPtr">
            <summary>Sets the Shim of ComputeMassCallback.ComputeMassCallback(ComputeMassCallback this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShimComputeMassCallback.EndInvokeIAsyncResult">
            <summary>Sets the Shim of ComputeMassCallback.EndInvoke(ComputeMassCallback this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShimComputeMassCallback.InvokeSingleSingleSingleSingle">
            <summary>Sets the Shim of ComputeMassCallback.Invoke(ComputeMassCallback this, Single x, Single y, Single mass, Single inertia)</summary>
        </member>
        <member name="T:Love.Fakes.ShimShape.ShimRayCastCallBack">
            <summary>Shim type of Love.Shape.RayCastCallBack</summary>
        </member>
        <member name="M:Love.Fakes.ShimShape.ShimRayCastCallBack.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimShape.ShimRayCastCallBack.#ctor(Love.Shape.RayCastCallBack)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimShape.ShimRayCastCallBack.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShimRayCastCallBack.AllInstances.BeginInvokeSingleSingleSingleAsyncCallbackObject">
            <summary>Sets the Shim of RayCastCallBack.BeginInvoke(RayCastCallBack this, Single nx, Single ny, Single fraction, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShimRayCastCallBack.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of RayCastCallBack.EndInvoke(RayCastCallBack this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShimRayCastCallBack.AllInstances.InvokeSingleSingleSingle">
            <summary>Sets the Shim of RayCastCallBack.Invoke(RayCastCallBack this, Single nx, Single ny, Single fraction)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShimRayCastCallBack.BeginInvokeSingleSingleSingleAsyncCallbackObject">
            <summary>Sets the Shim of RayCastCallBack.BeginInvoke(RayCastCallBack this, Single nx, Single ny, Single fraction, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimShape.ShimRayCastCallBack.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimShape.ShimRayCastCallBack.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShimRayCastCallBack.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimShape.ShimRayCastCallBack.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimShape.ShimRayCastCallBack.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShimRayCastCallBack.ConstructorObjectIntPtr">
            <summary>Sets the Shim of RayCastCallBack.RayCastCallBack(RayCastCallBack this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShimRayCastCallBack.EndInvokeIAsyncResult">
            <summary>Sets the Shim of RayCastCallBack.EndInvoke(RayCastCallBack this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.ShimRayCastCallBack.InvokeSingleSingleSingle">
            <summary>Sets the Shim of RayCastCallBack.Invoke(RayCastCallBack this, Single nx, Single ny, Single fraction)</summary>
        </member>
        <member name="P:Love.Fakes.ShimShape.TestPointSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Shape.TestPoint(Shape this, Single tx, Single ty, Single tr, Single px, Single py)</summary>
        </member>
        <member name="T:Love.Fakes.ShimSize">
            <summary>Shim type of Love.Size</summary>
        </member>
        <member name="M:Love.Fakes.ShimSize.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:Love.Fakes.ShimSize.AddSizeSize">
            <summary>Sets the Shim of Size.Add(Size sz1, Size sz2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSize.AdditionOpSizeSize">
            <summary>Sets the Shim of Size.op_Addition(Size sz1, Size sz2)</summary>
        </member>
        <member name="T:Love.Fakes.ShimSize.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimSize.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimSize.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimSize.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimSize.CeilingSizeF">
            <summary>Sets the Shim of Size.Ceiling(SizeF value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSize.DivisionOpSizeInt32">
            <summary>Sets the Shim of Size.op_Division(Size left, Int32 right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSize.DivisionOpSizeSingle">
            <summary>Sets the Shim of Size.op_Division(Size left, Single right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSize.EqualityOpSizeSize">
            <summary>Sets the Shim of Size.op_Equality(Size sz1, Size sz2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSize.ExplicitOpSizePoint">
            <summary>Sets the Shim of Size.op_Explicit(Size size)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSize.ImplicitOpSizeSizeF">
            <summary>Sets the Shim of Size.op_Implicit(Size p)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSize.InequalityOpSizeSize">
            <summary>Sets the Shim of Size.op_Inequality(Size sz1, Size sz2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSize.MultiplyOpInt32Size">
            <summary>Sets the Shim of Size.op_Multiply(Int32 left, Size right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSize.MultiplyOpSingleSize">
            <summary>Sets the Shim of Size.op_Multiply(Single left, Size right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSize.MultiplyOpSizeInt32">
            <summary>Sets the Shim of Size.op_Multiply(Size left, Int32 right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSize.MultiplyOpSizeSingle">
            <summary>Sets the Shim of Size.op_Multiply(Size left, Single right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSize.MultiplySizeInt32">
            <summary>Sets the Shim of Size.Multiply(Size size, Int32 multiplier)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSize.MultiplySizeSingle">
            <summary>Sets the Shim of Size.Multiply(Size size, Single multiplier)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSize.RoundSizeF">
            <summary>Sets the Shim of Size.Round(SizeF value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSize.StaticConstructor">
            <summary>Sets the Shim of Size.Size()</summary>
        </member>
        <member name="P:Love.Fakes.ShimSize.SubtractSizeSize">
            <summary>Sets the Shim of Size.Subtract(Size sz1, Size sz2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSize.SubtractionOpSizeSize">
            <summary>Sets the Shim of Size.op_Subtraction(Size sz1, Size sz2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSize.TruncateSizeF">
            <summary>Sets the Shim of Size.Truncate(SizeF value)</summary>
        </member>
        <member name="T:Love.Fakes.ShimSizeF">
            <summary>Shim type of Love.SizeF</summary>
        </member>
        <member name="M:Love.Fakes.ShimSizeF.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:Love.Fakes.ShimSizeF.AddSizeFSizeF">
            <summary>Sets the Shim of SizeF.Add(SizeF sz1, SizeF sz2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSizeF.AdditionOpSizeFSizeF">
            <summary>Sets the Shim of SizeF.op_Addition(SizeF sz1, SizeF sz2)</summary>
        </member>
        <member name="T:Love.Fakes.ShimSizeF.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimSizeF.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimSizeF.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimSizeF.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimSizeF.DivisionOpSizeFSingle">
            <summary>Sets the Shim of SizeF.op_Division(SizeF left, Single right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSizeF.EqualityOpSizeFSizeF">
            <summary>Sets the Shim of SizeF.op_Equality(SizeF sz1, SizeF sz2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSizeF.ExplicitOpSizeFVector2">
            <summary>Sets the Shim of SizeF.op_Explicit(SizeF size)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSizeF.InequalityOpSizeFSizeF">
            <summary>Sets the Shim of SizeF.op_Inequality(SizeF sz1, SizeF sz2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSizeF.MultiplyOpSingleSizeF">
            <summary>Sets the Shim of SizeF.op_Multiply(Single left, SizeF right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSizeF.MultiplyOpSizeFSingle">
            <summary>Sets the Shim of SizeF.op_Multiply(SizeF left, Single right)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSizeF.MultiplySizeFSingle">
            <summary>Sets the Shim of SizeF.Multiply(SizeF size, Single multiplier)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSizeF.StaticConstructor">
            <summary>Sets the Shim of SizeF.SizeF()</summary>
        </member>
        <member name="P:Love.Fakes.ShimSizeF.SubtractSizeFSizeF">
            <summary>Sets the Shim of SizeF.Subtract(SizeF sz1, SizeF sz2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSizeF.SubtractionOpSizeFSizeF">
            <summary>Sets the Shim of SizeF.op_Subtraction(SizeF sz1, SizeF sz2)</summary>
        </member>
        <member name="T:Love.Fakes.ShimSound">
            <summary>Shim type of Love.Sound</summary>
        </member>
        <member name="M:Love.Fakes.ShimSound.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimSound.#ctor(Love.Sound)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimSound.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimSound.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimSound.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimSound.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimSound.Constructor">
            <summary>Sets the Shim of Sound.Sound(Sound this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSound.Init">
            <summary>Sets the Shim of Sound.Init()</summary>
        </member>
        <member name="P:Love.Fakes.ShimSound.NewDecoderFileDataInt32">
            <summary>Sets the Shim of Sound.NewDecoder(FileData fdata, Int32 buffersize)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSound.NewDecoderFileInt32">
            <summary>Sets the Shim of Sound.NewDecoder(File file, Int32 buffersize)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSound.NewDecoderStringInt32">
            <summary>Sets the Shim of Sound.NewDecoder(String filename, Int32 bufferSize)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSound.NewSoundDataDecoder">
            <summary>Sets the Shim of Sound.NewSoundData(Decoder decoder)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSound.NewSoundDataFile">
            <summary>Sets the Shim of Sound.NewSoundData(File file)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSound.NewSoundDataInt32Int32Int32Int32">
            <summary>Sets the Shim of Sound.NewSoundData(Int32 samples, Int32 sampleRate, Int32 bits, Int32 channels)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSound.NewSoundDataString">
            <summary>Sets the Shim of Sound.NewSoundData(String filename)</summary>
        </member>
        <member name="T:Love.Fakes.ShimSoundData">
            <summary>Shim type of Love.SoundData</summary>
        </member>
        <member name="M:Love.Fakes.ShimSoundData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimSoundData.#ctor(Love.SoundData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimSoundData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimSoundData.AllInstances.GetBitDepth">
            <summary>Sets the Shim of SoundData.GetBitDepth(SoundData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSoundData.AllInstances.GetChannelCount">
            <summary>Sets the Shim of SoundData.GetChannelCount(SoundData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSoundData.AllInstances.GetDuration">
            <summary>Sets the Shim of SoundData.GetDuration(SoundData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSoundData.AllInstances.GetSampleCount">
            <summary>Sets the Shim of SoundData.GetSampleCount(SoundData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSoundData.AllInstances.GetSampleInt32">
            <summary>Sets the Shim of SoundData.GetSample(SoundData this, Int32 i)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSoundData.AllInstances.GetSampleRate">
            <summary>Sets the Shim of SoundData.GetSampleRate(SoundData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSoundData.AllInstances.SetSampleInt32Single">
            <summary>Sets the Shim of SoundData.SetSample(SoundData this, Int32 i, Single sample)</summary>
        </member>
        <member name="M:Love.Fakes.ShimSoundData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimSoundData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimSoundData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimSoundData.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimSoundData.Constructor">
            <summary>Sets the Shim of SoundData.SoundData(SoundData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSoundData.GetBitDepth">
            <summary>Sets the Shim of SoundData.GetBitDepth(SoundData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSoundData.GetChannelCount">
            <summary>Sets the Shim of SoundData.GetChannelCount(SoundData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSoundData.GetDuration">
            <summary>Sets the Shim of SoundData.GetDuration(SoundData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSoundData.GetSampleCount">
            <summary>Sets the Shim of SoundData.GetSampleCount(SoundData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSoundData.GetSampleInt32">
            <summary>Sets the Shim of SoundData.GetSample(SoundData this, Int32 i)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSoundData.GetSampleRate">
            <summary>Sets the Shim of SoundData.GetSampleRate(SoundData this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSoundData.SetSampleInt32Single">
            <summary>Sets the Shim of SoundData.SetSample(SoundData this, Int32 i, Single sample)</summary>
        </member>
        <member name="T:Love.Fakes.ShimSource">
            <summary>Shim type of Love.Source</summary>
        </member>
        <member name="M:Love.Fakes.ShimSource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimSource.#ctor(Love.Source)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimSource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.Clone">
            <summary>Sets the Shim of Source.Clone(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.GetAttenuationDistancesSingleOutSingleOut">
            <summary>Sets the Shim of Source.GetAttenuationDistances(Source this, Single* out_dref, Single* out_dmax)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.GetChannelCount">
            <summary>Sets the Shim of Source.GetChannelCount(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.GetConeSingleOutSingleOutSingleOut">
            <summary>Sets the Shim of Source.GetCone(Source this, Single* out_innerAngle, Single* out_outerAngle, Single* out_outerVolume)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.GetDirection">
            <summary>Sets the Shim of Source.GetDirection(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.GetDurationTimeUnit">
            <summary>Sets the Shim of Source.GetDuration(Source this, TimeUnit unit_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.GetPitch">
            <summary>Sets the Shim of Source.GetPitch(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.GetPosition">
            <summary>Sets the Shim of Source.GetPosition(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.GetRolloff">
            <summary>Sets the Shim of Source.GetRolloff(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.GetSourceType">
            <summary>Sets the Shim of Source.GetSourceType(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.GetVelocity">
            <summary>Sets the Shim of Source.GetVelocity(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.GetVolume">
            <summary>Sets the Shim of Source.GetVolume(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.GetVolumeLimitsSingleOutSingleOut">
            <summary>Sets the Shim of Source.GetVolumeLimits(Source this, Single* out_vmin, Single* out_vmax)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.IsLooping">
            <summary>Sets the Shim of Source.IsLooping(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.IsPlaying">
            <summary>Sets the Shim of Source.IsPlaying(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.IsRelative">
            <summary>Sets the Shim of Source.IsRelative(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.Pause">
            <summary>Sets the Shim of Source.Pause(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.Play">
            <summary>Sets the Shim of Source.Play(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.SeekSingleTimeUnit">
            <summary>Sets the Shim of Source.Seek(Source this, Single offset, TimeUnit unit_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.SetAttenuationDistancesSingleSingle">
            <summary>Sets the Shim of Source.SetAttenuationDistances(Source this, Single dref, Single dmax)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.SetConeSingleSingleSingle">
            <summary>Sets the Shim of Source.SetCone(Source this, Single innerAngle, Single outerAngle, Single outerVolume)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.SetDirectionSingleSingleSingle">
            <summary>Sets the Shim of Source.SetDirection(Source this, Single x, Single y, Single z)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.SetLoopingBoolean">
            <summary>Sets the Shim of Source.SetLooping(Source this, Boolean looping)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.SetPitchSingle">
            <summary>Sets the Shim of Source.SetPitch(Source this, Single pitch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.SetPositionSingleSingleSingle">
            <summary>Sets the Shim of Source.SetPosition(Source this, Single x, Single y, Single z)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.SetRelativeBoolean">
            <summary>Sets the Shim of Source.SetRelative(Source this, Boolean relative)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.SetRolloffSingle">
            <summary>Sets the Shim of Source.SetRolloff(Source this, Single rolloff)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.SetVelocitySingleSingleSingle">
            <summary>Sets the Shim of Source.SetVelocity(Source this, Single x, Single y, Single z)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.SetVolumeLimitsSingleSingle">
            <summary>Sets the Shim of Source.SetVolumeLimits(Source this, Single vmin, Single vmax)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.SetVolumeSingle">
            <summary>Sets the Shim of Source.SetVolume(Source this, Single volume)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.Stop">
            <summary>Sets the Shim of Source.Stop(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.AllInstances.TellTimeUnit">
            <summary>Sets the Shim of Source.Tell(Source this, TimeUnit unit_type)</summary>
        </member>
        <member name="M:Love.Fakes.ShimSource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimSource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimSource.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.Clone">
            <summary>Sets the Shim of Source.Clone(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.Constructor">
            <summary>Sets the Shim of Source.Source(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.GetAttenuationDistancesSingleOutSingleOut">
            <summary>Sets the Shim of Source.GetAttenuationDistances(Source this, Single* out_dref, Single* out_dmax)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.GetChannelCount">
            <summary>Sets the Shim of Source.GetChannelCount(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.GetDirection">
            <summary>Sets the Shim of Source.GetDirection(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.GetDurationTimeUnit">
            <summary>Sets the Shim of Source.GetDuration(Source this, TimeUnit unit_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.GetPitch">
            <summary>Sets the Shim of Source.GetPitch(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.GetPosition">
            <summary>Sets the Shim of Source.GetPosition(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.GetRolloff">
            <summary>Sets the Shim of Source.GetRolloff(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.GetSourceType">
            <summary>Sets the Shim of Source.GetSourceType(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.GetVelocity">
            <summary>Sets the Shim of Source.GetVelocity(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.GetVolume">
            <summary>Sets the Shim of Source.GetVolume(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.GetVolumeLimitsSingleOutSingleOut">
            <summary>Sets the Shim of Source.GetVolumeLimits(Source this, Single* out_vmin, Single* out_vmax)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.IsLooping">
            <summary>Sets the Shim of Source.IsLooping(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.IsPlaying">
            <summary>Sets the Shim of Source.IsPlaying(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.IsRelative">
            <summary>Sets the Shim of Source.IsRelative(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.Pause">
            <summary>Sets the Shim of Source.Pause(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.Play">
            <summary>Sets the Shim of Source.Play(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.SeekSingleTimeUnit">
            <summary>Sets the Shim of Source.Seek(Source this, Single offset, TimeUnit unit_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.SetAttenuationDistancesSingleSingle">
            <summary>Sets the Shim of Source.SetAttenuationDistances(Source this, Single dref, Single dmax)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.SetConeSingleSingleSingle">
            <summary>Sets the Shim of Source.SetCone(Source this, Single innerAngle, Single outerAngle, Single outerVolume)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.SetDirectionSingleSingleSingle">
            <summary>Sets the Shim of Source.SetDirection(Source this, Single x, Single y, Single z)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.SetLoopingBoolean">
            <summary>Sets the Shim of Source.SetLooping(Source this, Boolean looping)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.SetPitchSingle">
            <summary>Sets the Shim of Source.SetPitch(Source this, Single pitch)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.SetPositionSingleSingleSingle">
            <summary>Sets the Shim of Source.SetPosition(Source this, Single x, Single y, Single z)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.SetRelativeBoolean">
            <summary>Sets the Shim of Source.SetRelative(Source this, Boolean relative)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.SetRolloffSingle">
            <summary>Sets the Shim of Source.SetRolloff(Source this, Single rolloff)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.SetVelocitySingleSingleSingle">
            <summary>Sets the Shim of Source.SetVelocity(Source this, Single x, Single y, Single z)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.SetVolumeLimitsSingleSingle">
            <summary>Sets the Shim of Source.SetVolumeLimits(Source this, Single vmin, Single vmax)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.SetVolumeSingle">
            <summary>Sets the Shim of Source.SetVolume(Source this, Single volume)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.Stop">
            <summary>Sets the Shim of Source.Stop(Source this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSource.TellTimeUnit">
            <summary>Sets the Shim of Source.Tell(Source this, TimeUnit unit_type)</summary>
        </member>
        <member name="T:Love.Fakes.ShimSpecial">
            <summary>Shim type of Love.Special</summary>
        </member>
        <member name="M:Love.Fakes.ShimSpecial.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimSpecial.#ctor(Love.Special)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimSpecial.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimSpecial.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimSpecial.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpecial.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpecial.Constructor">
            <summary>Sets the Shim of Special.Special(Special this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpecial.GetClipboardText">
            <summary>Sets the Shim of Special.GetClipboardText()</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpecial.GetOS">
            <summary>Sets the Shim of Special.GetOS()</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpecial.GetPowerInfoPowerStateOutInt32OutInt32Out">
            <summary>Sets the Shim of Special.GetPowerInfo(PowerState* state, Int32* percent, Int32* seconds)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpecial.GetProcessorCount">
            <summary>Sets the Shim of Special.GetProcessorCount()</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpecial.GetWin32Handle">
            <summary>Sets the Shim of Special.GetWin32Handle()</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpecial.Init">
            <summary>Sets the Shim of Special.Init()</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpecial.OpenURLString">
            <summary>Sets the Shim of Special.OpenURL(String url)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpecial.SetClipboardTextString">
            <summary>Sets the Shim of Special.SetClipboardText(String text)</summary>
        </member>
        <member name="T:Love.Fakes.ShimSpriteBatch">
            <summary>Shim type of Love.SpriteBatch</summary>
        </member>
        <member name="M:Love.Fakes.ShimSpriteBatch.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimSpriteBatch.#ctor(Love.SpriteBatch)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.AddQuadSingleSingleSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of SpriteBatch.Add(SpriteBatch this, Quad quad, Single x, Single y, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.AddSingleSingleSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of SpriteBatch.Add(SpriteBatch this, Single x, Single y, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="T:Love.Fakes.ShimSpriteBatch.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.AllInstances.AddQuadSingleSingleSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of SpriteBatch.Add(SpriteBatch this, Quad quad, Single x, Single y, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.AllInstances.AddSingleSingleSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of SpriteBatch.Add(SpriteBatch this, Single x, Single y, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.AllInstances.AttachAttributeStringMesh">
            <summary>Sets the Shim of SpriteBatch.AttachAttribute(SpriteBatch this, String name, Mesh mesh)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.AllInstances.Clear">
            <summary>Sets the Shim of SpriteBatch.Clear(SpriteBatch this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.AllInstances.Flush">
            <summary>Sets the Shim of SpriteBatch.Flush(SpriteBatch this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.AllInstances.GetBufferSize">
            <summary>Sets the Shim of SpriteBatch.GetBufferSize(SpriteBatch this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.AllInstances.GetColor">
            <summary>Sets the Shim of SpriteBatch.GetColor(SpriteBatch this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.AllInstances.GetCount">
            <summary>Sets the Shim of SpriteBatch.GetCount(SpriteBatch this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.AllInstances.GetTexture">
            <summary>Sets the Shim of SpriteBatch.GetTexture(SpriteBatch this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.AllInstances.SetColor">
            <summary>Sets the Shim of SpriteBatch.SetColor(SpriteBatch this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.AllInstances.SetColorSingleSingleSingleSingle">
            <summary>Sets the Shim of SpriteBatch.SetColor(SpriteBatch this, Single r, Single g, Single b, Single a)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.AllInstances.SetInt32QuadSingleSingleSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of SpriteBatch.Set(SpriteBatch this, Int32 index, Quad quad, Single x, Single y, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.AllInstances.SetInt32SingleSingleSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of SpriteBatch.Set(SpriteBatch this, Int32 index, Single x, Single y, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.AllInstances.SetTextureText">
            <summary>Sets the Shim of SpriteBatch.SetTexture(SpriteBatch this, Text texture)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.AttachAttributeStringMesh">
            <summary>Sets the Shim of SpriteBatch.AttachAttribute(SpriteBatch this, String name, Mesh mesh)</summary>
        </member>
        <member name="M:Love.Fakes.ShimSpriteBatch.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimSpriteBatch.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimSpriteBatch.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.Clear">
            <summary>Sets the Shim of SpriteBatch.Clear(SpriteBatch this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.Constructor">
            <summary>Sets the Shim of SpriteBatch.SpriteBatch(SpriteBatch this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.Flush">
            <summary>Sets the Shim of SpriteBatch.Flush(SpriteBatch this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.GetBufferSize">
            <summary>Sets the Shim of SpriteBatch.GetBufferSize(SpriteBatch this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.GetColor">
            <summary>Sets the Shim of SpriteBatch.GetColor(SpriteBatch this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.GetCount">
            <summary>Sets the Shim of SpriteBatch.GetCount(SpriteBatch this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.GetTexture">
            <summary>Sets the Shim of SpriteBatch.GetTexture(SpriteBatch this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.SetColor">
            <summary>Sets the Shim of SpriteBatch.SetColor(SpriteBatch this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.SetColorSingleSingleSingleSingle">
            <summary>Sets the Shim of SpriteBatch.SetColor(SpriteBatch this, Single r, Single g, Single b, Single a)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.SetInt32QuadSingleSingleSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of SpriteBatch.Set(SpriteBatch this, Int32 index, Quad quad, Single x, Single y, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.SetInt32SingleSingleSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of SpriteBatch.Set(SpriteBatch this, Int32 index, Single x, Single y, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="P:Love.Fakes.ShimSpriteBatch.SetTextureText">
            <summary>Sets the Shim of SpriteBatch.SetTexture(SpriteBatch this, Text texture)</summary>
        </member>
        <member name="T:Love.Fakes.ShimStream">
            <summary>Shim type of Love.Stream</summary>
        </member>
        <member name="M:Love.Fakes.ShimStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimStream.#ctor(Love.Stream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimStream.Constructor">
            <summary>Sets the Shim of Stream.Stream(Stream this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimText">
            <summary>Shim type of Love.Text</summary>
        </member>
        <member name="M:Love.Fakes.ShimText.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimText.#ctor(Love.Text)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Love.Fakes.ShimText.AddColoredStringArraySingleSingleSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Text.Add(Text this, ColoredStringArray coloredStr, Single x, Single y, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="P:Love.Fakes.ShimText.AddStringSingleAlignModeSingleSingleSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Text.Add(Text this, String text, Single wraplimit, AlignMode align_type, Single x, Single y, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="P:Love.Fakes.ShimText.AddStringSingleSingleSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Text.Add(Text this, String text, Single x, Single y, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="P:Love.Fakes.ShimText.AddfColoredStringArraySingleAlignModeSingleSingleSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Text.Addf(Text this, ColoredStringArray coloredStr, Single wraplimit, AlignMode align_type, Single x, Single y, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="T:Love.Fakes.ShimText.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimText.AllInstances.AddColoredStringArraySingleSingleSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Text.Add(Text this, ColoredStringArray coloredStr, Single x, Single y, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="P:Love.Fakes.ShimText.AllInstances.AddStringSingleAlignModeSingleSingleSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Text.Add(Text this, String text, Single wraplimit, AlignMode align_type, Single x, Single y, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="P:Love.Fakes.ShimText.AllInstances.AddStringSingleSingleSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Text.Add(Text this, String text, Single x, Single y, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="P:Love.Fakes.ShimText.AllInstances.AddfColoredStringArraySingleAlignModeSingleSingleSingleSingleSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of Text.Addf(Text this, ColoredStringArray coloredStr, Single wraplimit, AlignMode align_type, Single x, Single y, Single angle, Single sx, Single sy, Single ox, Single oy, Single kx, Single ky)</summary>
        </member>
        <member name="P:Love.Fakes.ShimText.AllInstances.Clear">
            <summary>Sets the Shim of Text.Clear(Text this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimText.AllInstances.GetFont">
            <summary>Sets the Shim of Text.GetFont(Text this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimText.AllInstances.GetHeightInt32">
            <summary>Sets the Shim of Text.GetHeight(Text this, Int32 index)</summary>
        </member>
        <member name="P:Love.Fakes.ShimText.AllInstances.GetWidthInt32">
            <summary>Sets the Shim of Text.GetWidth(Text this, Int32 index)</summary>
        </member>
        <member name="P:Love.Fakes.ShimText.AllInstances.SetColoredStringArray">
            <summary>Sets the Shim of Text.Set(Text this, ColoredStringArray coloredStr)</summary>
        </member>
        <member name="P:Love.Fakes.ShimText.AllInstances.SetFontFont">
            <summary>Sets the Shim of Text.SetFont(Text this, Font f)</summary>
        </member>
        <member name="P:Love.Fakes.ShimText.AllInstances.SetfColoredStringArraySingleAlignMode">
            <summary>Sets the Shim of Text.Setf(Text this, ColoredStringArray coloredStr, Single wraplimit, AlignMode align_type)</summary>
        </member>
        <member name="M:Love.Fakes.ShimText.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimText.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimText.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimText.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimText.Clear">
            <summary>Sets the Shim of Text.Clear(Text this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimText.Constructor">
            <summary>Sets the Shim of Text.Text(Text this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimText.GetFont">
            <summary>Sets the Shim of Text.GetFont(Text this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimText.GetHeightInt32">
            <summary>Sets the Shim of Text.GetHeight(Text this, Int32 index)</summary>
        </member>
        <member name="P:Love.Fakes.ShimText.GetWidthInt32">
            <summary>Sets the Shim of Text.GetWidth(Text this, Int32 index)</summary>
        </member>
        <member name="P:Love.Fakes.ShimText.SetColoredStringArray">
            <summary>Sets the Shim of Text.Set(Text this, ColoredStringArray coloredStr)</summary>
        </member>
        <member name="P:Love.Fakes.ShimText.SetFontFont">
            <summary>Sets the Shim of Text.SetFont(Text this, Font f)</summary>
        </member>
        <member name="P:Love.Fakes.ShimText.SetfColoredStringArraySingleAlignMode">
            <summary>Sets the Shim of Text.Setf(Text this, ColoredStringArray coloredStr, Single wraplimit, AlignMode align_type)</summary>
        </member>
        <member name="T:Love.Fakes.ShimTexture">
            <summary>Shim type of Love.Texture</summary>
        </member>
        <member name="M:Love.Fakes.ShimTexture.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimTexture.#ctor(Love.Texture)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimTexture.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimTexture.AllInstances.GetFilterFilterModeOutFilterModeOutSingleOut">
            <summary>Sets the Shim of Texture.GetFilter(Texture this, FilterMode* out_filtermin_type, FilterMode* out_filtermag_type, Single* out_anisotropy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimTexture.AllInstances.GetHeight">
            <summary>Sets the Shim of Texture.GetHeight(Texture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimTexture.AllInstances.GetMipmapCount">
            <summary>Sets the Shim of Texture.GetMipmapCount(Texture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimTexture.AllInstances.GetMipmapFilterFilterModeOutSingleOut">
            <summary>Sets the Shim of Texture.GetMipmapFilter(Texture this, FilterMode* out_mipmap_type, Single* out_sharpness)</summary>
        </member>
        <member name="P:Love.Fakes.ShimTexture.AllInstances.GetWidth">
            <summary>Sets the Shim of Texture.GetWidth(Texture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimTexture.AllInstances.GetWrapWrapModeOutWrapModeOut">
            <summary>Sets the Shim of Texture.GetWrap(Texture this, WrapMode* out_wraphoriz_type, WrapMode* out_wrapvert_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimTexture.AllInstances.SetFilterFilterModeFilterModeSingle">
            <summary>Sets the Shim of Texture.SetFilter(Texture this, FilterMode filtermin_type, FilterMode filtermag_type, Single anisotropy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimTexture.AllInstances.SetMipmapFilterFilterModeSingle">
            <summary>Sets the Shim of Texture.SetMipmapFilter(Texture this, FilterMode mipmap_type, Single sharpness)</summary>
        </member>
        <member name="P:Love.Fakes.ShimTexture.AllInstances.SetWrapWrapModeWrapMode">
            <summary>Sets the Shim of Texture.SetWrap(Texture this, WrapMode wraphoriz_type, WrapMode wrapvert_type)</summary>
        </member>
        <member name="M:Love.Fakes.ShimTexture.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimTexture.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimTexture.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimTexture.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimTexture.Constructor">
            <summary>Sets the Shim of Texture.Texture(Texture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimTexture.GetHeight">
            <summary>Sets the Shim of Texture.GetHeight(Texture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimTexture.GetMipmapCount">
            <summary>Sets the Shim of Texture.GetMipmapCount(Texture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimTexture.GetMipmapFilterFilterModeOutSingleOut">
            <summary>Sets the Shim of Texture.GetMipmapFilter(Texture this, FilterMode* out_mipmap_type, Single* out_sharpness)</summary>
        </member>
        <member name="P:Love.Fakes.ShimTexture.GetWidth">
            <summary>Sets the Shim of Texture.GetWidth(Texture this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimTexture.GetWrapWrapModeOutWrapModeOut">
            <summary>Sets the Shim of Texture.GetWrap(Texture this, WrapMode* out_wraphoriz_type, WrapMode* out_wrapvert_type)</summary>
        </member>
        <member name="P:Love.Fakes.ShimTexture.SetFilterFilterModeFilterModeSingle">
            <summary>Sets the Shim of Texture.SetFilter(Texture this, FilterMode filtermin_type, FilterMode filtermag_type, Single anisotropy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimTexture.SetMipmapFilterFilterModeSingle">
            <summary>Sets the Shim of Texture.SetMipmapFilter(Texture this, FilterMode mipmap_type, Single sharpness)</summary>
        </member>
        <member name="P:Love.Fakes.ShimTexture.SetWrapWrapModeWrapMode">
            <summary>Sets the Shim of Texture.SetWrap(Texture this, WrapMode wraphoriz_type, WrapMode wrapvert_type)</summary>
        </member>
        <member name="T:Love.Fakes.ShimTimer">
            <summary>Shim type of Love.Timer</summary>
        </member>
        <member name="M:Love.Fakes.ShimTimer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimTimer.#ctor(Love.Timer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimTimer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimTimer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimTimer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimTimer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimTimer.Constructor">
            <summary>Sets the Shim of Timer.Timer(Timer this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimTimer.DisableLimitMaxFPS">
            <summary>Sets the Shim of Timer.DisableLimitMaxFPS()</summary>
        </member>
        <member name="P:Love.Fakes.ShimTimer.EnableLimitMaxFPSSingle">
            <summary>Sets the Shim of Timer.EnableLimitMaxFPS(Single maxFPS)</summary>
        </member>
        <member name="P:Love.Fakes.ShimTimer.GetAverageDelta">
            <summary>Sets the Shim of Timer.GetAverageDelta()</summary>
        </member>
        <member name="P:Love.Fakes.ShimTimer.GetDelta">
            <summary>Sets the Shim of Timer.GetDelta()</summary>
        </member>
        <member name="P:Love.Fakes.ShimTimer.GetFPS">
            <summary>Sets the Shim of Timer.GetFPS()</summary>
        </member>
        <member name="P:Love.Fakes.ShimTimer.GetSystemTime">
            <summary>Sets the Shim of Timer.GetSystemTime()</summary>
        </member>
        <member name="P:Love.Fakes.ShimTimer.GetTime">
            <summary>Sets the Shim of Timer.GetTime()</summary>
        </member>
        <member name="P:Love.Fakes.ShimTimer.GetTimeDoubleOut">
            <summary>Sets the Shim of Timer.GetTime(Double* out_time)</summary>
        </member>
        <member name="P:Love.Fakes.ShimTimer.GetTimeRaw">
            <summary>Sets the Shim of Timer.GetTimeRaw()</summary>
        </member>
        <member name="P:Love.Fakes.ShimTimer.Init">
            <summary>Sets the Shim of Timer.Init()</summary>
        </member>
        <member name="P:Love.Fakes.ShimTimer.IsLimitMaxFPS">
            <summary>Sets the Shim of Timer.IsLimitMaxFPS()</summary>
        </member>
        <member name="P:Love.Fakes.ShimTimer.SleepByMaxFPS">
            <summary>Sets the Shim of Timer.SleepByMaxFPS()</summary>
        </member>
        <member name="P:Love.Fakes.ShimTimer.SleepSingle">
            <summary>Sets the Shim of Timer.Sleep(Single t)</summary>
        </member>
        <member name="P:Love.Fakes.ShimTimer.StartTimeGet">
            <summary>Sets the Shim of Timer.get_StartTime()</summary>
        </member>
        <member name="P:Love.Fakes.ShimTimer.StaticConstructor">
            <summary>Sets the Shim of Timer.Timer()</summary>
        </member>
        <member name="P:Love.Fakes.ShimTimer.Step">
            <summary>Sets the Shim of Timer.Step()</summary>
        </member>
        <member name="T:Love.Fakes.ShimTouch">
            <summary>Shim type of Love.Touch</summary>
        </member>
        <member name="M:Love.Fakes.ShimTouch.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimTouch.#ctor(Love.Touch)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimTouch.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimTouch.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimTouch.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimTouch.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimTouch.Constructor">
            <summary>Sets the Shim of Touch.Touch(Touch this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimTouch.GetToucheInfoInt64DoubleOutDoubleOutDoubleOutDoubleOutDoubleOut">
            <summary>Sets the Shim of Touch.GetToucheInfo(Int64 idx, Double* out_x, Double* out_y, Double* out_dx, Double* out_dy, Double* out_pressure)</summary>
        </member>
        <member name="P:Love.Fakes.ShimTouch.GetTouches">
            <summary>Sets the Shim of Touch.GetTouches()</summary>
        </member>
        <member name="P:Love.Fakes.ShimTouch.Init">
            <summary>Sets the Shim of Touch.Init()</summary>
        </member>
        <member name="T:Love.Fakes.ShimTouch.ShimTouchInfo">
            <summary>Shim type of Love.Touch.TouchInfo</summary>
        </member>
        <member name="M:Love.Fakes.ShimTouch.ShimTouchInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimTouch.ShimTouchInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimTouch.ShimTouchInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimTouch.ShimTouchInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimTouch.ShimTouchInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Love.Fakes.ShimTriangle">
            <summary>Shim type of Love.Triangle</summary>
        </member>
        <member name="M:Love.Fakes.ShimTriangle.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimTriangle.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimTriangle.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimTriangle.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimTriangle.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Love.Fakes.ShimTrueTypeRasterizer">
            <summary>Shim type of Love.TrueTypeRasterizer</summary>
        </member>
        <member name="M:Love.Fakes.ShimTrueTypeRasterizer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimTrueTypeRasterizer.#ctor(Love.TrueTypeRasterizer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimTrueTypeRasterizer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimTrueTypeRasterizer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimTrueTypeRasterizer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimTrueTypeRasterizer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimTrueTypeRasterizer.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimTrueTypeRasterizer.Constructor">
            <summary>Sets the Shim of TrueTypeRasterizer.TrueTypeRasterizer(TrueTypeRasterizer this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimUserDataLoveObject">
            <summary>Shim type of Love.UserDataLoveObject</summary>
        </member>
        <member name="M:Love.Fakes.ShimUserDataLoveObject.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimUserDataLoveObject.#ctor(Love.UserDataLoveObject)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimUserDataLoveObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimUserDataLoveObject.AllInstances.ClearUserData">
            <summary>Sets the Shim of UserDataLoveObject.ClearUserData(UserDataLoveObject this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimUserDataLoveObject.AllInstances.GetUserDataAll">
            <summary>Sets the Shim of UserDataLoveObject.GetUserDataAll(UserDataLoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimUserDataLoveObject.AllInstances.GetUserDataOf1M0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{Love.UserDataLoveObject,``0,System.Boolean})">
            <summary>Sets the Shim of UserDataLoveObject.GetUserData(UserDataLoveObject this, !!0&amp; data)</summary>
        </member>
        <member name="M:Love.Fakes.ShimUserDataLoveObject.AllInstances.HasUserDataOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Love.UserDataLoveObject,System.Boolean})">
            <summary>Sets the Shim of UserDataLoveObject.HasUserData(UserDataLoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimUserDataLoveObject.AllInstances.RemoveUserDataOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Love.UserDataLoveObject,System.Boolean})">
            <summary>Sets the Shim of UserDataLoveObject.RemoveUserData(UserDataLoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimUserDataLoveObject.AllInstances.SetUserDataOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Love.UserDataLoveObject,``0})">
            <summary>Sets the Shim of UserDataLoveObject.SetUserData(UserDataLoveObject this, !!0 data)</summary>
        </member>
        <member name="M:Love.Fakes.ShimUserDataLoveObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimUserDataLoveObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimUserDataLoveObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimUserDataLoveObject.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimUserDataLoveObject.ClearUserData">
            <summary>Sets the Shim of UserDataLoveObject.ClearUserData(UserDataLoveObject this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimUserDataLoveObject.Constructor">
            <summary>Sets the Shim of UserDataLoveObject.UserDataLoveObject(UserDataLoveObject this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimUserDataLoveObject.GetUserDataAll">
            <summary>Sets the Shim of UserDataLoveObject.GetUserDataAll(UserDataLoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimUserDataLoveObject.GetUserDataOf1M0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{``0,System.Boolean})">
            <summary>Sets the Shim of UserDataLoveObject.GetUserData(UserDataLoveObject this, !!0&amp; data)</summary>
        </member>
        <member name="M:Love.Fakes.ShimUserDataLoveObject.HasUserDataOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets the Shim of UserDataLoveObject.HasUserData(UserDataLoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimUserDataLoveObject.RemoveUserDataOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets the Shim of UserDataLoveObject.RemoveUserData(UserDataLoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimUserDataLoveObject.SetUserDataOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Sets the Shim of UserDataLoveObject.SetUserData(UserDataLoveObject this, !!0 data)</summary>
        </member>
        <member name="T:Love.Fakes.ShimVector2">
            <summary>Shim type of Love.Vector2</summary>
        </member>
        <member name="M:Love.Fakes.ShimVector2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.AddVector2RefVector2RefVector2Out">
            <summary>Sets the Shim of Vector2.Add(Vector2* value1, Vector2* value2, Vector2* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.AddVector2Vector2">
            <summary>Sets the Shim of Vector2.Add(Vector2 value1, Vector2 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.AdditionOpVector2Vector2">
            <summary>Sets the Shim of Vector2.op_Addition(Vector2 value1, Vector2 value2)</summary>
        </member>
        <member name="T:Love.Fakes.ShimVector2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.ArraySingleArray">
            <summary>Sets the Shim of Vector2.Array(Single[] points)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.BarycentricVector2RefVector2RefVector2RefSingleSingleVector2Out">
            <summary>Sets the Shim of Vector2.Barycentric(Vector2* value1, Vector2* value2, Vector2* value3, Single amount1, Single amount2, Vector2* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.BarycentricVector2Vector2Vector2SingleSingle">
            <summary>Sets the Shim of Vector2.Barycentric(Vector2 value1, Vector2 value2, Vector2 value3, Single amount1, Single amount2)</summary>
        </member>
        <member name="M:Love.Fakes.ShimVector2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimVector2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.CatmullRomVector2RefVector2RefVector2RefVector2RefSingleVector2Out">
            <summary>Sets the Shim of Vector2.CatmullRom(Vector2* value1, Vector2* value2, Vector2* value3, Vector2* value4, Single amount, Vector2* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.CatmullRomVector2Vector2Vector2Vector2Single">
            <summary>Sets the Shim of Vector2.CatmullRom(Vector2 value1, Vector2 value2, Vector2 value3, Vector2 value4, Single amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.ClampVector2RefVector2RefVector2RefVector2Out">
            <summary>Sets the Shim of Vector2.Clamp(Vector2* value1, Vector2* min, Vector2* max, Vector2* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.ClampVector2Vector2Vector2">
            <summary>Sets the Shim of Vector2.Clamp(Vector2 value1, Vector2 min, Vector2 max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.DistanceSquaredVector2RefVector2RefSingleOut">
            <summary>Sets the Shim of Vector2.DistanceSquared(Vector2* value1, Vector2* value2, Single* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.DistanceSquaredVector2Vector2">
            <summary>Sets the Shim of Vector2.DistanceSquared(Vector2 value1, Vector2 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.DistanceVector2RefVector2RefSingleOut">
            <summary>Sets the Shim of Vector2.Distance(Vector2* value1, Vector2* value2, Single* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.DistanceVector2Vector2">
            <summary>Sets the Shim of Vector2.Distance(Vector2 value1, Vector2 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.DivideVector2RefSingleVector2Out">
            <summary>Sets the Shim of Vector2.Divide(Vector2* value1, Single divider, Vector2* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.DivideVector2RefVector2RefVector2Out">
            <summary>Sets the Shim of Vector2.Divide(Vector2* value1, Vector2* value2, Vector2* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.DivideVector2Single">
            <summary>Sets the Shim of Vector2.Divide(Vector2 value1, Single divider)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.DivideVector2Vector2">
            <summary>Sets the Shim of Vector2.Divide(Vector2 value1, Vector2 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.DivisionOpVector2Single">
            <summary>Sets the Shim of Vector2.op_Division(Vector2 value1, Single divider)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.DivisionOpVector2Vector2">
            <summary>Sets the Shim of Vector2.op_Division(Vector2 value1, Vector2 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.DotVector2RefVector2RefSingleOut">
            <summary>Sets the Shim of Vector2.Dot(Vector2* value1, Vector2* value2, Single* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.DotVector2Vector2">
            <summary>Sets the Shim of Vector2.Dot(Vector2 value1, Vector2 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.DownGet">
            <summary>Sets the Shim of Vector2.get_Down()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.EqualityOpVector2Vector2">
            <summary>Sets the Shim of Vector2.op_Equality(Vector2 value1, Vector2 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.HermiteVector2RefVector2RefVector2RefVector2RefSingleVector2Out">
            <summary>Sets the Shim of Vector2.Hermite(Vector2* value1, Vector2* tangent1, Vector2* value2, Vector2* tangent2, Single amount, Vector2* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.InequalityOpVector2Vector2">
            <summary>Sets the Shim of Vector2.op_Inequality(Vector2 value1, Vector2 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.LeftGet">
            <summary>Sets the Shim of Vector2.get_Left()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.LerpVector2RefVector2RefSingleVector2Out">
            <summary>Sets the Shim of Vector2.Lerp(Vector2* value1, Vector2* value2, Single amount, Vector2* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.LerpVector2Vector2Single">
            <summary>Sets the Shim of Vector2.Lerp(Vector2 value1, Vector2 value2, Single amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.MaxVector2RefVector2RefVector2Out">
            <summary>Sets the Shim of Vector2.Max(Vector2* value1, Vector2* value2, Vector2* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.MaxVector2Vector2">
            <summary>Sets the Shim of Vector2.Max(Vector2 value1, Vector2 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.MinVector2RefVector2RefVector2Out">
            <summary>Sets the Shim of Vector2.Min(Vector2* value1, Vector2* value2, Vector2* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.MinVector2Vector2">
            <summary>Sets the Shim of Vector2.Min(Vector2 value1, Vector2 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.MultiplyOpSingleVector2">
            <summary>Sets the Shim of Vector2.op_Multiply(Single scaleFactor, Vector2 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.MultiplyOpVector2Single">
            <summary>Sets the Shim of Vector2.op_Multiply(Vector2 value, Single scaleFactor)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.MultiplyOpVector2Vector2">
            <summary>Sets the Shim of Vector2.op_Multiply(Vector2 value1, Vector2 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.MultiplyVector2RefSingleVector2Out">
            <summary>Sets the Shim of Vector2.Multiply(Vector2* value1, Single scaleFactor, Vector2* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.MultiplyVector2RefVector2RefVector2Out">
            <summary>Sets the Shim of Vector2.Multiply(Vector2* value1, Vector2* value2, Vector2* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.MultiplyVector2Single">
            <summary>Sets the Shim of Vector2.Multiply(Vector2 value1, Single scaleFactor)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.MultiplyVector2Vector2">
            <summary>Sets the Shim of Vector2.Multiply(Vector2 value1, Vector2 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.NegateVector2">
            <summary>Sets the Shim of Vector2.Negate(Vector2 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.NegateVector2RefVector2Out">
            <summary>Sets the Shim of Vector2.Negate(Vector2* value, Vector2* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.NormalizeVector2">
            <summary>Sets the Shim of Vector2.Normalize(Vector2 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.NormalizeVector2RefVector2Out">
            <summary>Sets the Shim of Vector2.Normalize(Vector2* value, Vector2* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.OneGet">
            <summary>Sets the Shim of Vector2.get_One()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.ReflectVector2RefVector2RefVector2Out">
            <summary>Sets the Shim of Vector2.Reflect(Vector2* vector, Vector2* normal, Vector2* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.ReflectVector2Vector2">
            <summary>Sets the Shim of Vector2.Reflect(Vector2 vector, Vector2 normal)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.RightGet">
            <summary>Sets the Shim of Vector2.get_Right()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.RotateRadianVector2Single">
            <summary>Sets the Shim of Vector2.RotateRadian(Vector2 v, Single radins)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.RotateVector2Single">
            <summary>Sets the Shim of Vector2.Rotate(Vector2 v, Single degrees)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.ScalarProjectionVector2Vector2">
            <summary>Sets the Shim of Vector2.ScalarProjection(Vector2 a, Vector2 b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.SmoothStepVector2RefVector2RefSingleVector2Out">
            <summary>Sets the Shim of Vector2.SmoothStep(Vector2* value1, Vector2* value2, Single amount, Vector2* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.SmoothStepVector2Vector2Single">
            <summary>Sets the Shim of Vector2.SmoothStep(Vector2 value1, Vector2 value2, Single amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.StaticConstructor">
            <summary>Sets the Shim of Vector2.Vector2()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.SubtractVector2RefVector2RefVector2Out">
            <summary>Sets the Shim of Vector2.Subtract(Vector2* value1, Vector2* value2, Vector2* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.SubtractVector2Vector2">
            <summary>Sets the Shim of Vector2.Subtract(Vector2 value1, Vector2 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.SubtractionOpVector2Vector2">
            <summary>Sets the Shim of Vector2.op_Subtraction(Vector2 value1, Vector2 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.TransformNormalVector2ArrayInt32Matrix44RefVector2ArrayInt32Int32">
            <summary>Sets the Shim of Vector2.TransformNormal(Vector2[] sourceArray, Int32 sourceIndex, Matrix44* matrix, Vector2[] destinationArray, Int32 destinationIndex, Int32 length)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.TransformNormalVector2ArrayMatrix44RefVector2Array">
            <summary>Sets the Shim of Vector2.TransformNormal(Vector2[] sourceArray, Matrix44* matrix, Vector2[] destinationArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.TransformNormalVector2Matrix44">
            <summary>Sets the Shim of Vector2.TransformNormal(Vector2 normal, Matrix44 matrix)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.TransformNormalVector2RefMatrix44RefVector2Out">
            <summary>Sets the Shim of Vector2.TransformNormal(Vector2* normal, Matrix44* matrix, Vector2* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.TransformVector2ArrayInt32Matrix44RefVector2ArrayInt32Int32">
            <summary>Sets the Shim of Vector2.Transform(Vector2[] sourceArray, Int32 sourceIndex, Matrix44* matrix, Vector2[] destinationArray, Int32 destinationIndex, Int32 length)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.TransformVector2ArrayMatrix44RefVector2Array">
            <summary>Sets the Shim of Vector2.Transform(Vector2[] sourceArray, Matrix44* matrix, Vector2[] destinationArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.TransformVector2Matrix44">
            <summary>Sets the Shim of Vector2.Transform(Vector2 position, Matrix44 matrix)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.TransformVector2RefMatrix44RefVector2Out">
            <summary>Sets the Shim of Vector2.Transform(Vector2* position, Matrix44* matrix, Vector2* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.UnaryNegationOpVector2">
            <summary>Sets the Shim of Vector2.op_UnaryNegation(Vector2 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.UnitXGet">
            <summary>Sets the Shim of Vector2.get_UnitX()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.UnitYGet">
            <summary>Sets the Shim of Vector2.get_UnitY()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.UpGet">
            <summary>Sets the Shim of Vector2.get_Up()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.VectorProjectionVector2Vector2">
            <summary>Sets the Shim of Vector2.VectorProjection(Vector2 a, Vector2 b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector2.ZeroGet">
            <summary>Sets the Shim of Vector2.get_Zero()</summary>
        </member>
        <member name="T:Love.Fakes.ShimVector3">
            <summary>Shim type of Love.Vector3</summary>
        </member>
        <member name="M:Love.Fakes.ShimVector3.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.AddVector3RefVector3RefVector3Out">
            <summary>Sets the Shim of Vector3.Add(Vector3* value1, Vector3* value2, Vector3* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.AddVector3Vector3">
            <summary>Sets the Shim of Vector3.Add(Vector3 value1, Vector3 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.AdditionOpVector3Vector3">
            <summary>Sets the Shim of Vector3.op_Addition(Vector3 value1, Vector3 value2)</summary>
        </member>
        <member name="T:Love.Fakes.ShimVector3.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.BackwardGet">
            <summary>Sets the Shim of Vector3.get_Backward()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.BarycentricVector3RefVector3RefVector3RefSingleSingleVector3Out">
            <summary>Sets the Shim of Vector3.Barycentric(Vector3* value1, Vector3* value2, Vector3* value3, Single amount1, Single amount2, Vector3* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.BarycentricVector3Vector3Vector3SingleSingle">
            <summary>Sets the Shim of Vector3.Barycentric(Vector3 value1, Vector3 value2, Vector3 value3, Single amount1, Single amount2)</summary>
        </member>
        <member name="M:Love.Fakes.ShimVector3.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimVector3.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.CatmullRomVector3RefVector3RefVector3RefVector3RefSingleVector3Out">
            <summary>Sets the Shim of Vector3.CatmullRom(Vector3* value1, Vector3* value2, Vector3* value3, Vector3* value4, Single amount, Vector3* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.CatmullRomVector3Vector3Vector3Vector3Single">
            <summary>Sets the Shim of Vector3.CatmullRom(Vector3 value1, Vector3 value2, Vector3 value3, Vector3 value4, Single amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.ClampVector3RefVector3RefVector3RefVector3Out">
            <summary>Sets the Shim of Vector3.Clamp(Vector3* value1, Vector3* min, Vector3* max, Vector3* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.ClampVector3Vector3Vector3">
            <summary>Sets the Shim of Vector3.Clamp(Vector3 value1, Vector3 min, Vector3 max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.CrossVector3RefVector3RefVector3Out">
            <summary>Sets the Shim of Vector3.Cross(Vector3* vector1, Vector3* vector2, Vector3* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.CrossVector3Vector3">
            <summary>Sets the Shim of Vector3.Cross(Vector3 vector1, Vector3 vector2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.DistanceSquaredVector3RefVector3RefSingleOut">
            <summary>Sets the Shim of Vector3.DistanceSquared(Vector3* value1, Vector3* value2, Single* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.DistanceSquaredVector3Vector3">
            <summary>Sets the Shim of Vector3.DistanceSquared(Vector3 value1, Vector3 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.DistanceVector3RefVector3RefSingleOut">
            <summary>Sets the Shim of Vector3.Distance(Vector3* value1, Vector3* value2, Single* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.DistanceVector3Vector3">
            <summary>Sets the Shim of Vector3.Distance(Vector3 vector1, Vector3 vector2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.DivideVector3RefSingleVector3Out">
            <summary>Sets the Shim of Vector3.Divide(Vector3* value1, Single divisor, Vector3* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.DivideVector3RefVector3RefVector3Out">
            <summary>Sets the Shim of Vector3.Divide(Vector3* value1, Vector3* value2, Vector3* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.DivideVector3Single">
            <summary>Sets the Shim of Vector3.Divide(Vector3 value1, Single value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.DivideVector3Vector3">
            <summary>Sets the Shim of Vector3.Divide(Vector3 value1, Vector3 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.DivisionOpVector3Single">
            <summary>Sets the Shim of Vector3.op_Division(Vector3 value, Single divider)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.DivisionOpVector3Vector3">
            <summary>Sets the Shim of Vector3.op_Division(Vector3 value1, Vector3 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.DotVector3RefVector3RefSingleOut">
            <summary>Sets the Shim of Vector3.Dot(Vector3* vector1, Vector3* vector2, Single* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.DotVector3Vector3">
            <summary>Sets the Shim of Vector3.Dot(Vector3 vector1, Vector3 vector2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.DownGet">
            <summary>Sets the Shim of Vector3.get_Down()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.EqualityOpVector3Vector3">
            <summary>Sets the Shim of Vector3.op_Equality(Vector3 value1, Vector3 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.ForwardGet">
            <summary>Sets the Shim of Vector3.get_Forward()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.HermiteVector3RefVector3RefVector3RefVector3RefSingleVector3Out">
            <summary>Sets the Shim of Vector3.Hermite(Vector3* value1, Vector3* tangent1, Vector3* value2, Vector3* tangent2, Single amount, Vector3* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.HermiteVector3Vector3Vector3Vector3Single">
            <summary>Sets the Shim of Vector3.Hermite(Vector3 value1, Vector3 tangent1, Vector3 value2, Vector3 tangent2, Single amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.InequalityOpVector3Vector3">
            <summary>Sets the Shim of Vector3.op_Inequality(Vector3 value1, Vector3 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.LeftGet">
            <summary>Sets the Shim of Vector3.get_Left()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.LerpVector3RefVector3RefSingleVector3Out">
            <summary>Sets the Shim of Vector3.Lerp(Vector3* value1, Vector3* value2, Single amount, Vector3* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.LerpVector3Vector3Single">
            <summary>Sets the Shim of Vector3.Lerp(Vector3 value1, Vector3 value2, Single amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.MaxVector3RefVector3RefVector3Out">
            <summary>Sets the Shim of Vector3.Max(Vector3* value1, Vector3* value2, Vector3* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.MaxVector3Vector3">
            <summary>Sets the Shim of Vector3.Max(Vector3 value1, Vector3 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.MinVector3RefVector3RefVector3Out">
            <summary>Sets the Shim of Vector3.Min(Vector3* value1, Vector3* value2, Vector3* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.MinVector3Vector3">
            <summary>Sets the Shim of Vector3.Min(Vector3 value1, Vector3 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.MultiplyOpSingleVector3">
            <summary>Sets the Shim of Vector3.op_Multiply(Single scaleFactor, Vector3 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.MultiplyOpVector3Single">
            <summary>Sets the Shim of Vector3.op_Multiply(Vector3 value, Single scaleFactor)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.MultiplyOpVector3Vector3">
            <summary>Sets the Shim of Vector3.op_Multiply(Vector3 value1, Vector3 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.MultiplyVector3RefSingleVector3Out">
            <summary>Sets the Shim of Vector3.Multiply(Vector3* value1, Single scaleFactor, Vector3* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.MultiplyVector3RefVector3RefVector3Out">
            <summary>Sets the Shim of Vector3.Multiply(Vector3* value1, Vector3* value2, Vector3* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.MultiplyVector3Single">
            <summary>Sets the Shim of Vector3.Multiply(Vector3 value1, Single scaleFactor)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.MultiplyVector3Vector3">
            <summary>Sets the Shim of Vector3.Multiply(Vector3 value1, Vector3 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.NegateVector3">
            <summary>Sets the Shim of Vector3.Negate(Vector3 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.NegateVector3RefVector3Out">
            <summary>Sets the Shim of Vector3.Negate(Vector3* value, Vector3* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.NormalizeVector3">
            <summary>Sets the Shim of Vector3.Normalize(Vector3 vector)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.NormalizeVector3RefVector3Out">
            <summary>Sets the Shim of Vector3.Normalize(Vector3* value, Vector3* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.OneGet">
            <summary>Sets the Shim of Vector3.get_One()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.ReflectVector3RefVector3RefVector3Out">
            <summary>Sets the Shim of Vector3.Reflect(Vector3* vector, Vector3* normal, Vector3* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.ReflectVector3Vector3">
            <summary>Sets the Shim of Vector3.Reflect(Vector3 vector, Vector3 normal)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.RightGet">
            <summary>Sets the Shim of Vector3.get_Right()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.ScalarProjectionVector3Vector3">
            <summary>Sets the Shim of Vector3.ScalarProjection(Vector3 a, Vector3 b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.SmoothStepVector3RefVector3RefSingleVector3Out">
            <summary>Sets the Shim of Vector3.SmoothStep(Vector3* value1, Vector3* value2, Single amount, Vector3* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.SmoothStepVector3Vector3Single">
            <summary>Sets the Shim of Vector3.SmoothStep(Vector3 value1, Vector3 value2, Single amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.StaticConstructor">
            <summary>Sets the Shim of Vector3.Vector3()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.SubtractVector3RefVector3RefVector3Out">
            <summary>Sets the Shim of Vector3.Subtract(Vector3* value1, Vector3* value2, Vector3* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.SubtractVector3Vector3">
            <summary>Sets the Shim of Vector3.Subtract(Vector3 value1, Vector3 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.SubtractionOpVector3Vector3">
            <summary>Sets the Shim of Vector3.op_Subtraction(Vector3 value1, Vector3 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.TransformNormalVector3ArrayInt32Matrix44RefVector3ArrayInt32Int32">
            <summary>Sets the Shim of Vector3.TransformNormal(Vector3[] sourceArray, Int32 sourceIndex, Matrix44* matrix, Vector3[] destinationArray, Int32 destinationIndex, Int32 length)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.TransformNormalVector3ArrayMatrix44RefVector3Array">
            <summary>Sets the Shim of Vector3.TransformNormal(Vector3[] sourceArray, Matrix44* matrix, Vector3[] destinationArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.TransformNormalVector3Matrix44">
            <summary>Sets the Shim of Vector3.TransformNormal(Vector3 normal, Matrix44 matrix)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.TransformNormalVector3RefMatrix44RefVector3Out">
            <summary>Sets the Shim of Vector3.TransformNormal(Vector3* normal, Matrix44* matrix, Vector3* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.TransformVector3ArrayInt32Matrix44RefVector3ArrayInt32Int32">
            <summary>Sets the Shim of Vector3.Transform(Vector3[] sourceArray, Int32 sourceIndex, Matrix44* matrix, Vector3[] destinationArray, Int32 destinationIndex, Int32 length)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.TransformVector3ArrayMatrix44RefVector3Array">
            <summary>Sets the Shim of Vector3.Transform(Vector3[] sourceArray, Matrix44* matrix, Vector3[] destinationArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.TransformVector3Matrix44">
            <summary>Sets the Shim of Vector3.Transform(Vector3 position, Matrix44 matrix)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.TransformVector3RefMatrix44RefVector3Out">
            <summary>Sets the Shim of Vector3.Transform(Vector3* position, Matrix44* matrix, Vector3* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.UnaryNegationOpVector3">
            <summary>Sets the Shim of Vector3.op_UnaryNegation(Vector3 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.UnitXGet">
            <summary>Sets the Shim of Vector3.get_UnitX()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.UnitYGet">
            <summary>Sets the Shim of Vector3.get_UnitY()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.UnitZGet">
            <summary>Sets the Shim of Vector3.get_UnitZ()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.UpGet">
            <summary>Sets the Shim of Vector3.get_Up()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.VectorProjectionVector3Vector3">
            <summary>Sets the Shim of Vector3.VectorProjection(Vector3 a, Vector3 b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector3.ZeroGet">
            <summary>Sets the Shim of Vector3.get_Zero()</summary>
        </member>
        <member name="T:Love.Fakes.ShimVector4">
            <summary>Shim type of Love.Vector4</summary>
        </member>
        <member name="M:Love.Fakes.ShimVector4.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.AddVector4RefVector4RefVector4Out">
            <summary>Sets the Shim of Vector4.Add(Vector4* value1, Vector4* value2, Vector4* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.AddVector4Vector4">
            <summary>Sets the Shim of Vector4.Add(Vector4 value1, Vector4 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.AdditionOpVector4Vector4">
            <summary>Sets the Shim of Vector4.op_Addition(Vector4 value1, Vector4 value2)</summary>
        </member>
        <member name="T:Love.Fakes.ShimVector4.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.BarycentricVector4RefVector4RefVector4RefSingleSingleVector4Out">
            <summary>Sets the Shim of Vector4.Barycentric(Vector4* value1, Vector4* value2, Vector4* value3, Single amount1, Single amount2, Vector4* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.BarycentricVector4Vector4Vector4SingleSingle">
            <summary>Sets the Shim of Vector4.Barycentric(Vector4 value1, Vector4 value2, Vector4 value3, Single amount1, Single amount2)</summary>
        </member>
        <member name="M:Love.Fakes.ShimVector4.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimVector4.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.CatmullRomVector4RefVector4RefVector4RefVector4RefSingleVector4Out">
            <summary>Sets the Shim of Vector4.CatmullRom(Vector4* value1, Vector4* value2, Vector4* value3, Vector4* value4, Single amount, Vector4* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.CatmullRomVector4Vector4Vector4Vector4Single">
            <summary>Sets the Shim of Vector4.CatmullRom(Vector4 value1, Vector4 value2, Vector4 value3, Vector4 value4, Single amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.ClampVector4RefVector4RefVector4RefVector4Out">
            <summary>Sets the Shim of Vector4.Clamp(Vector4* value1, Vector4* min, Vector4* max, Vector4* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.ClampVector4Vector4Vector4">
            <summary>Sets the Shim of Vector4.Clamp(Vector4 value1, Vector4 min, Vector4 max)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.DistanceSquaredVector4RefVector4RefSingleOut">
            <summary>Sets the Shim of Vector4.DistanceSquared(Vector4* value1, Vector4* value2, Single* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.DistanceSquaredVector4Vector4">
            <summary>Sets the Shim of Vector4.DistanceSquared(Vector4 value1, Vector4 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.DistanceVector4RefVector4RefSingleOut">
            <summary>Sets the Shim of Vector4.Distance(Vector4* value1, Vector4* value2, Single* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.DistanceVector4Vector4">
            <summary>Sets the Shim of Vector4.Distance(Vector4 value1, Vector4 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.DivideVector4RefSingleVector4Out">
            <summary>Sets the Shim of Vector4.Divide(Vector4* value1, Single divider, Vector4* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.DivideVector4RefVector4RefVector4Out">
            <summary>Sets the Shim of Vector4.Divide(Vector4* value1, Vector4* value2, Vector4* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.DivideVector4Single">
            <summary>Sets the Shim of Vector4.Divide(Vector4 value1, Single divider)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.DivideVector4Vector4">
            <summary>Sets the Shim of Vector4.Divide(Vector4 value1, Vector4 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.DivisionOpVector4Single">
            <summary>Sets the Shim of Vector4.op_Division(Vector4 value1, Single divider)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.DivisionOpVector4Vector4">
            <summary>Sets the Shim of Vector4.op_Division(Vector4 value1, Vector4 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.DotVector4RefVector4RefSingleOut">
            <summary>Sets the Shim of Vector4.Dot(Vector4* vector1, Vector4* vector2, Single* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.DotVector4Vector4">
            <summary>Sets the Shim of Vector4.Dot(Vector4 vector1, Vector4 vector2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.EqualityOpVector4Vector4">
            <summary>Sets the Shim of Vector4.op_Equality(Vector4 value1, Vector4 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.HermiteVector4RefVector4RefVector4RefVector4RefSingleVector4Out">
            <summary>Sets the Shim of Vector4.Hermite(Vector4* value1, Vector4* tangent1, Vector4* value2, Vector4* tangent2, Single amount, Vector4* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.HermiteVector4Vector4Vector4Vector4Single">
            <summary>Sets the Shim of Vector4.Hermite(Vector4 value1, Vector4 tangent1, Vector4 value2, Vector4 tangent2, Single amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.InequalityOpVector4Vector4">
            <summary>Sets the Shim of Vector4.op_Inequality(Vector4 value1, Vector4 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.LerpVector4RefVector4RefSingleVector4Out">
            <summary>Sets the Shim of Vector4.Lerp(Vector4* value1, Vector4* value2, Single amount, Vector4* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.LerpVector4Vector4Single">
            <summary>Sets the Shim of Vector4.Lerp(Vector4 value1, Vector4 value2, Single amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.MaxVector4RefVector4RefVector4Out">
            <summary>Sets the Shim of Vector4.Max(Vector4* value1, Vector4* value2, Vector4* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.MaxVector4Vector4">
            <summary>Sets the Shim of Vector4.Max(Vector4 value1, Vector4 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.MinVector4RefVector4RefVector4Out">
            <summary>Sets the Shim of Vector4.Min(Vector4* value1, Vector4* value2, Vector4* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.MinVector4Vector4">
            <summary>Sets the Shim of Vector4.Min(Vector4 value1, Vector4 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.MultiplyOpSingleVector4">
            <summary>Sets the Shim of Vector4.op_Multiply(Single scaleFactor, Vector4 value1)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.MultiplyOpVector4Single">
            <summary>Sets the Shim of Vector4.op_Multiply(Vector4 value1, Single scaleFactor)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.MultiplyOpVector4Vector4">
            <summary>Sets the Shim of Vector4.op_Multiply(Vector4 value1, Vector4 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.MultiplyVector4RefSingleVector4Out">
            <summary>Sets the Shim of Vector4.Multiply(Vector4* value1, Single scaleFactor, Vector4* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.MultiplyVector4RefVector4RefVector4Out">
            <summary>Sets the Shim of Vector4.Multiply(Vector4* value1, Vector4* value2, Vector4* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.MultiplyVector4Single">
            <summary>Sets the Shim of Vector4.Multiply(Vector4 value1, Single scaleFactor)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.MultiplyVector4Vector4">
            <summary>Sets the Shim of Vector4.Multiply(Vector4 value1, Vector4 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.NegateVector4">
            <summary>Sets the Shim of Vector4.Negate(Vector4 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.NegateVector4RefVector4Out">
            <summary>Sets the Shim of Vector4.Negate(Vector4* value, Vector4* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.NormalizeVector4">
            <summary>Sets the Shim of Vector4.Normalize(Vector4 vector)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.NormalizeVector4RefVector4Out">
            <summary>Sets the Shim of Vector4.Normalize(Vector4* vector, Vector4* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.OneGet">
            <summary>Sets the Shim of Vector4.get_One()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.ScalarProjectionVector4Vector4">
            <summary>Sets the Shim of Vector4.ScalarProjection(Vector4 a, Vector4 b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.SmoothStepVector4RefVector4RefSingleVector4Out">
            <summary>Sets the Shim of Vector4.SmoothStep(Vector4* value1, Vector4* value2, Single amount, Vector4* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.SmoothStepVector4Vector4Single">
            <summary>Sets the Shim of Vector4.SmoothStep(Vector4 value1, Vector4 value2, Single amount)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.StaticConstructor">
            <summary>Sets the Shim of Vector4.Vector4()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.SubtractVector4RefVector4RefVector4Out">
            <summary>Sets the Shim of Vector4.Subtract(Vector4* value1, Vector4* value2, Vector4* result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.SubtractVector4Vector4">
            <summary>Sets the Shim of Vector4.Subtract(Vector4 value1, Vector4 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.SubtractionOpVector4Vector4">
            <summary>Sets the Shim of Vector4.op_Subtraction(Vector4 value1, Vector4 value2)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.UnaryNegationOpVector4">
            <summary>Sets the Shim of Vector4.op_UnaryNegation(Vector4 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.UnitWGet">
            <summary>Sets the Shim of Vector4.get_UnitW()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.UnitXGet">
            <summary>Sets the Shim of Vector4.get_UnitX()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.UnitYGet">
            <summary>Sets the Shim of Vector4.get_UnitY()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.UnitZGet">
            <summary>Sets the Shim of Vector4.get_UnitZ()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.VectorProjectionVector4Vector4">
            <summary>Sets the Shim of Vector4.VectorProjection(Vector4 a, Vector4 b)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVector4.ZeroGet">
            <summary>Sets the Shim of Vector4.get_Zero()</summary>
        </member>
        <member name="T:Love.Fakes.ShimVideo">
            <summary>Shim type of Love.Video</summary>
        </member>
        <member name="M:Love.Fakes.ShimVideo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimVideo.#ctor(Love.Video)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimVideo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.AllInstances.GetFilterFilterModeOutFilterModeOutSingleOut">
            <summary>Sets the Shim of Video.GetFilter(Video this, FilterMode* out_filtermin_type, FilterMode* out_filtermag_type, Single* out_anisotropy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.AllInstances.GetHeight">
            <summary>Sets the Shim of Video.GetHeight(Video this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.AllInstances.GetSource">
            <summary>Sets the Shim of Video.GetSource(Video this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.AllInstances.GetStream">
            <summary>Sets the Shim of Video.GetStream(Video this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.AllInstances.GetWidth">
            <summary>Sets the Shim of Video.GetWidth(Video this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.AllInstances.IsPlaying">
            <summary>Sets the Shim of Video.IsPlaying(Video this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.AllInstances.Pause">
            <summary>Sets the Shim of Video.Pause(Video this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.AllInstances.Play">
            <summary>Sets the Shim of Video.Play(Video this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.AllInstances.Rewind">
            <summary>Sets the Shim of Video.Rewind(Video this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.AllInstances.SeekDouble">
            <summary>Sets the Shim of Video.Seek(Video this, Double offset)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.AllInstances.SetFilterFilterModeFilterModeSingle">
            <summary>Sets the Shim of Video.SetFilter(Video this, FilterMode filtermin_type, FilterMode filtermag_type, Single anisotropy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.AllInstances.SetSourceSource">
            <summary>Sets the Shim of Video.SetSource(Video this, Source source)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.AllInstances.Tell">
            <summary>Sets the Shim of Video.Tell(Video this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimVideo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimVideo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimVideo.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.Constructor">
            <summary>Sets the Shim of Video.Video(Video this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.GetHeight">
            <summary>Sets the Shim of Video.GetHeight(Video this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.GetSource">
            <summary>Sets the Shim of Video.GetSource(Video this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.GetStream">
            <summary>Sets the Shim of Video.GetStream(Video this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.GetWidth">
            <summary>Sets the Shim of Video.GetWidth(Video this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.Init">
            <summary>Sets the Shim of Video.Init()</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.IsPlaying">
            <summary>Sets the Shim of Video.IsPlaying(Video this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.NewVideoStreamFile">
            <summary>Sets the Shim of Video.NewVideoStream(File file)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.NewVideoStreamString">
            <summary>Sets the Shim of Video.NewVideoStream(String filename)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.Pause">
            <summary>Sets the Shim of Video.Pause(Video this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.Play">
            <summary>Sets the Shim of Video.Play(Video this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.Rewind">
            <summary>Sets the Shim of Video.Rewind(Video this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.SeekDouble">
            <summary>Sets the Shim of Video.Seek(Video this, Double offset)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.SetFilterFilterModeFilterModeSingle">
            <summary>Sets the Shim of Video.SetFilter(Video this, FilterMode filtermin_type, FilterMode filtermag_type, Single anisotropy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.SetSourceSource">
            <summary>Sets the Shim of Video.SetSource(Video this, Source source)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideo.Tell">
            <summary>Sets the Shim of Video.Tell(Video this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimVideoStream">
            <summary>Shim type of Love.VideoStream</summary>
        </member>
        <member name="M:Love.Fakes.ShimVideoStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimVideoStream.#ctor(Love.VideoStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimVideoStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideoStream.AllInstances.GetFilename">
            <summary>Sets the Shim of VideoStream.GetFilename(VideoStream this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideoStream.AllInstances.IsPlaying">
            <summary>Sets the Shim of VideoStream.IsPlaying(VideoStream this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideoStream.AllInstances.Pause">
            <summary>Sets the Shim of VideoStream.Pause(VideoStream this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideoStream.AllInstances.Play">
            <summary>Sets the Shim of VideoStream.Play(VideoStream this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideoStream.AllInstances.Rewind">
            <summary>Sets the Shim of VideoStream.Rewind(VideoStream this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideoStream.AllInstances.SeekDouble">
            <summary>Sets the Shim of VideoStream.Seek(VideoStream this, Double offset)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideoStream.AllInstances.Tell">
            <summary>Sets the Shim of VideoStream.Tell(VideoStream this)</summary>
        </member>
        <member name="M:Love.Fakes.ShimVideoStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimVideoStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideoStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimVideoStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideoStream.Constructor">
            <summary>Sets the Shim of VideoStream.VideoStream(VideoStream this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideoStream.GetFilename">
            <summary>Sets the Shim of VideoStream.GetFilename(VideoStream this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideoStream.IsPlaying">
            <summary>Sets the Shim of VideoStream.IsPlaying(VideoStream this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideoStream.Pause">
            <summary>Sets the Shim of VideoStream.Pause(VideoStream this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideoStream.Play">
            <summary>Sets the Shim of VideoStream.Play(VideoStream this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideoStream.Rewind">
            <summary>Sets the Shim of VideoStream.Rewind(VideoStream this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideoStream.SeekDouble">
            <summary>Sets the Shim of VideoStream.Seek(VideoStream this, Double offset)</summary>
        </member>
        <member name="P:Love.Fakes.ShimVideoStream.Tell">
            <summary>Sets the Shim of VideoStream.Tell(VideoStream this)</summary>
        </member>
        <member name="T:Love.Fakes.ShimWeldJoint">
            <summary>Shim type of Love.WeldJoint</summary>
        </member>
        <member name="M:Love.Fakes.ShimWeldJoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimWeldJoint.#ctor(Love.WeldJoint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimWeldJoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimWeldJoint.AllInstances.GetDampingRatio">
            <summary>Sets the Shim of WeldJoint.GetDampingRatio(WeldJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWeldJoint.AllInstances.GetFrequency">
            <summary>Sets the Shim of WeldJoint.GetFrequency(WeldJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWeldJoint.AllInstances.GetReferenceAngle">
            <summary>Sets the Shim of WeldJoint.GetReferenceAngle(WeldJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWeldJoint.AllInstances.SetDampingRatioSingle">
            <summary>Sets the Shim of WeldJoint.SetDampingRatio(WeldJoint this, Single ratio)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWeldJoint.AllInstances.SetFrequencySingle">
            <summary>Sets the Shim of WeldJoint.SetFrequency(WeldJoint this, Single frequency)</summary>
        </member>
        <member name="M:Love.Fakes.ShimWeldJoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimWeldJoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimWeldJoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimWeldJoint.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimWeldJoint.Constructor">
            <summary>Sets the Shim of WeldJoint.WeldJoint(WeldJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWeldJoint.GetDampingRatio">
            <summary>Sets the Shim of WeldJoint.GetDampingRatio(WeldJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWeldJoint.GetFrequency">
            <summary>Sets the Shim of WeldJoint.GetFrequency(WeldJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWeldJoint.GetReferenceAngle">
            <summary>Sets the Shim of WeldJoint.GetReferenceAngle(WeldJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWeldJoint.SetDampingRatioSingle">
            <summary>Sets the Shim of WeldJoint.SetDampingRatio(WeldJoint this, Single ratio)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWeldJoint.SetFrequencySingle">
            <summary>Sets the Shim of WeldJoint.SetFrequency(WeldJoint this, Single frequency)</summary>
        </member>
        <member name="T:Love.Fakes.ShimWheelJoint">
            <summary>Shim type of Love.WheelJoint</summary>
        </member>
        <member name="M:Love.Fakes.ShimWheelJoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimWheelJoint.#ctor(Love.WheelJoint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimWheelJoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.AllInstances.GetAxisSingleOutSingleOut">
            <summary>Sets the Shim of WheelJoint.GetAxis(WheelJoint this, Single* axisX, Single* axisY)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.AllInstances.GetJointSpeed">
            <summary>Sets the Shim of WheelJoint.GetJointSpeed(WheelJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.AllInstances.GetJointTranslation">
            <summary>Sets the Shim of WheelJoint.GetJointTranslation(WheelJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.AllInstances.GetMaxMotorTorque">
            <summary>Sets the Shim of WheelJoint.GetMaxMotorTorque(WheelJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.AllInstances.GetMotorSpeed">
            <summary>Sets the Shim of WheelJoint.GetMotorSpeed(WheelJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.AllInstances.GetMotorTorqueSingle">
            <summary>Sets the Shim of WheelJoint.GetMotorTorque(WheelJoint this, Single inv_dt)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.AllInstances.GetSpringDampingRatio">
            <summary>Sets the Shim of WheelJoint.GetSpringDampingRatio(WheelJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.AllInstances.GetSpringFrequency">
            <summary>Sets the Shim of WheelJoint.GetSpringFrequency(WheelJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.AllInstances.IsMotorEnabled">
            <summary>Sets the Shim of WheelJoint.IsMotorEnabled(WheelJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.AllInstances.SetMaxMotorTorqueSingle">
            <summary>Sets the Shim of WheelJoint.SetMaxMotorTorque(WheelJoint this, Single torque)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.AllInstances.SetMotorEnabledBoolean">
            <summary>Sets the Shim of WheelJoint.SetMotorEnabled(WheelJoint this, Boolean enabled)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.AllInstances.SetMotorSpeedSingle">
            <summary>Sets the Shim of WheelJoint.SetMotorSpeed(WheelJoint this, Single speed)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.AllInstances.SetSpringDampingRatioSingle">
            <summary>Sets the Shim of WheelJoint.SetSpringDampingRatio(WheelJoint this, Single ratio)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.AllInstances.SetSpringFrequencySingle">
            <summary>Sets the Shim of WheelJoint.SetSpringFrequency(WheelJoint this, Single frequency)</summary>
        </member>
        <member name="M:Love.Fakes.ShimWheelJoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimWheelJoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimWheelJoint.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.Constructor">
            <summary>Sets the Shim of WheelJoint.WheelJoint(WheelJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.GetAxisSingleOutSingleOut">
            <summary>Sets the Shim of WheelJoint.GetAxis(WheelJoint this, Single* axisX, Single* axisY)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.GetJointSpeed">
            <summary>Sets the Shim of WheelJoint.GetJointSpeed(WheelJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.GetJointTranslation">
            <summary>Sets the Shim of WheelJoint.GetJointTranslation(WheelJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.GetMaxMotorTorque">
            <summary>Sets the Shim of WheelJoint.GetMaxMotorTorque(WheelJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.GetMotorSpeed">
            <summary>Sets the Shim of WheelJoint.GetMotorSpeed(WheelJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.GetMotorTorqueSingle">
            <summary>Sets the Shim of WheelJoint.GetMotorTorque(WheelJoint this, Single inv_dt)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.GetSpringDampingRatio">
            <summary>Sets the Shim of WheelJoint.GetSpringDampingRatio(WheelJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.GetSpringFrequency">
            <summary>Sets the Shim of WheelJoint.GetSpringFrequency(WheelJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.IsMotorEnabled">
            <summary>Sets the Shim of WheelJoint.IsMotorEnabled(WheelJoint this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.SetMaxMotorTorqueSingle">
            <summary>Sets the Shim of WheelJoint.SetMaxMotorTorque(WheelJoint this, Single torque)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.SetMotorEnabledBoolean">
            <summary>Sets the Shim of WheelJoint.SetMotorEnabled(WheelJoint this, Boolean enabled)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.SetMotorSpeedSingle">
            <summary>Sets the Shim of WheelJoint.SetMotorSpeed(WheelJoint this, Single speed)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.SetSpringDampingRatioSingle">
            <summary>Sets the Shim of WheelJoint.SetSpringDampingRatio(WheelJoint this, Single ratio)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWheelJoint.SetSpringFrequencySingle">
            <summary>Sets the Shim of WheelJoint.SetSpringFrequency(WheelJoint this, Single frequency)</summary>
        </member>
        <member name="T:Love.Fakes.ShimWindow">
            <summary>Shim type of Love.Window</summary>
        </member>
        <member name="M:Love.Fakes.ShimWindow.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimWindow.#ctor(Love.Window)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimWindow.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Fakes.ShimWindow.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimWindow.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.Close">
            <summary>Sets the Shim of Window.Close()</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.Constructor">
            <summary>Sets the Shim of Window.Window(Window this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.FromPixelsDouble">
            <summary>Sets the Shim of Window.FromPixels(Double pixelvalue)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.GetDPIScale">
            <summary>Sets the Shim of Window.GetDPIScale()</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.GetDesktopDimensionsInt32">
            <summary>Sets the Shim of Window.GetDesktopDimensions(Int32 displayIndex)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.GetDisplayCount">
            <summary>Sets the Shim of Window.GetDisplayCount()</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.GetDisplayNameInt32">
            <summary>Sets the Shim of Window.GetDisplayName(Int32 displayindex)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.GetFullscreen">
            <summary>Sets the Shim of Window.GetFullscreen()</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.GetFullscreenBooleanOutFullscreenTypeOut">
            <summary>Sets the Shim of Window.GetFullscreen(Boolean* out_fullscreen, FullscreenType* out_fstype)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.GetFullscreenModesInt32">
            <summary>Sets the Shim of Window.GetFullscreenModes(Int32 displayindex)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.GetIcon">
            <summary>Sets the Shim of Window.GetIcon()</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.GetMode">
            <summary>Sets the Shim of Window.GetMode()</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.GetModeInt32OutInt32Out">
            <summary>Sets the Shim of Window.GetMode(Int32* out_width, Int32* out_height)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.GetPosition">
            <summary>Sets the Shim of Window.GetPosition()</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.GetPositionInt32Out">
            <summary>Sets the Shim of Window.GetPosition(Int32* out_displayindex)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.GetTitle">
            <summary>Sets the Shim of Window.GetTitle()</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.HasFocus">
            <summary>Sets the Shim of Window.HasFocus()</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.HasMouseFocus">
            <summary>Sets the Shim of Window.HasMouseFocus()</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.Init">
            <summary>Sets the Shim of Window.Init()</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.IsDisplaySleepEnabled">
            <summary>Sets the Shim of Window.IsDisplaySleepEnabled()</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.IsMaximized">
            <summary>Sets the Shim of Window.IsMaximized()</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.IsOpen">
            <summary>Sets the Shim of Window.IsOpen()</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.IsVisible">
            <summary>Sets the Shim of Window.IsVisible()</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.Maximize">
            <summary>Sets the Shim of Window.Maximize()</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.Minimize">
            <summary>Sets the Shim of Window.Minimize()</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.RequestAttentionBoolean">
            <summary>Sets the Shim of Window.RequestAttention(Boolean continuous)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.SetDisplaySleepEnabledBoolean">
            <summary>Sets the Shim of Window.SetDisplaySleepEnabled(Boolean enable)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.SetFullscreenBoolean">
            <summary>Sets the Shim of Window.SetFullscreen(Boolean fullscreen)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.SetFullscreenBooleanFullscreenType">
            <summary>Sets the Shim of Window.SetFullscreen(Boolean fullscreen, FullscreenType fstype)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.SetIconImageData">
            <summary>Sets the Shim of Window.SetIcon(ImageData imagedata)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.SetModeInt32Int32WindowSettings">
            <summary>Sets the Shim of Window.SetMode(Int32 width, Int32 height, WindowSettings flag)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.SetModeWindowSettings">
            <summary>Sets the Shim of Window.SetMode(WindowSettings flag)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.SetPositionInt32Int32Int32">
            <summary>Sets the Shim of Window.SetPosition(Int32 x, Int32 y, Int32 displayindex)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.SetTitleString">
            <summary>Sets the Shim of Window.SetTitle(String titleStr)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.ShowMessageBoxStringStringMessageBoxTypeBoolean">
            <summary>Sets the Shim of Window.ShowMessageBox(String title, String message, MessageBoxType msgbox_type, Boolean attachToWindow)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.ShowMessageBoxStringStringStringArrayInt32Int32MessageBoxTypeBoolean">
            <summary>Sets the Shim of Window.ShowMessageBox(String title, String message, String[] buttonName, Int32 enterButtonIndex, Int32 escapebuttonIndex, MessageBoxType msgbox_type, Boolean attachToWindow)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindow.ToPixelsDouble">
            <summary>Sets the Shim of Window.ToPixels(Double value)</summary>
        </member>
        <member name="T:Love.Fakes.ShimWindowSettings">
            <summary>Shim type of Love.WindowSettings</summary>
        </member>
        <member name="M:Love.Fakes.ShimWindowSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimWindowSettings.#ctor(Love.WindowSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimWindowSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.BorderlessGet">
            <summary>Sets the Shim of WindowSettings.get_Borderless(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.BorderlessSetBoolean">
            <summary>Sets the Shim of WindowSettings.set_Borderless(WindowSettings this, Boolean value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.CenteredGet">
            <summary>Sets the Shim of WindowSettings.get_Centered(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.CenteredSetBoolean">
            <summary>Sets the Shim of WindowSettings.set_Centered(WindowSettings this, Boolean value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.DepthGet">
            <summary>Sets the Shim of WindowSettings.get_Depth(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.DepthSetInt32">
            <summary>Sets the Shim of WindowSettings.set_Depth(WindowSettings this, Int32 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.DisplayGet">
            <summary>Sets the Shim of WindowSettings.get_Display(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.DisplaySetInt32">
            <summary>Sets the Shim of WindowSettings.set_Display(WindowSettings this, Int32 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.FullscreenGet">
            <summary>Sets the Shim of WindowSettings.get_Fullscreen(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.FullscreenSetBoolean">
            <summary>Sets the Shim of WindowSettings.set_Fullscreen(WindowSettings this, Boolean value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.FullscreenTypeGet">
            <summary>Sets the Shim of WindowSettings.get_FullscreenType(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.FullscreenTypeSetFullscreenType">
            <summary>Sets the Shim of WindowSettings.set_FullscreenType(WindowSettings this, FullscreenType value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.HighDpiGet">
            <summary>Sets the Shim of WindowSettings.get_HighDpi(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.HighDpiSetBoolean">
            <summary>Sets the Shim of WindowSettings.set_HighDpi(WindowSettings this, Boolean value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.MSAAGet">
            <summary>Sets the Shim of WindowSettings.get_MSAA(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.MSAASetInt32">
            <summary>Sets the Shim of WindowSettings.set_MSAA(WindowSettings this, Int32 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.MinHeightGet">
            <summary>Sets the Shim of WindowSettings.get_MinHeight(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.MinHeightSetInt32">
            <summary>Sets the Shim of WindowSettings.set_MinHeight(WindowSettings this, Int32 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.MinWidthGet">
            <summary>Sets the Shim of WindowSettings.get_MinWidth(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.MinWidthSetInt32">
            <summary>Sets the Shim of WindowSettings.set_MinWidth(WindowSettings this, Int32 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.RefreshrateGet">
            <summary>Sets the Shim of WindowSettings.get_Refreshrate(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.RefreshrateSetDouble">
            <summary>Sets the Shim of WindowSettings.set_Refreshrate(WindowSettings this, Double value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.ResizableGet">
            <summary>Sets the Shim of WindowSettings.get_Resizable(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.ResizableSetBoolean">
            <summary>Sets the Shim of WindowSettings.set_Resizable(WindowSettings this, Boolean value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.StencilGet">
            <summary>Sets the Shim of WindowSettings.get_Stencil(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.StencilSetBoolean">
            <summary>Sets the Shim of WindowSettings.set_Stencil(WindowSettings this, Boolean value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.UsePositionGet">
            <summary>Sets the Shim of WindowSettings.get_UsePosition(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.VsyncGet">
            <summary>Sets the Shim of WindowSettings.get_Vsync(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.VsyncSetBoolean">
            <summary>Sets the Shim of WindowSettings.set_Vsync(WindowSettings this, Boolean value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.XGet">
            <summary>Sets the Shim of WindowSettings.get_X(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.XSetInt32">
            <summary>Sets the Shim of WindowSettings.set_X(WindowSettings this, Int32 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.YGet">
            <summary>Sets the Shim of WindowSettings.get_Y(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.AllInstances.YSetInt32">
            <summary>Sets the Shim of WindowSettings.set_Y(WindowSettings this, Int32 value)</summary>
        </member>
        <member name="M:Love.Fakes.ShimWindowSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimWindowSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.BorderlessGet">
            <summary>Sets the Shim of WindowSettings.get_Borderless(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.BorderlessSetBoolean">
            <summary>Sets the Shim of WindowSettings.set_Borderless(WindowSettings this, Boolean value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.CenteredGet">
            <summary>Sets the Shim of WindowSettings.get_Centered(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.CenteredSetBoolean">
            <summary>Sets the Shim of WindowSettings.set_Centered(WindowSettings this, Boolean value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.Constructor">
            <summary>Sets the Shim of WindowSettings.WindowSettings(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.DepthGet">
            <summary>Sets the Shim of WindowSettings.get_Depth(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.DepthSetInt32">
            <summary>Sets the Shim of WindowSettings.set_Depth(WindowSettings this, Int32 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.DisplayGet">
            <summary>Sets the Shim of WindowSettings.get_Display(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.DisplaySetInt32">
            <summary>Sets the Shim of WindowSettings.set_Display(WindowSettings this, Int32 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.FullscreenGet">
            <summary>Sets the Shim of WindowSettings.get_Fullscreen(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.FullscreenSetBoolean">
            <summary>Sets the Shim of WindowSettings.set_Fullscreen(WindowSettings this, Boolean value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.FullscreenTypeGet">
            <summary>Sets the Shim of WindowSettings.get_FullscreenType(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.FullscreenTypeSetFullscreenType">
            <summary>Sets the Shim of WindowSettings.set_FullscreenType(WindowSettings this, FullscreenType value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.HighDpiGet">
            <summary>Sets the Shim of WindowSettings.get_HighDpi(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.HighDpiSetBoolean">
            <summary>Sets the Shim of WindowSettings.set_HighDpi(WindowSettings this, Boolean value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.MSAAGet">
            <summary>Sets the Shim of WindowSettings.get_MSAA(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.MSAASetInt32">
            <summary>Sets the Shim of WindowSettings.set_MSAA(WindowSettings this, Int32 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.MinHeightGet">
            <summary>Sets the Shim of WindowSettings.get_MinHeight(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.MinHeightSetInt32">
            <summary>Sets the Shim of WindowSettings.set_MinHeight(WindowSettings this, Int32 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.MinWidthGet">
            <summary>Sets the Shim of WindowSettings.get_MinWidth(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.MinWidthSetInt32">
            <summary>Sets the Shim of WindowSettings.set_MinWidth(WindowSettings this, Int32 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.RefreshrateGet">
            <summary>Sets the Shim of WindowSettings.get_Refreshrate(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.RefreshrateSetDouble">
            <summary>Sets the Shim of WindowSettings.set_Refreshrate(WindowSettings this, Double value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.ResizableGet">
            <summary>Sets the Shim of WindowSettings.get_Resizable(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.ResizableSetBoolean">
            <summary>Sets the Shim of WindowSettings.set_Resizable(WindowSettings this, Boolean value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.StencilGet">
            <summary>Sets the Shim of WindowSettings.get_Stencil(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.StencilSetBoolean">
            <summary>Sets the Shim of WindowSettings.set_Stencil(WindowSettings this, Boolean value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.UsePositionGet">
            <summary>Sets the Shim of WindowSettings.get_UsePosition(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.VsyncGet">
            <summary>Sets the Shim of WindowSettings.get_Vsync(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.VsyncSetBoolean">
            <summary>Sets the Shim of WindowSettings.set_Vsync(WindowSettings this, Boolean value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.XGet">
            <summary>Sets the Shim of WindowSettings.get_X(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.XSetInt32">
            <summary>Sets the Shim of WindowSettings.set_X(WindowSettings this, Int32 value)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.YGet">
            <summary>Sets the Shim of WindowSettings.get_Y(WindowSettings this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWindowSettings.YSetInt32">
            <summary>Sets the Shim of WindowSettings.set_Y(WindowSettings this, Int32 value)</summary>
        </member>
        <member name="T:Love.Fakes.ShimWorld">
            <summary>Shim type of Love.World</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.#ctor(Love.World)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimWorld.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances.DebugDraw">
            <summary>Sets the Shim of World.DebugDraw(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances.Destroy">
            <summary>Sets the Shim of World.Destroy(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances.GetBodies">
            <summary>Sets the Shim of World.GetBodies(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances.GetBodyCount">
            <summary>Sets the Shim of World.GetBodyCount(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances.GetCallbacksWorldWorldContactCallbackOutWorldWorldContactCallbackOutWorldWorldContactCallbackOutWorldWorldContactPostSolveCallbackOut">
            <summary>Sets the Shim of World.GetCallbacks(World this, WorldContactCallback* beginContact, WorldContactCallback* endContact, WorldContactCallback* preSolve, WorldContactPostSolveCallback* postSolve)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances.GetContactCount">
            <summary>Sets the Shim of World.GetContactCount(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances.GetContactFilter">
            <summary>Sets the Shim of World.GetContactFilter(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances.GetContacts">
            <summary>Sets the Shim of World.GetContacts(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances.GetGravity">
            <summary>Sets the Shim of World.GetGravity(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances.GetJointCount">
            <summary>Sets the Shim of World.GetJointCount(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances.GetJoints">
            <summary>Sets the Shim of World.GetJoints(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances.IsDestroyed">
            <summary>Sets the Shim of World.IsDestroyed(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances.IsLocked">
            <summary>Sets the Shim of World.IsLocked(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances.IsSleepingAllowed">
            <summary>Sets the Shim of World.IsSleepingAllowed(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances.QueryBoundingBoxSingleSingleSingleSingleWorldQueryBoundingBoxCallback">
            <summary>Sets the Shim of World.QueryBoundingBox(World this, Single topLeftX, Single topLeftY, Single bottomRightX, Single bottomRightY, QueryBoundingBoxCallback callback)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances.RayCastSingleSingleSingleSingleWorldRayCastCallback">
            <summary>Sets the Shim of World.RayCast(World this, Single x1, Single y1, Single x2, Single y2, RayCastCallback callback)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances.RayCastVector2Vector2WorldRayCastCallback">
            <summary>Sets the Shim of World.RayCast(World this, Vector2 a, Vector2 b, RayCastCallback callback)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances.SetCallbacksWorldWorldContactCallbackWorldWorldContactCallbackWorldWorldContactCallbackWorldWorldContactPostSolveCallback">
            <summary>Sets the Shim of World.SetCallbacks(World this, WorldContactCallback beginContact, WorldContactCallback endContact, WorldContactCallback preSolve, WorldContactPostSolveCallback postSolve)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances.SetContactFilterWorldWorldContactFilterCallback">
            <summary>Sets the Shim of World.SetContactFilter(World this, WorldContactFilterCallback filterCallback)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances.SetGravitySingleSingle">
            <summary>Sets the Shim of World.SetGravity(World this, Single gx, Single gy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances.SetSleepingAllowedBoolean">
            <summary>Sets the Shim of World.SetSleepingAllowed(World this, Boolean allowed)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances.TranslateOriginSingleSingle">
            <summary>Sets the Shim of World.TranslateOrigin(World this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances.UpdateSingleInt32Int32">
            <summary>Sets the Shim of World.Update(World this, Single dt, Int32 velocityiterations, Int32 positioniterations)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances._Updateb__24_0IntPtrIntPtrIntPtrIntPtrInt32">
            <summary>Sets the Shim of World.&lt;Update&gt;b__24_0(World this, IntPtr a, IntPtr b, IntPtr c, IntPtr _, Int32 __)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances._Updateb__24_1IntPtrIntPtrIntPtrIntPtrInt32">
            <summary>Sets the Shim of World.&lt;Update&gt;b__24_1(World this, IntPtr a, IntPtr b, IntPtr c, IntPtr _, Int32 __)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances._Updateb__24_2IntPtrIntPtrIntPtrIntPtrInt32">
            <summary>Sets the Shim of World.&lt;Update&gt;b__24_2(World this, IntPtr a, IntPtr b, IntPtr c, IntPtr _, Int32 __)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances._Updateb__24_3IntPtrIntPtrIntPtrIntPtrInt32">
            <summary>Sets the Shim of World.&lt;Update&gt;b__24_3(World this, IntPtr a, IntPtr b, IntPtr c, IntPtr impArray, Int32 impArrayLength)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.AllInstances._Updateb__24_4IntPtrIntPtr">
            <summary>Sets the Shim of World.&lt;Update&gt;b__24_4(World this, IntPtr a, IntPtr b)</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.Constructor">
            <summary>Sets the Shim of World.World(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.DebugDraw">
            <summary>Sets the Shim of World.DebugDraw(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.Destroy">
            <summary>Sets the Shim of World.Destroy(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.GetBodies">
            <summary>Sets the Shim of World.GetBodies(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.GetBodyCount">
            <summary>Sets the Shim of World.GetBodyCount(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.GetContactCount">
            <summary>Sets the Shim of World.GetContactCount(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.GetContactFilter">
            <summary>Sets the Shim of World.GetContactFilter(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.GetContacts">
            <summary>Sets the Shim of World.GetContacts(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.GetGravity">
            <summary>Sets the Shim of World.GetGravity(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.GetJointCount">
            <summary>Sets the Shim of World.GetJointCount(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.GetJoints">
            <summary>Sets the Shim of World.GetJoints(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.IsDestroyed">
            <summary>Sets the Shim of World.IsDestroyed(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.IsLocked">
            <summary>Sets the Shim of World.IsLocked(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.IsSleepingAllowed">
            <summary>Sets the Shim of World.IsSleepingAllowed(World this)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.QueryBoundingBoxSingleSingleSingleSingleWorldQueryBoundingBoxCallback">
            <summary>Sets the Shim of World.QueryBoundingBox(World this, Single topLeftX, Single topLeftY, Single bottomRightX, Single bottomRightY, QueryBoundingBoxCallback callback)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.RayCastSingleSingleSingleSingleWorldRayCastCallback">
            <summary>Sets the Shim of World.RayCast(World this, Single x1, Single y1, Single x2, Single y2, RayCastCallback callback)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.RayCastVector2Vector2WorldRayCastCallback">
            <summary>Sets the Shim of World.RayCast(World this, Vector2 a, Vector2 b, RayCastCallback callback)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.SetCallbacksWorldWorldContactCallbackWorldWorldContactCallbackWorldWorldContactCallbackWorldWorldContactPostSolveCallback">
            <summary>Sets the Shim of World.SetCallbacks(World this, WorldContactCallback beginContact, WorldContactCallback endContact, WorldContactCallback preSolve, WorldContactPostSolveCallback postSolve)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.SetContactFilterWorldWorldContactFilterCallback">
            <summary>Sets the Shim of World.SetContactFilter(World this, WorldContactFilterCallback filterCallback)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.SetGravitySingleSingle">
            <summary>Sets the Shim of World.SetGravity(World this, Single gx, Single gy)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.SetSleepingAllowedBoolean">
            <summary>Sets the Shim of World.SetSleepingAllowed(World this, Boolean allowed)</summary>
        </member>
        <member name="T:Love.Fakes.ShimWorld.ShimQueryBoundingBoxCallback">
            <summary>Shim type of Love.World.QueryBoundingBoxCallback</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimQueryBoundingBoxCallback.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimQueryBoundingBoxCallback.#ctor(Love.World.QueryBoundingBoxCallback)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimWorld.ShimQueryBoundingBoxCallback.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimQueryBoundingBoxCallback.AllInstances.BeginInvokeFixtureAsyncCallbackObject">
            <summary>Sets the Shim of QueryBoundingBoxCallback.BeginInvoke(QueryBoundingBoxCallback this, Fixture pfixture, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimQueryBoundingBoxCallback.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of QueryBoundingBoxCallback.EndInvoke(QueryBoundingBoxCallback this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimQueryBoundingBoxCallback.AllInstances.InvokeFixture">
            <summary>Sets the Shim of QueryBoundingBoxCallback.Invoke(QueryBoundingBoxCallback this, Fixture pfixture)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimQueryBoundingBoxCallback.BeginInvokeFixtureAsyncCallbackObject">
            <summary>Sets the Shim of QueryBoundingBoxCallback.BeginInvoke(QueryBoundingBoxCallback this, Fixture pfixture, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimQueryBoundingBoxCallback.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimQueryBoundingBoxCallback.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimQueryBoundingBoxCallback.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimQueryBoundingBoxCallback.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimQueryBoundingBoxCallback.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimQueryBoundingBoxCallback.ConstructorObjectIntPtr">
            <summary>Sets the Shim of QueryBoundingBoxCallback.QueryBoundingBoxCallback(QueryBoundingBoxCallback this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimQueryBoundingBoxCallback.EndInvokeIAsyncResult">
            <summary>Sets the Shim of QueryBoundingBoxCallback.EndInvoke(QueryBoundingBoxCallback this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimQueryBoundingBoxCallback.InvokeFixture">
            <summary>Sets the Shim of QueryBoundingBoxCallback.Invoke(QueryBoundingBoxCallback this, Fixture pfixture)</summary>
        </member>
        <member name="T:Love.Fakes.ShimWorld.ShimRayCastCallback">
            <summary>Shim type of Love.World.RayCastCallback</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimRayCastCallback.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimRayCastCallback.#ctor(Love.World.RayCastCallback)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimWorld.ShimRayCastCallback.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimRayCastCallback.AllInstances.BeginInvokeFixtureSingleSingleSingleSingleSingleAsyncCallbackObject">
            <summary>Sets the Shim of RayCastCallback.BeginInvoke(RayCastCallback this, Fixture pfixture, Single x, Single y, Single nx, Single ny, Single fraction, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimRayCastCallback.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of RayCastCallback.EndInvoke(RayCastCallback this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimRayCastCallback.AllInstances.InvokeFixtureSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of RayCastCallback.Invoke(RayCastCallback this, Fixture pfixture, Single x, Single y, Single nx, Single ny, Single fraction)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimRayCastCallback.BeginInvokeFixtureSingleSingleSingleSingleSingleAsyncCallbackObject">
            <summary>Sets the Shim of RayCastCallback.BeginInvoke(RayCastCallback this, Fixture pfixture, Single x, Single y, Single nx, Single ny, Single fraction, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimRayCastCallback.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimRayCastCallback.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimRayCastCallback.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimRayCastCallback.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimRayCastCallback.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimRayCastCallback.ConstructorObjectIntPtr">
            <summary>Sets the Shim of RayCastCallback.RayCastCallback(RayCastCallback this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimRayCastCallback.EndInvokeIAsyncResult">
            <summary>Sets the Shim of RayCastCallback.EndInvoke(RayCastCallback this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimRayCastCallback.InvokeFixtureSingleSingleSingleSingleSingle">
            <summary>Sets the Shim of RayCastCallback.Invoke(RayCastCallback this, Fixture pfixture, Single x, Single y, Single nx, Single ny, Single fraction)</summary>
        </member>
        <member name="T:Love.Fakes.ShimWorld.ShimWorldContactCallback">
            <summary>Shim type of Love.World.WorldContactCallback</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimWorldContactCallback.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimWorldContactCallback.#ctor(Love.World.WorldContactCallback)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimWorld.ShimWorldContactCallback.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimWorldContactCallback.AllInstances.BeginInvokeFixtureFixtureContactAsyncCallbackObject">
            <summary>Sets the Shim of WorldContactCallback.BeginInvoke(WorldContactCallback this, Fixture fixtureA, Fixture fixtureB, Contact contact, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimWorldContactCallback.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of WorldContactCallback.EndInvoke(WorldContactCallback this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimWorldContactCallback.AllInstances.InvokeFixtureFixtureContact">
            <summary>Sets the Shim of WorldContactCallback.Invoke(WorldContactCallback this, Fixture fixtureA, Fixture fixtureB, Contact contact)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimWorldContactCallback.BeginInvokeFixtureFixtureContactAsyncCallbackObject">
            <summary>Sets the Shim of WorldContactCallback.BeginInvoke(WorldContactCallback this, Fixture fixtureA, Fixture fixtureB, Contact contact, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimWorldContactCallback.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimWorldContactCallback.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimWorldContactCallback.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimWorldContactCallback.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimWorldContactCallback.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimWorldContactCallback.ConstructorObjectIntPtr">
            <summary>Sets the Shim of WorldContactCallback.WorldContactCallback(WorldContactCallback this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimWorldContactCallback.EndInvokeIAsyncResult">
            <summary>Sets the Shim of WorldContactCallback.EndInvoke(WorldContactCallback this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimWorldContactCallback.InvokeFixtureFixtureContact">
            <summary>Sets the Shim of WorldContactCallback.Invoke(WorldContactCallback this, Fixture fixtureA, Fixture fixtureB, Contact contact)</summary>
        </member>
        <member name="T:Love.Fakes.ShimWorld.ShimWorldContactFilterCallback">
            <summary>Shim type of Love.World.WorldContactFilterCallback</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimWorldContactFilterCallback.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimWorldContactFilterCallback.#ctor(Love.World.WorldContactFilterCallback)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimWorld.ShimWorldContactFilterCallback.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimWorldContactFilterCallback.AllInstances.BeginInvokeFixtureFixtureAsyncCallbackObject">
            <summary>Sets the Shim of WorldContactFilterCallback.BeginInvoke(WorldContactFilterCallback this, Fixture fixtureA, Fixture fixtureB, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimWorldContactFilterCallback.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of WorldContactFilterCallback.EndInvoke(WorldContactFilterCallback this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimWorldContactFilterCallback.AllInstances.InvokeFixtureFixture">
            <summary>Sets the Shim of WorldContactFilterCallback.Invoke(WorldContactFilterCallback this, Fixture fixtureA, Fixture fixtureB)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimWorldContactFilterCallback.BeginInvokeFixtureFixtureAsyncCallbackObject">
            <summary>Sets the Shim of WorldContactFilterCallback.BeginInvoke(WorldContactFilterCallback this, Fixture fixtureA, Fixture fixtureB, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimWorldContactFilterCallback.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimWorldContactFilterCallback.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimWorldContactFilterCallback.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimWorldContactFilterCallback.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimWorldContactFilterCallback.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimWorldContactFilterCallback.ConstructorObjectIntPtr">
            <summary>Sets the Shim of WorldContactFilterCallback.WorldContactFilterCallback(WorldContactFilterCallback this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimWorldContactFilterCallback.EndInvokeIAsyncResult">
            <summary>Sets the Shim of WorldContactFilterCallback.EndInvoke(WorldContactFilterCallback this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimWorldContactFilterCallback.InvokeFixtureFixture">
            <summary>Sets the Shim of WorldContactFilterCallback.Invoke(WorldContactFilterCallback this, Fixture fixtureA, Fixture fixtureB)</summary>
        </member>
        <member name="T:Love.Fakes.ShimWorld.ShimWorldContactPostSolveCallback">
            <summary>Shim type of Love.World.WorldContactPostSolveCallback</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimWorldContactPostSolveCallback.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimWorldContactPostSolveCallback.#ctor(Love.World.WorldContactPostSolveCallback)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Fakes.ShimWorld.ShimWorldContactPostSolveCallback.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimWorldContactPostSolveCallback.AllInstances.BeginInvokeFixtureFixtureContactVector2ArrayAsyncCallbackObject">
            <summary>Sets the Shim of WorldContactPostSolveCallback.BeginInvoke(WorldContactPostSolveCallback this, Fixture fixtureA, Fixture fixtureB, Contact contact, Vector2[] impluseArray, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimWorldContactPostSolveCallback.AllInstances.EndInvokeIAsyncResult">
            <summary>Sets the Shim of WorldContactPostSolveCallback.EndInvoke(WorldContactPostSolveCallback this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimWorldContactPostSolveCallback.AllInstances.InvokeFixtureFixtureContactVector2Array">
            <summary>Sets the Shim of WorldContactPostSolveCallback.Invoke(WorldContactPostSolveCallback this, Fixture fixtureA, Fixture fixtureB, Contact contact, Vector2[] impluseArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimWorldContactPostSolveCallback.BeginInvokeFixtureFixtureContactVector2ArrayAsyncCallbackObject">
            <summary>Sets the Shim of WorldContactPostSolveCallback.BeginInvoke(WorldContactPostSolveCallback this, Fixture fixtureA, Fixture fixtureB, Contact contact, Vector2[] impluseArray, AsyncCallback callback, Object object)</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimWorldContactPostSolveCallback.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimWorldContactPostSolveCallback.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimWorldContactPostSolveCallback.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimWorldContactPostSolveCallback.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Love.Fakes.ShimWorld.ShimWorldContactPostSolveCallback.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimWorldContactPostSolveCallback.ConstructorObjectIntPtr">
            <summary>Sets the Shim of WorldContactPostSolveCallback.WorldContactPostSolveCallback(WorldContactPostSolveCallback this, Object object, IntPtr method)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimWorldContactPostSolveCallback.EndInvokeIAsyncResult">
            <summary>Sets the Shim of WorldContactPostSolveCallback.EndInvoke(WorldContactPostSolveCallback this, IAsyncResult result)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.ShimWorldContactPostSolveCallback.InvokeFixtureFixtureContactVector2Array">
            <summary>Sets the Shim of WorldContactPostSolveCallback.Invoke(WorldContactPostSolveCallback this, Fixture fixtureA, Fixture fixtureB, Contact contact, Vector2[] impluseArray)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.TranslateOriginSingleSingle">
            <summary>Sets the Shim of World.TranslateOrigin(World this, Single x, Single y)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld.UpdateSingleInt32Int32">
            <summary>Sets the Shim of World.Update(World this, Single dt, Int32 velocityiterations, Int32 positioniterations)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld._Updateb__24_0IntPtrIntPtrIntPtrIntPtrInt32">
            <summary>Sets the Shim of World.&lt;Update&gt;b__24_0(World this, IntPtr a, IntPtr b, IntPtr c, IntPtr _, Int32 __)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld._Updateb__24_1IntPtrIntPtrIntPtrIntPtrInt32">
            <summary>Sets the Shim of World.&lt;Update&gt;b__24_1(World this, IntPtr a, IntPtr b, IntPtr c, IntPtr _, Int32 __)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld._Updateb__24_2IntPtrIntPtrIntPtrIntPtrInt32">
            <summary>Sets the Shim of World.&lt;Update&gt;b__24_2(World this, IntPtr a, IntPtr b, IntPtr c, IntPtr _, Int32 __)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld._Updateb__24_3IntPtrIntPtrIntPtrIntPtrInt32">
            <summary>Sets the Shim of World.&lt;Update&gt;b__24_3(World this, IntPtr a, IntPtr b, IntPtr c, IntPtr impArray, Int32 impArrayLength)</summary>
        </member>
        <member name="P:Love.Fakes.ShimWorld._Updateb__24_4IntPtrIntPtr">
            <summary>Sets the Shim of World.&lt;Update&gt;b__24_4(World this, IntPtr a, IntPtr b)</summary>
        </member>
        <member name="T:Love.Fakes.StubAudio">
            <summary>Stub type of Love.Audio</summary>
        </member>
        <member name="M:Love.Fakes.StubAudio.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubAudio.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubAudio.InitializeStub">
            <summary>Initializes a new instance of type StubAudio</summary>
        </member>
        <member name="P:Love.Fakes.StubAudio.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubAudio.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubBezierCurve">
            <summary>Stub type of Love.BezierCurve</summary>
        </member>
        <member name="M:Love.Fakes.StubBezierCurve.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubBezierCurve.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubBezierCurve.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubBezierCurve.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubBezierCurve.InitializeStub">
            <summary>Initializes a new instance of type StubBezierCurve</summary>
        </member>
        <member name="P:Love.Fakes.StubBezierCurve.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubBezierCurve.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubBody">
            <summary>Stub type of Love.Body</summary>
        </member>
        <member name="M:Love.Fakes.StubBody.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubBody.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubBody.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubBody.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubBody.InitializeStub">
            <summary>Initializes a new instance of type StubBody</summary>
        </member>
        <member name="P:Love.Fakes.StubBody.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubBody.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubBootConfig">
            <summary>Stub type of Love.BootConfig</summary>
        </member>
        <member name="M:Love.Fakes.StubBootConfig.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubBootConfig.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubBootConfig.InitializeStub">
            <summary>Initializes a new instance of type StubBootConfig</summary>
        </member>
        <member name="P:Love.Fakes.StubBootConfig.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubBootConfig.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubCanvas">
            <summary>Stub type of Love.Canvas</summary>
        </member>
        <member name="M:Love.Fakes.StubCanvas.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubCanvas.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubCanvas.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubCanvas.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubCanvas.InitializeStub">
            <summary>Initializes a new instance of type StubCanvas</summary>
        </member>
        <member name="P:Love.Fakes.StubCanvas.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubCanvas.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubChainShape">
            <summary>Stub type of Love.ChainShape</summary>
        </member>
        <member name="M:Love.Fakes.StubChainShape.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubChainShape.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubChainShape.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubChainShape.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubChainShape.InitializeStub">
            <summary>Initializes a new instance of type StubChainShape</summary>
        </member>
        <member name="P:Love.Fakes.StubChainShape.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubChainShape.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubCircleShape">
            <summary>Stub type of Love.CircleShape</summary>
        </member>
        <member name="M:Love.Fakes.StubCircleShape.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubCircleShape.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubCircleShape.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubCircleShape.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubCircleShape.InitializeStub">
            <summary>Initializes a new instance of type StubCircleShape</summary>
        </member>
        <member name="P:Love.Fakes.StubCircleShape.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubCircleShape.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubColoredString">
            <summary>Stub type of Love.ColoredString</summary>
        </member>
        <member name="M:Love.Fakes.StubColoredString.#ctor(System.String,Love.Color)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Love.Fakes.StubColoredString.#ctor(System.String,Love.Vector4)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubColoredString.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubColoredString.InitializeStub">
            <summary>Initializes a new instance of type StubColoredString</summary>
        </member>
        <member name="P:Love.Fakes.StubColoredString.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubColoredString.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubCommon">
            <summary>Stub type of Love.Common</summary>
        </member>
        <member name="M:Love.Fakes.StubCommon.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubCommon.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubCommon.InitializeStub">
            <summary>Initializes a new instance of type StubCommon</summary>
        </member>
        <member name="P:Love.Fakes.StubCommon.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubCommon.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubCompressedImageData">
            <summary>Stub type of Love.CompressedImageData</summary>
        </member>
        <member name="M:Love.Fakes.StubCompressedImageData.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubCompressedImageData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubCompressedImageData.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubCompressedImageData.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubCompressedImageData.InitializeStub">
            <summary>Initializes a new instance of type StubCompressedImageData</summary>
        </member>
        <member name="P:Love.Fakes.StubCompressedImageData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubCompressedImageData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubContact">
            <summary>Stub type of Love.Contact</summary>
        </member>
        <member name="M:Love.Fakes.StubContact.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubContact.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubContact.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubContact.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubContact.InitializeStub">
            <summary>Initializes a new instance of type StubContact</summary>
        </member>
        <member name="P:Love.Fakes.StubContact.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubContact.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubCursor">
            <summary>Stub type of Love.Cursor</summary>
        </member>
        <member name="M:Love.Fakes.StubCursor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubCursor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubCursor.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubCursor.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubCursor.InitializeStub">
            <summary>Initializes a new instance of type StubCursor</summary>
        </member>
        <member name="P:Love.Fakes.StubCursor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubCursor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubData">
            <summary>Stub type of Love.Data</summary>
        </member>
        <member name="M:Love.Fakes.StubData.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubData.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubData.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubData.InitializeStub">
            <summary>Initializes a new instance of type StubData</summary>
        </member>
        <member name="P:Love.Fakes.StubData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubDecoder">
            <summary>Stub type of Love.Decoder</summary>
        </member>
        <member name="M:Love.Fakes.StubDecoder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubDecoder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubDecoder.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubDecoder.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubDecoder.InitializeStub">
            <summary>Initializes a new instance of type StubDecoder</summary>
        </member>
        <member name="P:Love.Fakes.StubDecoder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubDecoder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubDistanceJoint">
            <summary>Stub type of Love.DistanceJoint</summary>
        </member>
        <member name="M:Love.Fakes.StubDistanceJoint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubDistanceJoint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubDistanceJoint.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubDistanceJoint.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubDistanceJoint.InitializeStub">
            <summary>Initializes a new instance of type StubDistanceJoint</summary>
        </member>
        <member name="P:Love.Fakes.StubDistanceJoint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubDistanceJoint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubDrawable">
            <summary>Stub type of Love.Drawable</summary>
        </member>
        <member name="M:Love.Fakes.StubDrawable.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubDrawable.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubDrawable.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubDrawable.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubDrawable.InitializeStub">
            <summary>Initializes a new instance of type StubDrawable</summary>
        </member>
        <member name="P:Love.Fakes.StubDrawable.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubDrawable.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubDroppedFile">
            <summary>Stub type of Love.DroppedFile</summary>
        </member>
        <member name="M:Love.Fakes.StubDroppedFile.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubDroppedFile.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubDroppedFile.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubDroppedFile.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubDroppedFile.InitializeStub">
            <summary>Initializes a new instance of type StubDroppedFile</summary>
        </member>
        <member name="P:Love.Fakes.StubDroppedFile.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubDroppedFile.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubEdgeShape">
            <summary>Stub type of Love.EdgeShape</summary>
        </member>
        <member name="M:Love.Fakes.StubEdgeShape.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubEdgeShape.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubEdgeShape.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubEdgeShape.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubEdgeShape.InitializeStub">
            <summary>Initializes a new instance of type StubEdgeShape</summary>
        </member>
        <member name="P:Love.Fakes.StubEdgeShape.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubEdgeShape.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubErrorHandleScene">
            <summary>Stub type of Love.ErrorHandleScene</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubErrorHandleScene.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.DirectoryDropped(System.String)">
            <summary>Sets the Stub of Scene.DirectoryDropped(Scene this, String path)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.DirectoryDroppedString">
            <summary>Sets the stub of Scene.DirectoryDropped(Scene this, String path)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.Draw">
            <summary>Sets the Stub of ErrorHandleScene.Draw(ErrorHandleScene this)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.Draw01">
            <summary>Sets the stub of ErrorHandleScene.Draw(ErrorHandleScene this)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.ErrorHandler(System.Exception)">
            <summary>Sets the Stub of Scene.ErrorHandler(Scene this, Exception e)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.ErrorHandlerException">
            <summary>Sets the stub of Scene.ErrorHandler(Scene this, Exception e)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.FileDropped(System.String)">
            <summary>Sets the Stub of Scene.FileDropped(Scene this, String fileFilePath)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.FileDroppedString">
            <summary>Sets the stub of Scene.FileDropped(Scene this, String fileFilePath)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.InitializeStub">
            <summary>Initializes a new instance of type StubErrorHandleScene</summary>
        </member>
        <member name="P:Love.Fakes.StubErrorHandleScene.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubErrorHandleScene.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.JoystickAdded(Love.Joystick)">
            <summary>Sets the Stub of Scene.JoystickAdded(Scene this, Joystick joystick)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.JoystickAddedJoystick">
            <summary>Sets the stub of Scene.JoystickAdded(Scene this, Joystick joystick)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.JoystickAxis(Love.Joystick,System.Single,System.Single)">
            <summary>Sets the Stub of Scene.JoystickAxis(Scene this, Joystick joystick, Single axis, Single value)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.JoystickAxisJoystickSingleSingle">
            <summary>Sets the stub of Scene.JoystickAxis(Scene this, Joystick joystick, Single axis, Single value)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.JoystickGamepadAxis(Love.Joystick,Love.GamepadAxis,System.Single)">
            <summary>Sets the Stub of Scene.JoystickGamepadAxis(Scene this, Joystick joystick, GamepadAxis axis, Single value)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.JoystickGamepadAxisJoystickGamepadAxisSingle">
            <summary>Sets the stub of Scene.JoystickGamepadAxis(Scene this, Joystick joystick, GamepadAxis axis, Single value)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.JoystickGamepadPressed(Love.Joystick,Love.GamepadButton)">
            <summary>Sets the Stub of Scene.JoystickGamepadPressed(Scene this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.JoystickGamepadPressedJoystickGamepadButton">
            <summary>Sets the stub of Scene.JoystickGamepadPressed(Scene this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.JoystickGamepadReleased(Love.Joystick,Love.GamepadButton)">
            <summary>Sets the Stub of Scene.JoystickGamepadReleased(Scene this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.JoystickGamepadReleasedJoystickGamepadButton">
            <summary>Sets the stub of Scene.JoystickGamepadReleased(Scene this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.JoystickHat(Love.Joystick,System.Int32,Love.JoystickHat)">
            <summary>Sets the Stub of Scene.JoystickHat(Scene this, Joystick joystick, Int32 hat, JoystickHat direction)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.JoystickHatJoystickInt32JoystickHat">
            <summary>Sets the stub of Scene.JoystickHat(Scene this, Joystick joystick, Int32 hat, JoystickHat direction)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.JoystickPressed(Love.Joystick,System.Int32)">
            <summary>Sets the Stub of Scene.JoystickPressed(Scene this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.JoystickPressedJoystickInt32">
            <summary>Sets the stub of Scene.JoystickPressed(Scene this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.JoystickReleased(Love.Joystick,System.Int32)">
            <summary>Sets the Stub of Scene.JoystickReleased(Scene this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.JoystickReleasedJoystickInt32">
            <summary>Sets the stub of Scene.JoystickReleased(Scene this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.JoystickRemoved(Love.Joystick)">
            <summary>Sets the Stub of Scene.JoystickRemoved(Scene this, Joystick joystick)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.JoystickRemovedJoystick">
            <summary>Sets the stub of Scene.JoystickRemoved(Scene this, Joystick joystick)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.KeyPressed(Love.KeyConstant,Love.Scancode,System.Boolean)">
            <summary>Sets the Stub of ErrorHandleScene.KeyPressed(ErrorHandleScene this, KeyConstant key, Scancode scancode, Boolean isRepeat)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.KeyPressedKeyConstantScancodeBoolean">
            <summary>Sets the stub of ErrorHandleScene.KeyPressed(ErrorHandleScene this, KeyConstant key, Scancode scancode, Boolean isRepeat)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.KeyReleased(Love.KeyConstant,Love.Scancode)">
            <summary>Sets the Stub of Scene.KeyReleased(Scene this, KeyConstant key, Scancode scancode)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.KeyReleasedKeyConstantScancode">
            <summary>Sets the stub of Scene.KeyReleased(Scene this, KeyConstant key, Scancode scancode)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.Load">
            <summary>Sets the Stub of Scene.Load(Scene this)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.Load01">
            <summary>Sets the stub of Scene.Load(Scene this)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.LowMemory">
            <summary>Sets the Stub of Scene.LowMemory(Scene this)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.LowMemory01">
            <summary>Sets the stub of Scene.LowMemory(Scene this)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.MouseFocus(System.Boolean)">
            <summary>Sets the Stub of Scene.MouseFocus(Scene this, Boolean focus)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.MouseFocusBoolean">
            <summary>Sets the stub of Scene.MouseFocus(Scene this, Boolean focus)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.MouseMoved(System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>Sets the Stub of Scene.MouseMoved(Scene this, Single x, Single y, Single dx, Single dy, Boolean isTouch)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.MouseMovedSingleSingleSingleSingleBoolean">
            <summary>Sets the stub of Scene.MouseMoved(Scene this, Single x, Single y, Single dx, Single dy, Boolean isTouch)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.MousePressed(System.Single,System.Single,System.Int32,System.Boolean)">
            <summary>Sets the Stub of Scene.MousePressed(Scene this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.MousePressedSingleSingleInt32Boolean">
            <summary>Sets the stub of Scene.MousePressed(Scene this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.MouseReleased(System.Single,System.Single,System.Int32,System.Boolean)">
            <summary>Sets the Stub of Scene.MouseReleased(Scene this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.MouseReleasedSingleSingleInt32Boolean">
            <summary>Sets the stub of Scene.MouseReleased(Scene this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.Quit">
            <summary>Sets the Stub of Scene.Quit(Scene this)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.Quit01">
            <summary>Sets the stub of Scene.Quit(Scene this)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.TextEditing(System.String,System.Int32,System.Int32)">
            <summary>Sets the Stub of Scene.TextEditing(Scene this, String text, Int32 start, Int32 end)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.TextEditingStringInt32Int32">
            <summary>Sets the stub of Scene.TextEditing(Scene this, String text, Int32 start, Int32 end)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.TextInput(System.String)">
            <summary>Sets the Stub of Scene.TextInput(Scene this, String text)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.TextInputString">
            <summary>Sets the stub of Scene.TextInput(Scene this, String text)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.TouchMoved(System.Int64,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Sets the Stub of Scene.TouchMoved(Scene this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.TouchMovedInt64SingleSingleSingleSingleSingle">
            <summary>Sets the stub of Scene.TouchMoved(Scene this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.TouchPressed(System.Int64,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Sets the Stub of Scene.TouchPressed(Scene this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.TouchPressedInt64SingleSingleSingleSingleSingle">
            <summary>Sets the stub of Scene.TouchPressed(Scene this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.TouchReleased(System.Int64,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Sets the Stub of Scene.TouchReleased(Scene this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.TouchReleasedInt64SingleSingleSingleSingleSingle">
            <summary>Sets the stub of Scene.TouchReleased(Scene this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.Update(System.Single)">
            <summary>Sets the Stub of Scene.Update(Scene this, Single dt)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.UpdateSingle">
            <summary>Sets the stub of Scene.Update(Scene this, Single dt)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.WheelMoved(System.Int32,System.Int32)">
            <summary>Sets the Stub of Scene.WheelMoved(Scene this, Int32 x, Int32 y)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.WheelMovedInt32Int32">
            <summary>Sets the stub of Scene.WheelMoved(Scene this, Int32 x, Int32 y)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.WindowFocus(System.Boolean)">
            <summary>Sets the Stub of Scene.WindowFocus(Scene this, Boolean focus)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.WindowFocusBoolean">
            <summary>Sets the stub of Scene.WindowFocus(Scene this, Boolean focus)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.WindowResize(System.Int32,System.Int32)">
            <summary>Sets the Stub of Scene.WindowResize(Scene this, Int32 w, Int32 h)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.WindowResizeInt32Int32">
            <summary>Sets the stub of Scene.WindowResize(Scene this, Int32 w, Int32 h)</summary>
        </member>
        <member name="M:Love.Fakes.StubErrorHandleScene.WindowVisible(System.Boolean)">
            <summary>Sets the Stub of Scene.WindowVisible(Scene this, Boolean visible)</summary>
        </member>
        <member name="F:Love.Fakes.StubErrorHandleScene.WindowVisibleBoolean">
            <summary>Sets the stub of Scene.WindowVisible(Scene this, Boolean visible)</summary>
        </member>
        <member name="T:Love.Fakes.StubEvent">
            <summary>Stub type of Love.Event</summary>
        </member>
        <member name="M:Love.Fakes.StubEvent.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubEvent.InitializeStub">
            <summary>Initializes a new instance of type StubEvent</summary>
        </member>
        <member name="P:Love.Fakes.StubEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubFPSCounter">
            <summary>Stub type of Love.FPSCounter</summary>
        </member>
        <member name="M:Love.Fakes.StubFPSCounter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubFPSCounter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubFPSCounter.InitializeStub">
            <summary>Initializes a new instance of type StubFPSCounter</summary>
        </member>
        <member name="P:Love.Fakes.StubFPSCounter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubFPSCounter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubFile">
            <summary>Stub type of Love.File</summary>
        </member>
        <member name="M:Love.Fakes.StubFile.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubFile.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubFile.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubFile.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubFile.InitializeStub">
            <summary>Initializes a new instance of type StubFile</summary>
        </member>
        <member name="P:Love.Fakes.StubFile.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubFile.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubFileData">
            <summary>Stub type of Love.FileData</summary>
        </member>
        <member name="M:Love.Fakes.StubFileData.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubFileData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubFileData.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubFileData.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubFileData.InitializeStub">
            <summary>Initializes a new instance of type StubFileData</summary>
        </member>
        <member name="P:Love.Fakes.StubFileData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubFileData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubFileInfo">
            <summary>Stub type of Love.FileInfo</summary>
        </member>
        <member name="M:Love.Fakes.StubFileInfo.#ctor(System.Int64,System.Int64,Love.FileType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubFileInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubFileInfo.InitializeStub">
            <summary>Initializes a new instance of type StubFileInfo</summary>
        </member>
        <member name="P:Love.Fakes.StubFileInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubFileInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Love.Fakes.StubFileInfo.ToString">
            <summary>Sets the Stub of FileInfo.ToString(FileInfo this)</summary>
        </member>
        <member name="F:Love.Fakes.StubFileInfo.ToString01">
            <summary>Sets the stub of FileInfo.ToString(FileInfo this)</summary>
        </member>
        <member name="T:Love.Fakes.StubFileSystem">
            <summary>Stub type of Love.FileSystem</summary>
        </member>
        <member name="M:Love.Fakes.StubFileSystem.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubFileSystem.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubFileSystem.InitializeStub">
            <summary>Initializes a new instance of type StubFileSystem</summary>
        </member>
        <member name="P:Love.Fakes.StubFileSystem.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubFileSystem.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubFixture">
            <summary>Stub type of Love.Fixture</summary>
        </member>
        <member name="M:Love.Fakes.StubFixture.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubFixture.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubFixture.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubFixture.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubFixture.InitializeStub">
            <summary>Initializes a new instance of type StubFixture</summary>
        </member>
        <member name="P:Love.Fakes.StubFixture.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubFixture.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubFont">
            <summary>Stub type of Love.Font</summary>
        </member>
        <member name="M:Love.Fakes.StubFont.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubFont.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubFont.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubFont.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubFont.InitializeStub">
            <summary>Initializes a new instance of type StubFont</summary>
        </member>
        <member name="P:Love.Fakes.StubFont.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubFont.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubFrictionJoint">
            <summary>Stub type of Love.FrictionJoint</summary>
        </member>
        <member name="M:Love.Fakes.StubFrictionJoint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubFrictionJoint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubFrictionJoint.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubFrictionJoint.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubFrictionJoint.InitializeStub">
            <summary>Initializes a new instance of type StubFrictionJoint</summary>
        </member>
        <member name="P:Love.Fakes.StubFrictionJoint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubFrictionJoint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubGearJoint">
            <summary>Stub type of Love.GearJoint</summary>
        </member>
        <member name="M:Love.Fakes.StubGearJoint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubGearJoint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubGearJoint.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubGearJoint.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubGearJoint.InitializeStub">
            <summary>Initializes a new instance of type StubGearJoint</summary>
        </member>
        <member name="P:Love.Fakes.StubGearJoint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubGearJoint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubGlyphData">
            <summary>Stub type of Love.GlyphData</summary>
        </member>
        <member name="M:Love.Fakes.StubGlyphData.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubGlyphData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubGlyphData.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubGlyphData.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubGlyphData.InitializeStub">
            <summary>Initializes a new instance of type StubGlyphData</summary>
        </member>
        <member name="P:Love.Fakes.StubGlyphData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubGlyphData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubGraphics">
            <summary>Stub type of Love.Graphics</summary>
        </member>
        <member name="M:Love.Fakes.StubGraphics.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubGraphics.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubGraphics.InitializeStub">
            <summary>Initializes a new instance of type StubGraphics</summary>
        </member>
        <member name="P:Love.Fakes.StubGraphics.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubGraphics.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubImage">
            <summary>Stub type of Love.Image</summary>
        </member>
        <member name="M:Love.Fakes.StubImage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubImage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubImage.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubImage.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubImage.InitializeStub">
            <summary>Initializes a new instance of type StubImage</summary>
        </member>
        <member name="P:Love.Fakes.StubImage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubImage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubImageData">
            <summary>Stub type of Love.ImageData</summary>
        </member>
        <member name="M:Love.Fakes.StubImageData.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubImageData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubImageData.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubImageData.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubImageData.InitializeStub">
            <summary>Initializes a new instance of type StubImageData</summary>
        </member>
        <member name="P:Love.Fakes.StubImageData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubImageData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubImageDataBase">
            <summary>Stub type of Love.ImageDataBase</summary>
        </member>
        <member name="M:Love.Fakes.StubImageDataBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubImageDataBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubImageDataBase.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubImageDataBase.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubImageDataBase.InitializeStub">
            <summary>Initializes a new instance of type StubImageDataBase</summary>
        </member>
        <member name="P:Love.Fakes.StubImageDataBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubImageDataBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubJoint">
            <summary>Stub type of Love.Joint</summary>
        </member>
        <member name="M:Love.Fakes.StubJoint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubJoint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubJoint.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubJoint.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubJoint.InitializeStub">
            <summary>Initializes a new instance of type StubJoint</summary>
        </member>
        <member name="P:Love.Fakes.StubJoint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubJoint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubJoystick">
            <summary>Stub type of Love.Joystick</summary>
        </member>
        <member name="M:Love.Fakes.StubJoystick.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubJoystick.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubJoystick.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubJoystick.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubJoystick.InitializeStub">
            <summary>Initializes a new instance of type StubJoystick</summary>
        </member>
        <member name="P:Love.Fakes.StubJoystick.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubJoystick.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubKeyboard">
            <summary>Stub type of Love.Keyboard</summary>
        </member>
        <member name="M:Love.Fakes.StubKeyboard.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubKeyboard.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubKeyboard.InitializeStub">
            <summary>Initializes a new instance of type StubKeyboard</summary>
        </member>
        <member name="P:Love.Fakes.StubKeyboard.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubKeyboard.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubLua">
            <summary>Stub type of Love.Lua</summary>
        </member>
        <member name="M:Love.Fakes.StubLua.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubLua.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubLua.InitializeStub">
            <summary>Initializes a new instance of type StubLua</summary>
        </member>
        <member name="P:Love.Fakes.StubLua.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubLua.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubMathf">
            <summary>Stub type of Love.Mathf</summary>
        </member>
        <member name="M:Love.Fakes.StubMathf.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubMathf.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubMathf.InitializeStub">
            <summary>Initializes a new instance of type StubMathf</summary>
        </member>
        <member name="P:Love.Fakes.StubMathf.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubMathf.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubMesh">
            <summary>Stub type of Love.Mesh</summary>
        </member>
        <member name="M:Love.Fakes.StubMesh.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubMesh.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubMesh.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubMesh.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubMesh.InitializeStub">
            <summary>Initializes a new instance of type StubMesh</summary>
        </member>
        <member name="P:Love.Fakes.StubMesh.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubMesh.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubMeshAttributeNameAttribute">
            <summary>Stub type of Love.MeshAttributeNameAttribute</summary>
        </member>
        <member name="M:Love.Fakes.StubMeshAttributeNameAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubMeshAttributeNameAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubMeshAttributeNameAttribute.GetHashCode">
            <summary>Sets the Stub of Attribute.GetHashCode(Attribute this)</summary>
        </member>
        <member name="F:Love.Fakes.StubMeshAttributeNameAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode(Attribute this)</summary>
        </member>
        <member name="M:Love.Fakes.StubMeshAttributeNameAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubMeshAttributeNameAttribute</summary>
        </member>
        <member name="P:Love.Fakes.StubMeshAttributeNameAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubMeshAttributeNameAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Love.Fakes.StubMeshAttributeNameAttribute.IsDefaultAttribute">
            <summary>Sets the Stub of Attribute.IsDefaultAttribute(Attribute this)</summary>
        </member>
        <member name="F:Love.Fakes.StubMeshAttributeNameAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute(Attribute this)</summary>
        </member>
        <member name="M:Love.Fakes.StubMeshAttributeNameAttribute.Match(System.Object)">
            <summary>Sets the Stub of Attribute.Match(Attribute this, Object obj)</summary>
        </member>
        <member name="F:Love.Fakes.StubMeshAttributeNameAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Attribute this, Object obj)</summary>
        </member>
        <member name="P:Love.Fakes.StubMeshAttributeNameAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId(Attribute this)</summary>
        </member>
        <member name="F:Love.Fakes.StubMeshAttributeNameAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId(Attribute this)</summary>
        </member>
        <member name="T:Love.Fakes.StubMotorJoint">
            <summary>Stub type of Love.MotorJoint</summary>
        </member>
        <member name="M:Love.Fakes.StubMotorJoint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubMotorJoint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubMotorJoint.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubMotorJoint.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubMotorJoint.InitializeStub">
            <summary>Initializes a new instance of type StubMotorJoint</summary>
        </member>
        <member name="P:Love.Fakes.StubMotorJoint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubMotorJoint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubMouse">
            <summary>Stub type of Love.Mouse</summary>
        </member>
        <member name="M:Love.Fakes.StubMouse.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubMouse.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubMouse.InitializeStub">
            <summary>Initializes a new instance of type StubMouse</summary>
        </member>
        <member name="P:Love.Fakes.StubMouse.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubMouse.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubMouseJoint">
            <summary>Stub type of Love.MouseJoint</summary>
        </member>
        <member name="M:Love.Fakes.StubMouseJoint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubMouseJoint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubMouseJoint.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubMouseJoint.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubMouseJoint.InitializeStub">
            <summary>Initializes a new instance of type StubMouseJoint</summary>
        </member>
        <member name="P:Love.Fakes.StubMouseJoint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubMouseJoint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubParticleSystem">
            <summary>Stub type of Love.ParticleSystem</summary>
        </member>
        <member name="M:Love.Fakes.StubParticleSystem.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubParticleSystem.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubParticleSystem.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubParticleSystem.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubParticleSystem.InitializeStub">
            <summary>Initializes a new instance of type StubParticleSystem</summary>
        </member>
        <member name="P:Love.Fakes.StubParticleSystem.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubParticleSystem.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubPhysics">
            <summary>Stub type of Love.Physics</summary>
        </member>
        <member name="M:Love.Fakes.StubPhysics.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubPhysics.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubPhysics.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubPhysics.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubPhysics.InitializeStub">
            <summary>Initializes a new instance of type StubPhysics</summary>
        </member>
        <member name="P:Love.Fakes.StubPhysics.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubPhysics.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubPolygonShape">
            <summary>Stub type of Love.PolygonShape</summary>
        </member>
        <member name="M:Love.Fakes.StubPolygonShape.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubPolygonShape.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubPolygonShape.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubPolygonShape.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubPolygonShape.InitializeStub">
            <summary>Initializes a new instance of type StubPolygonShape</summary>
        </member>
        <member name="P:Love.Fakes.StubPolygonShape.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubPolygonShape.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubPrismaticJoint">
            <summary>Stub type of Love.PrismaticJoint</summary>
        </member>
        <member name="M:Love.Fakes.StubPrismaticJoint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubPrismaticJoint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubPrismaticJoint.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubPrismaticJoint.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubPrismaticJoint.InitializeStub">
            <summary>Initializes a new instance of type StubPrismaticJoint</summary>
        </member>
        <member name="P:Love.Fakes.StubPrismaticJoint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubPrismaticJoint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubPulleyJoint">
            <summary>Stub type of Love.PulleyJoint</summary>
        </member>
        <member name="M:Love.Fakes.StubPulleyJoint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubPulleyJoint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubPulleyJoint.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubPulleyJoint.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubPulleyJoint.InitializeStub">
            <summary>Initializes a new instance of type StubPulleyJoint</summary>
        </member>
        <member name="P:Love.Fakes.StubPulleyJoint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubPulleyJoint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubQuad">
            <summary>Stub type of Love.Quad</summary>
        </member>
        <member name="M:Love.Fakes.StubQuad.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubQuad.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubQuad.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubQuad.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubQuad.InitializeStub">
            <summary>Initializes a new instance of type StubQuad</summary>
        </member>
        <member name="P:Love.Fakes.StubQuad.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubQuad.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubRandomGenerator">
            <summary>Stub type of Love.RandomGenerator</summary>
        </member>
        <member name="M:Love.Fakes.StubRandomGenerator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubRandomGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubRandomGenerator.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubRandomGenerator.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubRandomGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubRandomGenerator</summary>
        </member>
        <member name="P:Love.Fakes.StubRandomGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubRandomGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubRasterizer">
            <summary>Stub type of Love.Rasterizer</summary>
        </member>
        <member name="M:Love.Fakes.StubRasterizer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubRasterizer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubRasterizer.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubRasterizer.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubRasterizer.InitializeStub">
            <summary>Initializes a new instance of type StubRasterizer</summary>
        </member>
        <member name="P:Love.Fakes.StubRasterizer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubRasterizer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubRenderTarget">
            <summary>Stub type of Love.RenderTarget</summary>
        </member>
        <member name="M:Love.Fakes.StubRenderTarget.#ctor(Love.Canvas,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubRenderTarget.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubRenderTarget.InitializeStub">
            <summary>Initializes a new instance of type StubRenderTarget</summary>
        </member>
        <member name="P:Love.Fakes.StubRenderTarget.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubRenderTarget.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubRenderTargetInfo">
            <summary>Stub type of Love.RenderTargetInfo</summary>
        </member>
        <member name="M:Love.Fakes.StubRenderTargetInfo.#ctor(System.Collections.Generic.List{Love.RenderTarget},Love.RenderTarget,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubRenderTargetInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubRenderTargetInfo.InitializeStub">
            <summary>Initializes a new instance of type StubRenderTargetInfo</summary>
        </member>
        <member name="P:Love.Fakes.StubRenderTargetInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubRenderTargetInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubResource">
            <summary>Stub type of Love.Resource</summary>
        </member>
        <member name="M:Love.Fakes.StubResource.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubResource.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubResource.InitializeStub">
            <summary>Initializes a new instance of type StubResource</summary>
        </member>
        <member name="P:Love.Fakes.StubResource.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubResource.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubRevoluteJoint">
            <summary>Stub type of Love.RevoluteJoint</summary>
        </member>
        <member name="M:Love.Fakes.StubRevoluteJoint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubRevoluteJoint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubRevoluteJoint.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubRevoluteJoint.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubRevoluteJoint.InitializeStub">
            <summary>Initializes a new instance of type StubRevoluteJoint</summary>
        </member>
        <member name="P:Love.Fakes.StubRevoluteJoint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubRevoluteJoint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubRopeJoint">
            <summary>Stub type of Love.RopeJoint</summary>
        </member>
        <member name="M:Love.Fakes.StubRopeJoint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubRopeJoint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubRopeJoint.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubRopeJoint.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubRopeJoint.InitializeStub">
            <summary>Initializes a new instance of type StubRopeJoint</summary>
        </member>
        <member name="P:Love.Fakes.StubRopeJoint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubRopeJoint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubScene">
            <summary>Stub type of Love.Scene</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubScene.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.DirectoryDropped(System.String)">
            <summary>Sets the Stub of Scene.DirectoryDropped(Scene this, String path)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.DirectoryDroppedString">
            <summary>Sets the stub of Scene.DirectoryDropped(Scene this, String path)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.Draw">
            <summary>Sets the Stub of Scene.Draw(Scene this)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.Draw01">
            <summary>Sets the stub of Scene.Draw(Scene this)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.ErrorHandler(System.Exception)">
            <summary>Sets the Stub of Scene.ErrorHandler(Scene this, Exception e)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.ErrorHandlerException">
            <summary>Sets the stub of Scene.ErrorHandler(Scene this, Exception e)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.FileDropped(System.String)">
            <summary>Sets the Stub of Scene.FileDropped(Scene this, String fileFilePath)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.FileDroppedString">
            <summary>Sets the stub of Scene.FileDropped(Scene this, String fileFilePath)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.InitializeStub">
            <summary>Initializes a new instance of type StubScene</summary>
        </member>
        <member name="P:Love.Fakes.StubScene.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubScene.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.JoystickAdded(Love.Joystick)">
            <summary>Sets the Stub of Scene.JoystickAdded(Scene this, Joystick joystick)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.JoystickAddedJoystick">
            <summary>Sets the stub of Scene.JoystickAdded(Scene this, Joystick joystick)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.JoystickAxis(Love.Joystick,System.Single,System.Single)">
            <summary>Sets the Stub of Scene.JoystickAxis(Scene this, Joystick joystick, Single axis, Single value)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.JoystickAxisJoystickSingleSingle">
            <summary>Sets the stub of Scene.JoystickAxis(Scene this, Joystick joystick, Single axis, Single value)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.JoystickGamepadAxis(Love.Joystick,Love.GamepadAxis,System.Single)">
            <summary>Sets the Stub of Scene.JoystickGamepadAxis(Scene this, Joystick joystick, GamepadAxis axis, Single value)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.JoystickGamepadAxisJoystickGamepadAxisSingle">
            <summary>Sets the stub of Scene.JoystickGamepadAxis(Scene this, Joystick joystick, GamepadAxis axis, Single value)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.JoystickGamepadPressed(Love.Joystick,Love.GamepadButton)">
            <summary>Sets the Stub of Scene.JoystickGamepadPressed(Scene this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.JoystickGamepadPressedJoystickGamepadButton">
            <summary>Sets the stub of Scene.JoystickGamepadPressed(Scene this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.JoystickGamepadReleased(Love.Joystick,Love.GamepadButton)">
            <summary>Sets the Stub of Scene.JoystickGamepadReleased(Scene this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.JoystickGamepadReleasedJoystickGamepadButton">
            <summary>Sets the stub of Scene.JoystickGamepadReleased(Scene this, Joystick joystick, GamepadButton button)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.JoystickHat(Love.Joystick,System.Int32,Love.JoystickHat)">
            <summary>Sets the Stub of Scene.JoystickHat(Scene this, Joystick joystick, Int32 hat, JoystickHat direction)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.JoystickHatJoystickInt32JoystickHat">
            <summary>Sets the stub of Scene.JoystickHat(Scene this, Joystick joystick, Int32 hat, JoystickHat direction)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.JoystickPressed(Love.Joystick,System.Int32)">
            <summary>Sets the Stub of Scene.JoystickPressed(Scene this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.JoystickPressedJoystickInt32">
            <summary>Sets the stub of Scene.JoystickPressed(Scene this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.JoystickReleased(Love.Joystick,System.Int32)">
            <summary>Sets the Stub of Scene.JoystickReleased(Scene this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.JoystickReleasedJoystickInt32">
            <summary>Sets the stub of Scene.JoystickReleased(Scene this, Joystick joystick, Int32 button)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.JoystickRemoved(Love.Joystick)">
            <summary>Sets the Stub of Scene.JoystickRemoved(Scene this, Joystick joystick)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.JoystickRemovedJoystick">
            <summary>Sets the stub of Scene.JoystickRemoved(Scene this, Joystick joystick)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.KeyPressed(Love.KeyConstant,Love.Scancode,System.Boolean)">
            <summary>Sets the Stub of Scene.KeyPressed(Scene this, KeyConstant key, Scancode scancode, Boolean isRepeat)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.KeyPressedKeyConstantScancodeBoolean">
            <summary>Sets the stub of Scene.KeyPressed(Scene this, KeyConstant key, Scancode scancode, Boolean isRepeat)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.KeyReleased(Love.KeyConstant,Love.Scancode)">
            <summary>Sets the Stub of Scene.KeyReleased(Scene this, KeyConstant key, Scancode scancode)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.KeyReleasedKeyConstantScancode">
            <summary>Sets the stub of Scene.KeyReleased(Scene this, KeyConstant key, Scancode scancode)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.Load">
            <summary>Sets the Stub of Scene.Load(Scene this)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.Load01">
            <summary>Sets the stub of Scene.Load(Scene this)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.LowMemory">
            <summary>Sets the Stub of Scene.LowMemory(Scene this)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.LowMemory01">
            <summary>Sets the stub of Scene.LowMemory(Scene this)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.MouseFocus(System.Boolean)">
            <summary>Sets the Stub of Scene.MouseFocus(Scene this, Boolean focus)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.MouseFocusBoolean">
            <summary>Sets the stub of Scene.MouseFocus(Scene this, Boolean focus)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.MouseMoved(System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>Sets the Stub of Scene.MouseMoved(Scene this, Single x, Single y, Single dx, Single dy, Boolean isTouch)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.MouseMovedSingleSingleSingleSingleBoolean">
            <summary>Sets the stub of Scene.MouseMoved(Scene this, Single x, Single y, Single dx, Single dy, Boolean isTouch)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.MousePressed(System.Single,System.Single,System.Int32,System.Boolean)">
            <summary>Sets the Stub of Scene.MousePressed(Scene this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.MousePressedSingleSingleInt32Boolean">
            <summary>Sets the stub of Scene.MousePressed(Scene this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.MouseReleased(System.Single,System.Single,System.Int32,System.Boolean)">
            <summary>Sets the Stub of Scene.MouseReleased(Scene this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.MouseReleasedSingleSingleInt32Boolean">
            <summary>Sets the stub of Scene.MouseReleased(Scene this, Single x, Single y, Int32 button, Boolean isTouch)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.Quit">
            <summary>Sets the Stub of Scene.Quit(Scene this)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.Quit01">
            <summary>Sets the stub of Scene.Quit(Scene this)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.TextEditing(System.String,System.Int32,System.Int32)">
            <summary>Sets the Stub of Scene.TextEditing(Scene this, String text, Int32 start, Int32 end)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.TextEditingStringInt32Int32">
            <summary>Sets the stub of Scene.TextEditing(Scene this, String text, Int32 start, Int32 end)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.TextInput(System.String)">
            <summary>Sets the Stub of Scene.TextInput(Scene this, String text)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.TextInputString">
            <summary>Sets the stub of Scene.TextInput(Scene this, String text)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.TouchMoved(System.Int64,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Sets the Stub of Scene.TouchMoved(Scene this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.TouchMovedInt64SingleSingleSingleSingleSingle">
            <summary>Sets the stub of Scene.TouchMoved(Scene this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.TouchPressed(System.Int64,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Sets the Stub of Scene.TouchPressed(Scene this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.TouchPressedInt64SingleSingleSingleSingleSingle">
            <summary>Sets the stub of Scene.TouchPressed(Scene this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.TouchReleased(System.Int64,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Sets the Stub of Scene.TouchReleased(Scene this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.TouchReleasedInt64SingleSingleSingleSingleSingle">
            <summary>Sets the stub of Scene.TouchReleased(Scene this, Int64 id, Single x, Single y, Single dx, Single dy, Single pressure)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.Update(System.Single)">
            <summary>Sets the Stub of Scene.Update(Scene this, Single dt)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.UpdateSingle">
            <summary>Sets the stub of Scene.Update(Scene this, Single dt)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.WheelMoved(System.Int32,System.Int32)">
            <summary>Sets the Stub of Scene.WheelMoved(Scene this, Int32 x, Int32 y)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.WheelMovedInt32Int32">
            <summary>Sets the stub of Scene.WheelMoved(Scene this, Int32 x, Int32 y)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.WindowFocus(System.Boolean)">
            <summary>Sets the Stub of Scene.WindowFocus(Scene this, Boolean focus)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.WindowFocusBoolean">
            <summary>Sets the stub of Scene.WindowFocus(Scene this, Boolean focus)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.WindowResize(System.Int32,System.Int32)">
            <summary>Sets the Stub of Scene.WindowResize(Scene this, Int32 w, Int32 h)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.WindowResizeInt32Int32">
            <summary>Sets the stub of Scene.WindowResize(Scene this, Int32 w, Int32 h)</summary>
        </member>
        <member name="M:Love.Fakes.StubScene.WindowVisible(System.Boolean)">
            <summary>Sets the Stub of Scene.WindowVisible(Scene this, Boolean visible)</summary>
        </member>
        <member name="F:Love.Fakes.StubScene.WindowVisibleBoolean">
            <summary>Sets the stub of Scene.WindowVisible(Scene this, Boolean visible)</summary>
        </member>
        <member name="T:Love.Fakes.StubShader">
            <summary>Stub type of Love.Shader</summary>
        </member>
        <member name="M:Love.Fakes.StubShader.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubShader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubShader.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubShader.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubShader.InitializeStub">
            <summary>Initializes a new instance of type StubShader</summary>
        </member>
        <member name="P:Love.Fakes.StubShader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubShader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubShape">
            <summary>Stub type of Love.Shape</summary>
        </member>
        <member name="M:Love.Fakes.StubShape.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubShape.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubShape.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubShape.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubShape.InitializeStub">
            <summary>Initializes a new instance of type StubShape</summary>
        </member>
        <member name="P:Love.Fakes.StubShape.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubShape.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubSound">
            <summary>Stub type of Love.Sound</summary>
        </member>
        <member name="M:Love.Fakes.StubSound.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubSound.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubSound.InitializeStub">
            <summary>Initializes a new instance of type StubSound</summary>
        </member>
        <member name="P:Love.Fakes.StubSound.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubSound.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubSoundData">
            <summary>Stub type of Love.SoundData</summary>
        </member>
        <member name="M:Love.Fakes.StubSoundData.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubSoundData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubSoundData.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubSoundData.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubSoundData.InitializeStub">
            <summary>Initializes a new instance of type StubSoundData</summary>
        </member>
        <member name="P:Love.Fakes.StubSoundData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubSoundData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubSource">
            <summary>Stub type of Love.Source</summary>
        </member>
        <member name="M:Love.Fakes.StubSource.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubSource.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubSource.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubSource.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubSource.InitializeStub">
            <summary>Initializes a new instance of type StubSource</summary>
        </member>
        <member name="P:Love.Fakes.StubSource.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubSource.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubSpecial">
            <summary>Stub type of Love.Special</summary>
        </member>
        <member name="M:Love.Fakes.StubSpecial.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubSpecial.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubSpecial.InitializeStub">
            <summary>Initializes a new instance of type StubSpecial</summary>
        </member>
        <member name="P:Love.Fakes.StubSpecial.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubSpecial.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubSpriteBatch">
            <summary>Stub type of Love.SpriteBatch</summary>
        </member>
        <member name="M:Love.Fakes.StubSpriteBatch.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubSpriteBatch.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubSpriteBatch.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubSpriteBatch.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubSpriteBatch.InitializeStub">
            <summary>Initializes a new instance of type StubSpriteBatch</summary>
        </member>
        <member name="P:Love.Fakes.StubSpriteBatch.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubSpriteBatch.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubStream">
            <summary>Stub type of Love.Stream</summary>
        </member>
        <member name="M:Love.Fakes.StubStream.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubStream.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubStream.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubStream.InitializeStub">
            <summary>Initializes a new instance of type StubStream</summary>
        </member>
        <member name="P:Love.Fakes.StubStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubText">
            <summary>Stub type of Love.Text</summary>
        </member>
        <member name="M:Love.Fakes.StubText.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubText.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubText.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubText.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubText.InitializeStub">
            <summary>Initializes a new instance of type StubText</summary>
        </member>
        <member name="P:Love.Fakes.StubText.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubText.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubTexture">
            <summary>Stub type of Love.Texture</summary>
        </member>
        <member name="M:Love.Fakes.StubTexture.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubTexture.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubTexture.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubTexture.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubTexture.InitializeStub">
            <summary>Initializes a new instance of type StubTexture</summary>
        </member>
        <member name="P:Love.Fakes.StubTexture.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubTexture.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubTimer">
            <summary>Stub type of Love.Timer</summary>
        </member>
        <member name="M:Love.Fakes.StubTimer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubTimer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubTimer.InitializeStub">
            <summary>Initializes a new instance of type StubTimer</summary>
        </member>
        <member name="P:Love.Fakes.StubTimer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubTimer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubTouch">
            <summary>Stub type of Love.Touch</summary>
        </member>
        <member name="M:Love.Fakes.StubTouch.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubTouch.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubTouch.InitializeStub">
            <summary>Initializes a new instance of type StubTouch</summary>
        </member>
        <member name="P:Love.Fakes.StubTouch.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubTouch.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubTrueTypeRasterizer">
            <summary>Stub type of Love.TrueTypeRasterizer</summary>
        </member>
        <member name="M:Love.Fakes.StubTrueTypeRasterizer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubTrueTypeRasterizer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubTrueTypeRasterizer.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubTrueTypeRasterizer.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubTrueTypeRasterizer.InitializeStub">
            <summary>Initializes a new instance of type StubTrueTypeRasterizer</summary>
        </member>
        <member name="P:Love.Fakes.StubTrueTypeRasterizer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubTrueTypeRasterizer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubUserDataLoveObject">
            <summary>Stub type of Love.UserDataLoveObject</summary>
        </member>
        <member name="M:Love.Fakes.StubUserDataLoveObject.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubUserDataLoveObject.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubUserDataLoveObject.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubUserDataLoveObject.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubUserDataLoveObject.InitializeStub">
            <summary>Initializes a new instance of type StubUserDataLoveObject</summary>
        </member>
        <member name="P:Love.Fakes.StubUserDataLoveObject.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubUserDataLoveObject.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubVideo">
            <summary>Stub type of Love.Video</summary>
        </member>
        <member name="M:Love.Fakes.StubVideo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubVideo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubVideo.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubVideo.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubVideo.InitializeStub">
            <summary>Initializes a new instance of type StubVideo</summary>
        </member>
        <member name="P:Love.Fakes.StubVideo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubVideo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubVideoStream">
            <summary>Stub type of Love.VideoStream</summary>
        </member>
        <member name="M:Love.Fakes.StubVideoStream.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubVideoStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubVideoStream.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubVideoStream.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubVideoStream.InitializeStub">
            <summary>Initializes a new instance of type StubVideoStream</summary>
        </member>
        <member name="P:Love.Fakes.StubVideoStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubVideoStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubWeldJoint">
            <summary>Stub type of Love.WeldJoint</summary>
        </member>
        <member name="M:Love.Fakes.StubWeldJoint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubWeldJoint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubWeldJoint.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubWeldJoint.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubWeldJoint.InitializeStub">
            <summary>Initializes a new instance of type StubWeldJoint</summary>
        </member>
        <member name="P:Love.Fakes.StubWeldJoint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubWeldJoint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubWheelJoint">
            <summary>Stub type of Love.WheelJoint</summary>
        </member>
        <member name="M:Love.Fakes.StubWheelJoint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubWheelJoint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubWheelJoint.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubWheelJoint.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubWheelJoint.InitializeStub">
            <summary>Initializes a new instance of type StubWheelJoint</summary>
        </member>
        <member name="P:Love.Fakes.StubWheelJoint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubWheelJoint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubWindow">
            <summary>Stub type of Love.Window</summary>
        </member>
        <member name="M:Love.Fakes.StubWindow.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubWindow.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubWindow.InitializeStub">
            <summary>Initializes a new instance of type StubWindow</summary>
        </member>
        <member name="P:Love.Fakes.StubWindow.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubWindow.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubWindowSettings">
            <summary>Stub type of Love.WindowSettings</summary>
        </member>
        <member name="M:Love.Fakes.StubWindowSettings.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubWindowSettings.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubWindowSettings.InitializeStub">
            <summary>Initializes a new instance of type StubWindowSettings</summary>
        </member>
        <member name="P:Love.Fakes.StubWindowSettings.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubWindowSettings.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Fakes.StubWorld">
            <summary>Stub type of Love.World</summary>
        </member>
        <member name="M:Love.Fakes.StubWorld.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Fakes.StubWorld.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Fakes.StubWorld.GetHashCode">
            <summary>Sets the Stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="F:Love.Fakes.StubWorld.GetHashCode01">
            <summary>Sets the stub of LoveObject.GetHashCode(LoveObject this)</summary>
        </member>
        <member name="M:Love.Fakes.StubWorld.InitializeStub">
            <summary>Initializes a new instance of type StubWorld</summary>
        </member>
        <member name="P:Love.Fakes.StubWorld.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Fakes.StubWorld.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimFPSGraph">
            <summary>Shim type of Love.Misc.FPSGraph</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimFPSGraph.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimFPSGraph.#ctor(Love.Misc.FPSGraph)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimFPSGraph.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimFPSGraph.AllInstances.DrawGraph">
            <summary>Sets the Shim of FPSGraph.DrawGraph(FPSGraph this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimFPSGraph.AllInstances.UpdateFPSSingle">
            <summary>Sets the Shim of FPSGraph.UpdateFPS(FPSGraph this, Single dt)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimFPSGraph.AllInstances.UpdateGraphSingleStringSingle">
            <summary>Sets the Shim of FPSGraph.UpdateGraph(FPSGraph this, Single val, String label, Single dt)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimFPSGraph.AllInstances.UpdateMouseDrag">
            <summary>Sets the Shim of FPSGraph.UpdateMouseDrag(FPSGraph this)</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimFPSGraph.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimFPSGraph.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimFPSGraph.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimFPSGraph.ConfigSingleSingleSingleSingleSingleBoolean">
            <summary>Sets the Shim of FPSGraph.Config(Single x, Single y, Single width, Single height, Single interval, Boolean draggable)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimFPSGraph.Constructor">
            <summary>Sets the Shim of FPSGraph.FPSGraph(FPSGraph this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimFPSGraph.CreateGraphSingleSingleSingleSingleSingleBoolean">
            <summary>Sets the Shim of FPSGraph.CreateGraph(Single x, Single y, Single width, Single height, Single interval, Boolean draggable)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimFPSGraph.Draw">
            <summary>Sets the Shim of FPSGraph.Draw()</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimFPSGraph.DrawGraph">
            <summary>Sets the Shim of FPSGraph.DrawGraph(FPSGraph this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimFPSGraph.PositionGet">
            <summary>Sets the Shim of FPSGraph.get_Position()</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimFPSGraph.PositionSetVector2">
            <summary>Sets the Shim of FPSGraph.set_Position(Vector2 value)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimFPSGraph.RectGet">
            <summary>Sets the Shim of FPSGraph.get_Rect()</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimFPSGraph.RectSetRectangleF">
            <summary>Sets the Shim of FPSGraph.set_Rect(RectangleF value)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimFPSGraph.SizeGet">
            <summary>Sets the Shim of FPSGraph.get_Size()</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimFPSGraph.SizeSetSizeF">
            <summary>Sets the Shim of FPSGraph.set_Size(SizeF value)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimFPSGraph.StaticConstructor">
            <summary>Sets the Shim of FPSGraph.FPSGraph()</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimFPSGraph.UpdateFPSSingle">
            <summary>Sets the Shim of FPSGraph.UpdateFPS(FPSGraph this, Single dt)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimFPSGraph.UpdateGraphSingleStringSingle">
            <summary>Sets the Shim of FPSGraph.UpdateGraph(FPSGraph this, Single val, String label, Single dt)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimFPSGraph.UpdateMouseDrag">
            <summary>Sets the Shim of FPSGraph.UpdateMouseDrag(FPSGraph this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimFPSGraph.UpdateSingle">
            <summary>Sets the Shim of FPSGraph.Update(Single dt)</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimInputBoost">
            <summary>Shim type of Love.Misc.InputBoost</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimInputBoost.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimInputBoost.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimInputBoost.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimInputBoost.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimInputBoost.GetGamepadAxisJoystick">
            <summary>Sets the Shim of InputBoost.GetGamepadAxis(Joystick joy)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimInputBoost.GetGamepadAxisPreviousJoystick">
            <summary>Sets the Shim of InputBoost.GetGamepadAxisPrevious(Joystick joy)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimInputBoost.GetGamepadDownJoystick">
            <summary>Sets the Shim of InputBoost.GetGamepadDown(Joystick joystick)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimInputBoost.GetGamepadDownPreviousJoystick">
            <summary>Sets the Shim of InputBoost.GetGamepadDownPrevious(Joystick joystick)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimInputBoost.GetKeyboardDown">
            <summary>Sets the Shim of InputBoost.GetKeyboardDown()</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimInputBoost.GetKeyboardPrevious">
            <summary>Sets the Shim of InputBoost.GetKeyboardPrevious()</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimInputBoost.GetMouseDown">
            <summary>Sets the Shim of InputBoost.GetMouseDown()</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimInputBoost.GetMouseDownPrevious">
            <summary>Sets the Shim of InputBoost.GetMouseDownPrevious()</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimInputBoost.IsGamepadAxisChangeJoystickGamepadAxis">
            <summary>Sets the Shim of InputBoost.IsGamepadAxisChange(Joystick joy, GamepadAxis axis)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimInputBoost.IsGamepadDownJoystickGamepadButton">
            <summary>Sets the Shim of InputBoost.IsGamepadDown(Joystick joystick, GamepadButton gbtn)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimInputBoost.IsGamepadDownPreviousJoystickGamepadButton">
            <summary>Sets the Shim of InputBoost.IsGamepadDownPrevious(Joystick joystick, GamepadButton gbtn)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimInputBoost.IsKeyboardDownKeyConstant">
            <summary>Sets the Shim of InputBoost.IsKeyboardDown(KeyConstant key)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimInputBoost.IsKeyboardPreviousKeyConstant">
            <summary>Sets the Shim of InputBoost.IsKeyboardPrevious(KeyConstant key)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimInputBoost.IsMouseDownMouseButton">
            <summary>Sets the Shim of InputBoost.IsMouseDown(MouseButton button)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimInputBoost.IsMouseDownPreviousMouseButton">
            <summary>Sets the Shim of InputBoost.IsMouseDownPrevious(MouseButton button)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimInputBoost.JoystickAxisUpdate">
            <summary>Sets the Shim of InputBoost.JoystickAxisUpdate()</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimInputBoost.JoystickButtonUpdate">
            <summary>Sets the Shim of InputBoost.JoystickButtonUpdate()</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimInputBoost.KeyboardUpdate">
            <summary>Sets the Shim of InputBoost.KeyboardUpdate()</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimInputBoost.MouseUpdate">
            <summary>Sets the Shim of InputBoost.MouseUpdate()</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimInputBoost.ShimAnxisValue">
            <summary>Shim type of Love.Misc.InputBoost.AnxisValue</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimInputBoost.ShimAnxisValue.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimInputBoost.ShimAnxisValue.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimInputBoost.ShimAnxisValue.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimInputBoost.ShimAnxisValue.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimInputBoost.ShimAnxisValue.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimInputBoost.StaticConstructor">
            <summary>Sets the Shim of InputBoost.InputBoost()</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimInputBoost.Step">
            <summary>Sets the Shim of InputBoost.Step()</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMeshUtils">
            <summary>Shim type of Love.Misc.MeshUtils</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMeshUtils.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMeshUtils.#ctor(Love.Misc.MeshUtils)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMeshUtils.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMeshUtils.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMeshUtils.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMeshUtils.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMeshUtils.Constructor">
            <summary>Sets the Shim of MeshUtils.MeshUtils(MeshUtils this)</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMeshUtils.ParseOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Love.Misc.MeshUtils.Info{``0}})">
            <summary>Sets the Shim of MeshUtils.Parse()</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMeshUtils.ShimInfo`1">
            <summary>Shim type of Love.Misc.MeshUtils.Info&lt;T&gt;</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMeshUtils.ShimInfo`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMeshUtils.ShimInfo`1.#ctor(Love.Misc.MeshUtils.Info{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMeshUtils.ShimInfo`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMeshUtils.ShimInfo`1.AllInstances.GetBytePreVertex">
            <summary>Sets the Shim of Info`1.GetBytePreVertex(Info`1 this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMeshUtils.ShimInfo`1.AllInstances.GetObjectT0RefByteArrayInt32">
            <summary>Sets the Shim of Info`1.GetObject(Info`1 this, !0&amp; target, Byte[] data, Int32 offset)</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMeshUtils.ShimInfo`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMeshUtils.ShimInfo`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMeshUtils.ShimInfo`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMeshUtils.ShimInfo`1.ConstructorTypeListOfMeshFormatDescribeEntryListOfTupleOfFieldInfoVertexDataType">
            <summary>Sets the Shim of Info`1.Info`1(Info`1 this, Type type, List`1 formatList, List`1 orderList)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMeshUtils.ShimInfo`1.GetBytePreVertex">
            <summary>Sets the Shim of Info`1.GetBytePreVertex(Info`1 this)</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMeshUtils.ShimVertex">
            <summary>Shim type of Love.Misc.MeshUtils.Vertex</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMeshUtils.ShimVertex.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMeshUtils.ShimVertex.#ctor(Love.Misc.MeshUtils.Vertex)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMeshUtils.ShimVertex.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMeshUtils.ShimVertex.AllInstances.ToString01">
            <summary>Sets the Shim of Vertex.ToString(Vertex this)</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMeshUtils.ShimVertex.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMeshUtils.ShimVertex.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMeshUtils.ShimVertex.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMeshUtils.ShimVertex.Constructor">
            <summary>Sets the Shim of Vertex.Vertex(Vertex this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMeshUtils.ShimVertex.ConstructorSingleSingleSingleSingleByteByteByteByte">
            <summary>Sets the Shim of Vertex.Vertex(Vertex this, Single x, Single y, Single u, Single v, Byte r, Byte g, Byte b, Byte a)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMeshUtils.ShimVertex.ToString">
            <summary>Sets the Shim of Vertex.ToString(Vertex this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMeshUtils.StaticConstructor">
            <summary>Sets the Shim of MeshUtils.MeshUtils()</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMeshUtils.TryConvertToTypeTypeVertexDataTypeOut">
            <summary>Sets the Shim of MeshUtils.TryConvertToType(Type type, VertexDataType* dataType)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMeshUtils.VertexDataTypeToByteCountVertexDataType">
            <summary>Sets the Shim of MeshUtils.VertexDataTypeToByteCount(VertexDataType type)</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine">
            <summary>Shim type of Love.Misc.Moonshine</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.#ctor(Love.Misc.Moonshine)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.AllInstances.DrawAction">
            <summary>Sets the Shim of Moonshine.Draw(Moonshine this, Action drawFunc)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.AllInstances.GetBuffer">
            <summary>Sets the Shim of Moonshine.GetBuffer(Moonshine this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.AllInstances.NextInt32Int32MoonshineEffect">
            <summary>Sets the Shim of Moonshine.Next(Moonshine this, Int32 w, Int32 h, Effect e)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.AllInstances.NextMoonshineEffect">
            <summary>Sets the Shim of Moonshine.Next(Moonshine this, Effect e)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.AllInstances.ResizeInt32Int32">
            <summary>Sets the Shim of Moonshine.Resize(Moonshine this, Int32 w, Int32 h)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.AllInstances._Drawb__12_0MoonshineEffect">
            <summary>Sets the Shim of Moonshine.&lt;Draw&gt;b__12_0(Moonshine this, Effect item)</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ChinaMoonshineEffect">
            <summary>Sets the Shim of Moonshine.China(Effect e)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.Constructor">
            <summary>Sets the Shim of Moonshine.Moonshine(Moonshine this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.CreateInt32Int32MoonshineEffect">
            <summary>Sets the Shim of Moonshine.Create(Int32 w, Int32 h, Effect e)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.DrawAction">
            <summary>Sets the Shim of Moonshine.Draw(Moonshine this, Action drawFunc)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.DrawWithShaderCanvasCanvasShader">
            <summary>Sets the Shim of Moonshine.DrawWithShader(Canvas source, Canvas destination, Shader shader)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.GetBuffer">
            <summary>Sets the Shim of Moonshine.GetBuffer(Moonshine this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.NextInt32Int32MoonshineEffect">
            <summary>Sets the Shim of Moonshine.Next(Moonshine this, Int32 w, Int32 h, Effect e)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.NextMoonshineEffect">
            <summary>Sets the Shim of Moonshine.Next(Moonshine this, Effect e)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ResizeInt32Int32">
            <summary>Sets the Shim of Moonshine.Resize(Moonshine this, Int32 w, Int32 h)</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimBoxBlur">
            <summary>Shim type of Love.Misc.Moonshine.BoxBlur</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimBoxBlur.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimBoxBlur.#ctor(Love.Misc.Moonshine.BoxBlur)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimBoxBlur.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimBoxBlur.AllInstances.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of BoxBlur.Draw(BoxBlur this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimBoxBlur.AllInstances.RadiusGet">
            <summary>Sets the Shim of BoxBlur.get_Radius(BoxBlur this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimBoxBlur.AllInstances.RadiusSetVector2">
            <summary>Sets the Shim of BoxBlur.set_Radius(BoxBlur this, Vector2 value)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimBoxBlur.AllInstances.SetRadiusSingleSingle">
            <summary>Sets the Shim of BoxBlur.SetRadius(BoxBlur this, Single radiusX, Single radiusY)</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimBoxBlur.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimBoxBlur.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimBoxBlur.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimBoxBlur.Constructor">
            <summary>Sets the Shim of BoxBlur.BoxBlur(BoxBlur this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimBoxBlur.ConstructorSingleSingle">
            <summary>Sets the Shim of BoxBlur.BoxBlur(BoxBlur this, Single radiusX, Single radiusY)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimBoxBlur.Create">
            <summary>Sets the Shim of BoxBlur.Create()</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimBoxBlur.CreateSingleSingle">
            <summary>Sets the Shim of BoxBlur.Create(Single radiusX, Single radiusY)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimBoxBlur.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of BoxBlur.Draw(BoxBlur this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimBoxBlur.RadiusGet">
            <summary>Sets the Shim of BoxBlur.get_Radius(BoxBlur this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimBoxBlur.RadiusSetVector2">
            <summary>Sets the Shim of BoxBlur.set_Radius(BoxBlur this, Vector2 value)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimBoxBlur.SetRadiusSingleSingle">
            <summary>Sets the Shim of BoxBlur.SetRadius(BoxBlur this, Single radiusX, Single radiusY)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimBoxBlur.StaticConstructor">
            <summary>Sets the Shim of BoxBlur.BoxBlur()</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimCRT">
            <summary>Shim type of Love.Misc.Moonshine.CRT</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimCRT.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimCRT.#ctor(Love.Misc.Moonshine.CRT)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimCRT.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimCRT.AllInstances.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of CRT.Draw(CRT this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimCRT.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimCRT.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimCRT.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimCRT.Constructor">
            <summary>Sets the Shim of CRT.CRT(CRT this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimCRT.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of CRT.Draw(CRT this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimCRT.StaticConstructor">
            <summary>Sets the Shim of CRT.CRT()</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimChromasep">
            <summary>Shim type of Love.Misc.Moonshine.Chromasep</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimChromasep.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimChromasep.#ctor(Love.Misc.Moonshine.Chromasep)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimChromasep.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimChromasep.AllInstances.AngleGet">
            <summary>Sets the Shim of Chromasep.get_Angle(Chromasep this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimChromasep.AllInstances.AngleSetSingle">
            <summary>Sets the Shim of Chromasep.set_Angle(Chromasep this, Single value)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimChromasep.AllInstances.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of Chromasep.Draw(Chromasep this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimChromasep.AllInstances.RadiusGet">
            <summary>Sets the Shim of Chromasep.get_Radius(Chromasep this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimChromasep.AllInstances.RadiusSetSingle">
            <summary>Sets the Shim of Chromasep.set_Radius(Chromasep this, Single value)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimChromasep.AngleGet">
            <summary>Sets the Shim of Chromasep.get_Angle(Chromasep this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimChromasep.AngleSetSingle">
            <summary>Sets the Shim of Chromasep.set_Angle(Chromasep this, Single value)</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimChromasep.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimChromasep.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimChromasep.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimChromasep.Constructor">
            <summary>Sets the Shim of Chromasep.Chromasep(Chromasep this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimChromasep.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of Chromasep.Draw(Chromasep this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimChromasep.RadiusGet">
            <summary>Sets the Shim of Chromasep.get_Radius(Chromasep this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimChromasep.RadiusSetSingle">
            <summary>Sets the Shim of Chromasep.set_Radius(Chromasep this, Single value)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimChromasep.StaticConstructor">
            <summary>Sets the Shim of Chromasep.Chromasep()</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimColorGradeSimple">
            <summary>Shim type of Love.Misc.Moonshine.ColorGradeSimple</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimColorGradeSimple.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimColorGradeSimple.#ctor(Love.Misc.Moonshine.ColorGradeSimple)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimColorGradeSimple.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimColorGradeSimple.AllInstances.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of ColorGradeSimple.Draw(ColorGradeSimple this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimColorGradeSimple.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimColorGradeSimple.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimColorGradeSimple.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimColorGradeSimple.Constructor">
            <summary>Sets the Shim of ColorGradeSimple.ColorGradeSimple(ColorGradeSimple this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimColorGradeSimple.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of ColorGradeSimple.Draw(ColorGradeSimple this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimColorGradeSimple.StaticConstructor">
            <summary>Sets the Shim of ColorGradeSimple.ColorGradeSimple()</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimDMG">
            <summary>Shim type of Love.Misc.Moonshine.DMG</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimDMG.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimDMG.#ctor(Love.Misc.Moonshine.DMG)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimDMG.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimDMG.AllInstances.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of DMG.Draw(DMG this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimDMG.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimDMG.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimDMG.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimDMG.Constructor">
            <summary>Sets the Shim of DMG.DMG(DMG this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimDMG.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of DMG.Draw(DMG this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimDMG.ShimGameBoyPalette">
            <summary>Shim type of Love.Misc.Moonshine.DMG.GameBoyPalette</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimDMG.ShimGameBoyPalette.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimDMG.ShimGameBoyPalette.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimDMG.ShimGameBoyPalette.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimDMG.ShimGameBoyPalette.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimDMG.ShimGameBoyPalette.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimDMG.ShimGameBoyPalette.StaticConstructor">
            <summary>Sets the Shim of GameBoyPalette.GameBoyPalette()</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimDMG.StaticConstructor">
            <summary>Sets the Shim of DMG.DMG()</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimDesaturate">
            <summary>Shim type of Love.Misc.Moonshine.Desaturate</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimDesaturate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimDesaturate.#ctor(Love.Misc.Moonshine.Desaturate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimDesaturate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimDesaturate.AllInstances.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of Desaturate.Draw(Desaturate this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimDesaturate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimDesaturate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimDesaturate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimDesaturate.Constructor">
            <summary>Sets the Shim of Desaturate.Desaturate(Desaturate this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimDesaturate.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of Desaturate.Draw(Desaturate this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimDesaturate.StaticConstructor">
            <summary>Sets the Shim of Desaturate.Desaturate()</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimDoubleBufferCanvas">
            <summary>Shim type of Love.Misc.Moonshine.DoubleBufferCanvas</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimDoubleBufferCanvas.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimDoubleBufferCanvas.#ctor(Love.Misc.Moonshine.DoubleBufferCanvas)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimDoubleBufferCanvas.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimDoubleBufferCanvas.AllInstances.Swap">
            <summary>Sets the Shim of DoubleBufferCanvas.Swap(DoubleBufferCanvas this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimDoubleBufferCanvas.AllInstances.SwapShader">
            <summary>Sets the Shim of DoubleBufferCanvas.Swap(DoubleBufferCanvas this, Shader shader)</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimDoubleBufferCanvas.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimDoubleBufferCanvas.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimDoubleBufferCanvas.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimDoubleBufferCanvas.Constructor">
            <summary>Sets the Shim of DoubleBufferCanvas.DoubleBufferCanvas(DoubleBufferCanvas this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimDoubleBufferCanvas.Swap">
            <summary>Sets the Shim of DoubleBufferCanvas.Swap(DoubleBufferCanvas this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimDoubleBufferCanvas.SwapShader">
            <summary>Sets the Shim of DoubleBufferCanvas.Swap(DoubleBufferCanvas this, Shader shader)</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimEffect">
            <summary>Shim type of Love.Misc.Moonshine.Effect</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimEffect.#ctor(Love.Misc.Moonshine.Effect)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimEffect.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimEffect.AllInstances.EnableGet">
            <summary>Sets the Shim of Effect.get_Enable(Effect this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimEffect.AllInstances.EnableSetBoolean">
            <summary>Sets the Shim of Effect.set_Enable(Effect this, Boolean value)</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimEffect.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimEffect.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimEffect.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimEffect.Constructor">
            <summary>Sets the Shim of Effect.Effect(Effect this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimEffect.EnableGet">
            <summary>Sets the Shim of Effect.get_Enable(Effect this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimEffect.EnableSetBoolean">
            <summary>Sets the Shim of Effect.set_Enable(Effect this, Boolean value)</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimFilmGrain">
            <summary>Shim type of Love.Misc.Moonshine.FilmGrain</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimFilmGrain.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimFilmGrain.#ctor(Love.Misc.Moonshine.FilmGrain)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimFilmGrain.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimFilmGrain.AllInstances.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of FilmGrain.Draw(FilmGrain this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimFilmGrain.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimFilmGrain.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimFilmGrain.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimFilmGrain.Constructor">
            <summary>Sets the Shim of FilmGrain.FilmGrain(FilmGrain this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimFilmGrain.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of FilmGrain.Draw(FilmGrain this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimFilmGrain.StaticConstructor">
            <summary>Sets the Shim of FilmGrain.FilmGrain()</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimGaussianBlur">
            <summary>Shim type of Love.Misc.Moonshine.GaussianBlur</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimGaussianBlur.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimGaussianBlur.#ctor(Love.Misc.Moonshine.GaussianBlur)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimGaussianBlur.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGaussianBlur.AllInstances.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of GaussianBlur.Draw(GaussianBlur this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGaussianBlur.AllInstances.ResetShader">
            <summary>Sets the Shim of GaussianBlur.ResetShader(GaussianBlur this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGaussianBlur.AllInstances.SigmaGet">
            <summary>Sets the Shim of GaussianBlur.get_Sigma(GaussianBlur this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGaussianBlur.AllInstances.SigmaSetSingle">
            <summary>Sets the Shim of GaussianBlur.set_Sigma(GaussianBlur this, Single value)</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimGaussianBlur.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimGaussianBlur.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGaussianBlur.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGaussianBlur.Constructor">
            <summary>Sets the Shim of GaussianBlur.GaussianBlur(GaussianBlur this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGaussianBlur.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of GaussianBlur.Draw(GaussianBlur this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGaussianBlur.ResetShader">
            <summary>Sets the Shim of GaussianBlur.ResetShader(GaussianBlur this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGaussianBlur.SigmaGet">
            <summary>Sets the Shim of GaussianBlur.get_Sigma(GaussianBlur this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGaussianBlur.SigmaSetSingle">
            <summary>Sets the Shim of GaussianBlur.set_Sigma(GaussianBlur this, Single value)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGaussianBlur.StaticConstructor">
            <summary>Sets the Shim of GaussianBlur.GaussianBlur()</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimGlow">
            <summary>Shim type of Love.Misc.Moonshine.Glow</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimGlow.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimGlow.#ctor(Love.Misc.Moonshine.Glow)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimGlow.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGlow.AllInstances.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of Glow.Draw(Glow this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGlow.AllInstances.MinLumaGet">
            <summary>Sets the Shim of Glow.get_MinLuma(Glow this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGlow.AllInstances.MinLumaSetSingle">
            <summary>Sets the Shim of Glow.set_MinLuma(Glow this, Single value)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGlow.AllInstances.ResetShader">
            <summary>Sets the Shim of Glow.ResetShader(Glow this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGlow.AllInstances.StrengthGet">
            <summary>Sets the Shim of Glow.get_Strength(Glow this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGlow.AllInstances.StrengthSetSingle">
            <summary>Sets the Shim of Glow.set_Strength(Glow this, Single value)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGlow.AllInstances.UpdateSceneCanvas">
            <summary>Sets the Shim of Glow.UpdateSceneCanvas(Glow this)</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimGlow.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimGlow.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGlow.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGlow.Constructor">
            <summary>Sets the Shim of Glow.Glow(Glow this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGlow.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of Glow.Draw(Glow this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGlow.MinLumaGet">
            <summary>Sets the Shim of Glow.get_MinLuma(Glow this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGlow.MinLumaSetSingle">
            <summary>Sets the Shim of Glow.set_MinLuma(Glow this, Single value)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGlow.ResetShader">
            <summary>Sets the Shim of Glow.ResetShader(Glow this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGlow.StaticConstructor">
            <summary>Sets the Shim of Glow.Glow()</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGlow.StrengthGet">
            <summary>Sets the Shim of Glow.get_Strength(Glow this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGlow.StrengthSetSingle">
            <summary>Sets the Shim of Glow.set_Strength(Glow this, Single value)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGlow.UpdateSceneCanvas">
            <summary>Sets the Shim of Glow.UpdateSceneCanvas(Glow this)</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimGodsray">
            <summary>Shim type of Love.Misc.Moonshine.Godsray</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimGodsray.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimGodsray.#ctor(Love.Misc.Moonshine.Godsray)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimGodsray.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGodsray.AllInstances.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of Godsray.Draw(Godsray this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimGodsray.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimGodsray.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGodsray.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGodsray.Constructor">
            <summary>Sets the Shim of Godsray.Godsray(Godsray this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGodsray.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of Godsray.Draw(Godsray this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimGodsray.StaticConstructor">
            <summary>Sets the Shim of Godsray.Godsray()</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimPixelate">
            <summary>Shim type of Love.Misc.Moonshine.Pixelate</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimPixelate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimPixelate.#ctor(Love.Misc.Moonshine.Pixelate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimPixelate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimPixelate.AllInstances.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of Pixelate.Draw(Pixelate this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimPixelate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimPixelate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimPixelate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimPixelate.Constructor">
            <summary>Sets the Shim of Pixelate.Pixelate(Pixelate this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimPixelate.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of Pixelate.Draw(Pixelate this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimPixelate.StaticConstructor">
            <summary>Sets the Shim of Pixelate.Pixelate()</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimPosterize">
            <summary>Shim type of Love.Misc.Moonshine.Posterize</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimPosterize.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimPosterize.#ctor(Love.Misc.Moonshine.Posterize)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimPosterize.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimPosterize.AllInstances.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of Posterize.Draw(Posterize this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimPosterize.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimPosterize.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimPosterize.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimPosterize.Constructor">
            <summary>Sets the Shim of Posterize.Posterize(Posterize this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimPosterize.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of Posterize.Draw(Posterize this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimPosterize.StaticConstructor">
            <summary>Sets the Shim of Posterize.Posterize()</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimScanlines">
            <summary>Shim type of Love.Misc.Moonshine.Scanlines</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimScanlines.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimScanlines.#ctor(Love.Misc.Moonshine.Scanlines)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimScanlines.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimScanlines.AllInstances.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of Scanlines.Draw(Scanlines this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimScanlines.AllInstances.FrequencySetSingle">
            <summary>Sets the Shim of Scanlines.set_Frequency(Scanlines this, Single value)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimScanlines.AllInstances.WidthSetSingle">
            <summary>Sets the Shim of Scanlines.set_Width(Scanlines this, Single value)</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimScanlines.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimScanlines.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimScanlines.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimScanlines.Constructor">
            <summary>Sets the Shim of Scanlines.Scanlines(Scanlines this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimScanlines.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of Scanlines.Draw(Scanlines this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimScanlines.FrequencySetSingle">
            <summary>Sets the Shim of Scanlines.set_Frequency(Scanlines this, Single value)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimScanlines.StaticConstructor">
            <summary>Sets the Shim of Scanlines.Scanlines()</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimScanlines.WidthSetSingle">
            <summary>Sets the Shim of Scanlines.set_Width(Scanlines this, Single value)</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimSketch">
            <summary>Shim type of Love.Misc.Moonshine.Sketch</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimSketch.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimSketch.#ctor(Love.Misc.Moonshine.Sketch)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimSketch.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimSketch.AllInstances.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of Sketch.Draw(Sketch this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimSketch.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimSketch.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimSketch.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimSketch.Constructor">
            <summary>Sets the Shim of Sketch.Sketch(Sketch this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimSketch.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of Sketch.Draw(Sketch this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimSketch.StaticConstructor">
            <summary>Sets the Shim of Sketch.Sketch()</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimVignette">
            <summary>Shim type of Love.Misc.Moonshine.Vignette</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimVignette.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimVignette.#ctor(Love.Misc.Moonshine.Vignette)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimMoonshine.ShimVignette.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimVignette.AllInstances.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of Vignette.Draw(Vignette this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimVignette.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimMoonshine.ShimVignette.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimVignette.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimVignette.Constructor">
            <summary>Sets the Shim of Vignette.Vignette(Vignette this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimVignette.DrawMoonshineDoubleBufferCanvas">
            <summary>Sets the Shim of Vignette.Draw(Vignette this, DoubleBufferCanvas buffer)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine.ShimVignette.StaticConstructor">
            <summary>Sets the Shim of Vignette.Vignette()</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimMoonshine._Drawb__12_0MoonshineEffect">
            <summary>Sets the Shim of Moonshine.&lt;Draw&gt;b__12_0(Moonshine this, Effect item)</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimTransformStack">
            <summary>Shim type of Love.Misc.TransformStack</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimTransformStack.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimTransformStack.#ctor(Love.Misc.TransformStack)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Love.Misc.Fakes.ShimTransformStack.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimTransformStack.AllInstances.Clear">
            <summary>Sets the Shim of TransformStack.Clear(TransformStack this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimTransformStack.AllInstances.CurrentMatrixGet">
            <summary>Sets the Shim of TransformStack.get_CurrentMatrix(TransformStack this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimTransformStack.AllInstances.EffectMatrix44">
            <summary>Sets the Shim of TransformStack.Effect(TransformStack this, Matrix44 effect)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimTransformStack.AllInstances.Pop">
            <summary>Sets the Shim of TransformStack.Pop(TransformStack this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimTransformStack.AllInstances.Push">
            <summary>Sets the Shim of TransformStack.Push(TransformStack this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimTransformStack.AllInstances.RotateSingle">
            <summary>Sets the Shim of TransformStack.Rotate(TransformStack this, Single r)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimTransformStack.AllInstances.ScaleSingleSingle">
            <summary>Sets the Shim of TransformStack.Scale(TransformStack this, Single sx, Single sy)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimTransformStack.AllInstances.TransformPointInvertVector2">
            <summary>Sets the Shim of TransformStack.TransformPointInvert(TransformStack this, Vector2 p)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimTransformStack.AllInstances.TransformPointVector2">
            <summary>Sets the Shim of TransformStack.TransformPoint(TransformStack this, Vector2 p)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimTransformStack.AllInstances.TranslateSingleSingle">
            <summary>Sets the Shim of TransformStack.Translate(TransformStack this, Single ox, Single oy)</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimTransformStack.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Love.Misc.Fakes.ShimTransformStack.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimTransformStack.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimTransformStack.Clear">
            <summary>Sets the Shim of TransformStack.Clear(TransformStack this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimTransformStack.Constructor">
            <summary>Sets the Shim of TransformStack.TransformStack(TransformStack this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimTransformStack.CurrentMatrixGet">
            <summary>Sets the Shim of TransformStack.get_CurrentMatrix(TransformStack this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimTransformStack.EffectMatrix44">
            <summary>Sets the Shim of TransformStack.Effect(TransformStack this, Matrix44 effect)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimTransformStack.Pop">
            <summary>Sets the Shim of TransformStack.Pop(TransformStack this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimTransformStack.Push">
            <summary>Sets the Shim of TransformStack.Push(TransformStack this)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimTransformStack.RotateSingle">
            <summary>Sets the Shim of TransformStack.Rotate(TransformStack this, Single r)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimTransformStack.ScaleSingleSingle">
            <summary>Sets the Shim of TransformStack.Scale(TransformStack this, Single sx, Single sy)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimTransformStack.TransformPointInvertVector2">
            <summary>Sets the Shim of TransformStack.TransformPointInvert(TransformStack this, Vector2 p)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimTransformStack.TransformPointVector2">
            <summary>Sets the Shim of TransformStack.TransformPoint(TransformStack this, Vector2 p)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimTransformStack.TransformVector3Vector3Matrix44">
            <summary>Sets the Shim of TransformStack.TransformVector3(Vector3 vector, Matrix44 matrix)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimTransformStack.TranslateSingleSingle">
            <summary>Sets the Shim of TransformStack.Translate(TransformStack this, Single ox, Single oy)</summary>
        </member>
        <member name="P:Love.Misc.Fakes.ShimTransformStack.Vector2TransformVector2RefMatrix44RefVector2Out">
            <summary>Sets the Shim of TransformStack.Vector2Transform(Vector2* position, Matrix44* matrix, Vector2* result)</summary>
        </member>
        <member name="T:Love.Misc.Fakes.StubMeshUtils">
            <summary>Stub type of Love.Misc.MeshUtils</summary>
        </member>
        <member name="M:Love.Misc.Fakes.StubMeshUtils.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Misc.Fakes.StubMeshUtils.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Misc.Fakes.StubMeshUtils.InitializeStub">
            <summary>Initializes a new instance of type StubMeshUtils</summary>
        </member>
        <member name="P:Love.Misc.Fakes.StubMeshUtils.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Misc.Fakes.StubMeshUtils.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Love.Misc.Fakes.StubTransformStack">
            <summary>Stub type of Love.Misc.TransformStack</summary>
        </member>
        <member name="M:Love.Misc.Fakes.StubTransformStack.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Love.Misc.Fakes.StubTransformStack.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Love.Misc.Fakes.StubTransformStack.InitializeStub">
            <summary>Initializes a new instance of type StubTransformStack</summary>
        </member>
        <member name="P:Love.Misc.Fakes.StubTransformStack.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Love.Misc.Fakes.StubTransformStack.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:LoveTest.Fakes.ShimStageName">
            <summary>Shim type of LoveTest.StageName</summary>
        </member>
        <member name="M:LoveTest.Fakes.ShimStageName.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LoveTest.Fakes.ShimStageName.#ctor(LoveTest.StageName)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:LoveTest.Fakes.ShimStageName.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:LoveTest.Fakes.ShimStageName.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LoveTest.Fakes.ShimStageName.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LoveTest.Fakes.ShimStageName.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LoveTest.Fakes.ShimStageName.ConstructorString">
            <summary>Sets the Shim of StageName.StageName(StageName this, String name)</summary>
        </member>
        <member name="T:LoveTest.Fakes.StubStageName">
            <summary>Stub type of LoveTest.StageName</summary>
        </member>
        <member name="M:LoveTest.Fakes.StubStageName.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:LoveTest.Fakes.StubStageName.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:LoveTest.Fakes.StubStageName.GetHashCode">
            <summary>Sets the Stub of Attribute.GetHashCode(Attribute this)</summary>
        </member>
        <member name="F:LoveTest.Fakes.StubStageName.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode(Attribute this)</summary>
        </member>
        <member name="M:LoveTest.Fakes.StubStageName.InitializeStub">
            <summary>Initializes a new instance of type StubStageName</summary>
        </member>
        <member name="P:LoveTest.Fakes.StubStageName.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:LoveTest.Fakes.StubStageName.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:LoveTest.Fakes.StubStageName.IsDefaultAttribute">
            <summary>Sets the Stub of Attribute.IsDefaultAttribute(Attribute this)</summary>
        </member>
        <member name="F:LoveTest.Fakes.StubStageName.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute(Attribute this)</summary>
        </member>
        <member name="M:LoveTest.Fakes.StubStageName.Match(System.Object)">
            <summary>Sets the Stub of Attribute.Match(Attribute this, Object obj)</summary>
        </member>
        <member name="F:LoveTest.Fakes.StubStageName.MatchObject">
            <summary>Sets the stub of Attribute.Match(Attribute this, Object obj)</summary>
        </member>
        <member name="P:LoveTest.Fakes.StubStageName.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId(Attribute this)</summary>
        </member>
        <member name="F:LoveTest.Fakes.StubStageName.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId(Attribute this)</summary>
        </member>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.LoveSharpDelegates">
            <summary>Contains custom delegates used for the stubs and shims of LoveSharp</summary>
        </member>
    </members>
</doc>
